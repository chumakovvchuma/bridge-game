{"version":3,"sources":["webpack:///./src/images/logo.svg","webpack:///./src/images/open.svg","webpack:///./src/images/play.svg","webpack:///./src/images/avatar/0.svg","webpack:///./src/images/avatar/1.svg","webpack:///./src/images/avatar/2.svg","webpack:///./src/images/avatar/3.svg","webpack:///./src/images/avatar/4.svg","webpack:///./src/images/avatar/5.svg","webpack:///./src/images/avatar/6.svg","webpack:///./src/images/avatar/7.svg","webpack:///./src/images/avatar/8.svg","webpack:///./src/images/avatar/9.svg","webpack:///./src/images/avatar/10.svg","webpack:///./src/images/avatar/11.svg","webpack:///./src/images/avatar/12.svg","webpack:///./src/images/avatar/13.svg","webpack:///./src/images/avatar/14.svg","webpack:///./src/images/avatar/15.svg","webpack:///./src/images/avatar/16.svg","webpack:///./src/images/avatar/17.svg","webpack:///./src/images/avatar/18.svg","webpack:///./src/images/avatar/19.svg","webpack:///./src/images/avatar/20.svg","webpack:///./src/images/avatar/robot.svg","webpack:///./src/images/avatar/avatar_slot.svg","webpack:///./src/images/avatar/21.svg","webpack:///./src/firebase/firebase.js","webpack:///./src/firebase/config.js","webpack:///./src/helper/helper.js","webpack:///./src/components/shape/shape.js","webpack:///./src/components/constant.js","webpack:///./src/reducer/reducer.js","webpack:///./src/components/thumbnail.js","webpack:///./src/components/userState.js","webpack:///./src/components/header.js","webpack:///./src/components/login.js","webpack:///./src/components/card.js","webpack:///./src/components/getCurrentMaxTrick.js","webpack:///./src/components/trick.js","webpack:///./src/components/socre.js","webpack:///./src/components/trickScore.js","webpack:///./src/components/scoreBoard.js","webpack:///./src/components/auctionList.js","webpack:///./src/components/auction.js","webpack:///./src/components/player.js","webpack:///./src/components/auctionResult.js","webpack:///./src/components/examineCards.js","webpack:///./src/components/getWinnerCard.js","webpack:///./src/components/progress.js","webpack:///./src/components/playerReadyList.js","webpack:///./src/components/game.js","webpack:///./src/components/sidebar/recordItem.js","webpack:///./src/components/dotIndicator/dot.js","webpack:///./src/components/sidebar/gameRecord.js","webpack:///./src/components/sidebar/hand.js","webpack:///./src/components/sidebar/rewindAuction.js","webpack:///./src/components/sidebar/rewindResult.js","webpack:///./src/components/sidebar/gameRewind.js","webpack:///./src/components/chatroom.js","webpack:///./src/components/sidebar/sidebar.js","webpack:///./src/components/loading.js","webpack:///./src/components/table.js","webpack:///./src/components/openTables.js","webpack:///./src/components/playingTables.js","webpack:///./src/components/lobby.js","webpack:///./src/components/signUp.js","webpack:///./src/index.js"],"names":["module","exports","__webpack_require__","p","firebaseApp","a","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","app","db","database","auth","onAuthChanged","callback","onAuthStateChanged","user","console","log","getNodeByPathOnce","path","action","ref","on","getNodeByPath","pushDataByPath","data","push","cancelListenDataChange","off","listenPathChildren","setNodeByPath","set","getDataByPathOnce","once","getNewChildKey","node","child","key","updateTableDataByID","id","updateTableGameDataByPath","game","setTableListData","getRandomKey","n","arguments","length","undefined","letter","Array","from","fill","map","w","Math","floor","random","join","getRandomInt","min","max","shape_Heart","_ref","scale","_ref$fill","react_default","createElement","shape_SvgContainer","ratio","d","shape_Spade","_ref2","_ref2$fill","shape_Diamond","_ref3","_ref3$fill","points","shape_Club","_ref4","_ref4$fill","_ref5","children","width","height","viewBox","transform","CARD_NUM","TIMER","RESULT","SUIT_SHAPE","0","1","2","3","4","CARD_RANK","DEFAULT_GAME","deal","bid","isDb","isRdb","trick","trump","order","isGameOver","PLAYERS","GAME_STATE","DIRECTION","Emoji","dispatch","type","store","Object","assign","reducer_dispatchToDatabase","uid","userInfo","currentUser","timeStamp","Date","getTime","players","slice","newPlayerInfo","uidKey","displayName","tableKey","linkId","tableRef","newTable","createTime","gameState","playerInfo","C1-robot","C2-robot","C3-robot","-1","ready","isOpen","table","tableData","record","playerIndex","updateTable","cards","newGame","targetCardIndex","findIndex","card","value","winnerCard","winner","isWin","player","targetCardInex","currentCard","maxTrick","color","emptySeatIndex","updatePlayers","message","time","newMessage","isPlayer","some","content","tableList","val","userList","redux","state","isLoad","tables","chatroom","updatedTables","currentTableId","closeTables","es","snapshot","Avatar","_0_default","_1_default","_2_default","_3_default","_4_default","5","_5_default","6","_6_default","7","_7_default","8","_8_default","9","_9_default","10","_10_default","11","_11_default","12","_12_default","13","_13_default","14","_14_default","15","_15_default","16","_16_default","17","_17_default","18","_18_default","19","_19_default","20","_20_default","avatarNum","keys","thumbnail_Thumbnail","_ref$name","name","_ref$size","size","_ref$disabled","disabled","_ref$offset","offset","_ref$border","border","_ref$styleName","isCurrentUser","styleName","_ref$robotMargin","robotMargin","_ref$robotOffset","robotOffset","shiftAvatar","split","str","charCodeAt","reduce","sum","num","source","includes","robot_default","className","style","borderRadius","marginTop","src","thumbnail_ThumbnailWithTag","_ref2$name","_ref2$size","_ref2$disabled","_ref2$offset","_ref2$border","_ref2$isCurrentUser","_ref2$styleName","thumbnail_ThumbailGroup","teamOrder","members","filter","index","thumbnail_ThumbailGroupWithTag","styleObj","styleOb","thumbnail_WaitingThumbnail","_React$Component","WaitingThumbnail","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","posY","position","stop","isGoingUp","changeImg","bind","timer","setInterval","_inherits","Component","_createClass","mount","setState","dy","prevProps","clearInterval","img","avatar_slot_default","userState","UserState","userState_classCallCheck","userState_possibleConstructorReturn","handleSignOut","closePanel","signOut","_this2","onClick","Link","to","components_header","Header","header_classCallCheck","header_possibleConstructorReturn","getUserAuthInfo","then","rightTopCorner","userProfile","registerBtns","roomNum","roomInfo","isTableColor","logo_default","login","Login","login_classCallCheck","login_possibleConstructorReturn","email","password","redirect","redirectToLobbyIfLogin","handleLogin","isMount","Promise","resolve","reject","Error","catch","error","_this3","_state","signInWithEmailAndPassword","err","_this4","Redirect","placeholder","onChange","e","currentTarget","card_TrickCard","card_Card","flipUp","_ref2$evt","evt","kind","wrapperName","getCurrentMaxTrick","apply","_toConsumableArray","components_trick","Trick","trick_classCallCheck","trick_possibleConstructorReturn","fadeOutCards","setTimeout","direction","_props","cardsByPlayer","isTrickFinish","currentTrick","hand","trickCards","sort","cardA","cardB","userHand","i","teamScore","teamA","teamB","winningScore","trickScore","TrickScore","trickScore_classCallCheck","trickScore_possibleConstructorReturn","windowWidth","windowHeight","score","playerList","innerStyle","resizeRatio","thumbnailSize","minWidth","scoreBoard","ScoreBoard","scoreBoard_classCallCheck","scoreBoard_possibleConstructorReturn","recordGame","_props$table","indexOf","playerTeamScore","winScore","resultWords","_game$bid","declarer","isUserWin","widnowHeight","auctionList_AuctionList","result","resultsNum","ceil","res","re","j","resultItem","opt","components_auction","Auction","auction_classCallCheck","auction_possibleConstructorReturn","visibility","current","updateBid","validateUserTurnAndsetTrump","newBid","isFinishAuction","isAllPass","every","hasValidTrump","_props2","trickOpt","trumpOpt","allTrickOpt","selectedTrump","DoubleBtn","ReDoubleBtn","playerThumbnails","player_Player","_ref$current","auctionResult_AuctionResult","AuctionResult","auctionResult_classCallCheck","auctionResult_possibleConstructorReturn","auctionResult_inherits","auctionResult_createClass","top","right","mapToFourHands","userIndex","examineCards_getRandomCards","randomIndex","validateShuffle","examineCards_fourHands","getWinnerCard_findMaxValueByTrump","arr","list","item","getWinnerCard_getWinnerCard","cardValue","cardsMatchCurrentTrick","noTrumpCards","first","getWinnerCard_toConsumableArray","_cardsMatchCurrentTri","firstHand","_slicedToArray","tmp","trumpRef","progress_Progress","totalWidth","currentWidth","_ref$height","_ref$fg","fg","_ref$bg","bg","total","fillRule","x","y","rx","playerReadyList","PlayerReadyList","playerReadyList_classCallCheck","playerReadyList_possibleConstructorReturn","timeInterval","frequency","progress","setReadyState","countDownTimer","checkReadyState","diffRange","timesUp","_props3","isAnyEmptySeat","seat","isAllPlayerReady","playBtns","currentVal","isTimesUp","totolProgress","thumbnails","playerName","currentUserCanPlay","zIndex","progressState","roomId","components_game","Game","game_classCallCheck","game_possibleConstructorReturn","endAuction","window","innerWidth","innerHeight","getNextMaxTrick","shuffle","suffleCardsWhenReady","handleResize","getAuctionStatus","addEventListener","removeEventListener","game_toConsumableArray","maxTrickNum","shuffleCards","isEndOfCurrentTrick","isDummyMode","hands","offsetIndex","examineCards_toConsumableArray","offsetPlayers","getOffsetDatabyCurrentUser","flipIndex","currentTurnPlayer","isCurrentUserPlayer","playerHand","playerHandIndex","b","display","mapResult","dislayList","flat","totalLen","mid","threeRow","mapFlipDownCards","firstCard","constant_PLAYER_NUM","examineCards_getFirstCard","hasFollowSameSuit","examineCards_hasSameSuitWithFirstCard","cardsInHand","each","declarerIndex","dummyPlayer","declarerPlayer","isValidCard","canBeClick","allowClickEvt","totalCardsInHand","suit","len","totalSuitType","sidebarWidth","horCardStyle","left","verTopPos","suitNum","getHandHeight","verEdgePos","isAllReady","startGame","bottom","sidebar_recordItem","RecordItem","recordItem_classCallCheck","recordItem_possibleConstructorReturn","changeRecord","dot_Dot","page","changePage","GameRecord","gameRecord_classCallCheck","gameRecord_possibleConstructorReturn","recordList","dots","dotsNum","concat","start","end","recordItem","currentRecord","dotItem","hand_Hand","displaySuit","rewindAuction_RewindAuction","rewindResult_RewindResult","GameRewind","gameRewind_classCallCheck","gameRewind_possibleConstructorReturn","_props$record","fourHands","components_chatroom","Chatroom","chatroom_classCallCheck","chatroom_possibleConstructorReturn","sendMessage","handleChange","handleKeyPress","addEmoji","msgEnd","emoji","scrollToBottom","scrollIntoView","behavior","block","messageList","emojiList","emj","viewers","symbol","backgroundColor","msg","el","float","clear","rows","col","onKeyPress","sidebar","Sidebar","sidebar_classCallCheck","sidebar_possibleConstructorReturn","tab","handleTab","marginLeft","loading","Loading","loading_classCallCheck","loading_possibleConstructorReturn","components_table","Table","table_classCallCheck","table_possibleConstructorReturn","updateTableData","match","params","location","hash","redirectToLogin","addPlayerToTable","randomColor_default","alreadyAPlayer","alreadyAViewer","Boolean","targetTable","openTables","OpenTables","openTables_classCallCheck","openTables_possibleConstructorReturn","createTable","setCurrentTable","tableLinks","tableCreateTime","emptySeats","PLAYER_NUM","owner","openBtn","title","components_playingTables","playingTables_classCallCheck","playingTables_possibleConstructorReturn","_props$tableList$key","playerKey","components_lobby","Lobby","lobby_classCallCheck","lobby_possibleConstructorReturn","open_default","open","play_default","signUp","SignUp","signUp_classCallCheck","signUp_possibleConstructorReturn","confirm","agreement","handleSignUp","createUserWithEmailAndPassword","updateUserInfo","updateProfile","src_App","App","src_classCallCheck","src_possibleConstructorReturn","getState","update","stopLoading","unSubscribe","subscribe","HashRouter","Route","exact","render","_extends","react_dom_default","document","getElementById"],"mappings":"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","file":"main.5580.js","sourcesContent":["module.exports = __webpack_public_path__ + \"a9a323fd5ae656a5e7131b60e27fe204.svg\";","module.exports = __webpack_public_path__ + \"67ce7d5a833d9fc83f623c431a6760ce.svg\";","module.exports = __webpack_public_path__ + \"7df62acafa694b8c1a4a0528fb6546cc.svg\";","module.exports = __webpack_public_path__ + \"f576168014a0a063e9a9067746d52afe.svg\";","module.exports = __webpack_public_path__ + \"faf9092c22feba281cd0b857153cf2ac.svg\";","module.exports = __webpack_public_path__ + \"d192d5a8c77493a9b9a15e4bad4856b1.svg\";","module.exports = __webpack_public_path__ + \"abc73620aa65da15acbe08e163313e69.svg\";","module.exports = __webpack_public_path__ + \"7b537845db343dc95978342656f3dc31.svg\";","module.exports = __webpack_public_path__ + \"2d2ff47c522a67f3797a22229173805c.svg\";","module.exports = __webpack_public_path__ + \"d6a663b6ce16afbdddedd183bfc0b95a.svg\";","module.exports = __webpack_public_path__ + \"698ae12ca4406b41dd2c2b5f4188f232.svg\";","module.exports = __webpack_public_path__ + \"11177e33f8a5453cc4a2af006bf9f0cc.svg\";","module.exports = __webpack_public_path__ + \"7eeb4128a906d97fc444f2ec6f7f2a1e.svg\";","module.exports = __webpack_public_path__ + \"2b61df562f9ceba376a217086ea0a4b8.svg\";","module.exports = __webpack_public_path__ + \"7613d518f4a31149fa31d1ef8fa9c9c8.svg\";","module.exports = __webpack_public_path__ + \"ab790a27815c6aedaebbd55078126d7a.svg\";","module.exports = __webpack_public_path__ + \"8046cef8ebd3096cc0a092095a911f45.svg\";","module.exports = __webpack_public_path__ + \"374c11fb9598eacab7db87323f15d7d7.svg\";","module.exports = __webpack_public_path__ + \"eec13f2e2f2341c89b52487b6c6f5531.svg\";","module.exports = __webpack_public_path__ + \"9da5b3a25ce2afe1ff9a69a9a480b099.svg\";","module.exports = __webpack_public_path__ + \"7b799210bff006a8a7cdc13de038aa1c.svg\";","module.exports = __webpack_public_path__ + \"fa7e619e21d79bd64b2932efa099a21a.svg\";","module.exports = __webpack_public_path__ + \"29fd5a207752c8fb18bdeffe7c7f8c24.svg\";","module.exports = __webpack_public_path__ + \"addf317cff816fe4d291212403763c59.svg\";","module.exports = __webpack_public_path__ + \"85cd94bb43adfe2943685ae19c1ae96e.svg\";","module.exports = __webpack_public_path__ + \"86e690f3ad2e18fae51f04c2e64f688d.svg\";","module.exports = __webpack_public_path__ + \"8ca025b877e870030ea3af1681978e68.svg\";","import firebase from \"firebase\";\nimport {config} from \"./config.js\";\n\nexport const firebaseApp = firebase.initializeApp(config);\n\nexport const app = {\n  db: firebaseApp.database(),\n  auth: firebaseApp.auth(),\n  onAuthChanged: callback => {\n    firebaseApp.auth().onAuthStateChanged(user => {\n      if (user) {\n        callback(user);\n      } else {\n        console.log(\"no one login\");\n      }\n    });\n  },\n  getNodeByPathOnce: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .on(\"value\", action);\n  },\n  getNodeByPath: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .on(\"value\", action);\n  },\n  pushDataByPath: (path, data) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .push(data);\n  },\n  cancelListenDataChange: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .off(\"value\", action);\n  },\n  listenPathChildren: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .off(\"value\");\n  },\n  setNodeByPath: (path, data) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .set(data);\n  },\n  getDataByPathOnce: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .once(\"value\", action);\n  },\n  getNewChildKey: node => {\n    return firebaseApp\n      .database()\n      .ref()\n      .child(node)\n      .push().key;\n  },\n  updateTableDataByID: (id, data) => {\n    firebaseApp\n      .database()\n      .ref(`tables/${id}/`)\n      .set(data);\n  },\n  updateTableGameDataByPath: (path, game) => {\n    firebaseApp\n      .database()\n      .ref(\"tables/\" + path)\n      .set(game);\n  },\n  setTableListData: (id, data) => {\n    firebaseApp\n      .database()\n      .ref(`tableList/${id}/`)\n      .set(data);\n  }\n};\n","export const config = {\n  apiKey: \"AIzaSyDsmWxFexrd890dUvpA313qvxvcjDRp1Ok\",\n  authDomain: \"wowbridge88.firebaseapp.com\",\n  databaseURL: \"https://wowbridge88.firebaseio.com\",\n  projectId: \"wowbridge88\",\n  storageBucket: \"wowbridge88.appspot.com\",\n  messagingSenderId: \"862342003288\"\n};\n","export const getKeywordFromURL = () => {\n  let urlLocation = window.location.search,\n    index = urlLocation.search(/=/g);\n  if (!urlLocation) return \"\";\n  return urlLocation.slice(index + 1, urlLocation.length);\n};\n\nexport const getKeywordObjFromURL = () => {\n  let keyword = getKeywordFromURL();\n  let urlLocation = window.location.search,\n    index = urlLocation.search(/=/g);\n  return {\n    key: urlLocation.slice(1, index),\n    value: getKeywordFromURL()\n  };\n};\n\nexport const getRandomKey = (n = 8) => {\n  let letter = \"abcdefghijklmnopqrstuvxyzABCDEFGHIJKLMNOPQRSTUVXYZ\";\n  return Array.from({length: n})\n    .fill(0)\n    .map(w => letter[Math.floor(Math.random() * (letter.length - 1))])\n    .join(\"\");\n};\n\nexport const getObj = (key, value) => {\n  let newObj = {};\n  newObj[key] = value;\n  return Object.assign({}, newObj);\n};\n\nexport const getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getObjSortKey = obj => {\n  if (!obj) {\n    return null;\n  }\n  return Object.keys(obj).sort((a, b) => a < b);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet redColor = \"#FF525D\";\nlet blackColor = \"#222222\";\n\nexport const Heart = ({scale, fill = \"#FF525D\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={0.89} fill={fill}>\n      <path d=\"M70.9643211,0 C59.2565148,0 53.056072,5.64335169 49.9709368,10.1546618 C46.889795,5.64335169 40.6986702,0 29.0152682,0 C15.0405332,0 0,9.29808951 0,29.7129874 C0,37.7588224 1.74734105,44.1438566 5.84192287,51.0638602 C9.82779506,57.7993304 18.2685439,66.1002296 30.9298889,75.7372219 C35.8715185,79.4984213 40.4235682,82.6625486 43.3724836,84.6547112 C49.0391399,88.4833363 49.2609963,88.5228158 49.9456452,88.5232594 C49.9802548,88.5241466 50.0135332,88.5245902 50.0468117,88.5245902 C50.6941887,88.5245902 51.1401201,88.3183208 56.5574098,84.6764471 C59.5081,82.6922691 64.0641431,79.5401188 69.0102098,75.7873476 C81.6870849,66.1698733 90.1513504,57.851674 94.1682825,51.0643038 C98.2557649,44.1571643 100,37.7712429 100,29.713431 C100,9.29808951 84.9488177,0 70.9643211,0 Z\" />\n    </SvgContainer>\n  );\n};\n\nexport const Spade = ({scale, fill = \"#222\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={1} fill={fill}>\n      <path\n        d=\"M88.5085925,35.4545714 C84.7618726,29.0791639 76.8279859,21.2225289 64.9275728,12.1017285 C60.2811897,8.54098888 56.0030971,5.54662558 53.2315338,3.66150342 C47.8489868,0 47.6921609,0 47.0310732,0 C46.3716539,0 46.2152451,0 40.8347835,3.64219036 C38.0615518,5.52017509 33.7788713,8.50362231 29.1295686,12.0555451 C17.2145573,21.1574523 9.25814768,29.0300415 5.48264861,35.4541516 C1.63958096,41.9928804 0,48.0361874 0,55.6623252 C0,74.9846174 14.1481113,83.785073 27.2935382,83.785073 C33.059808,83.785073 37.4025496,82.3177007 40.6500126,80.3074635 L37.0551136,94 L56.8014075,94 L53.1693874,80.1668141 C56.4343682,82.2488454 60.8367536,83.785073 66.7252308,83.785073 C79.8614817,83.785073 94,74.9846174 94,55.6623252 C94,48.0475233 92.3579165,42.0042164 88.5085925,35.4545714 Z\"\n        fill={fill}\n      />\n    </SvgContainer>\n  );\n};\n\nexport const Diamond = ({scale, fill = \"#FF525D\"}) => {\n  let w = 93,\n    h = 100;\n  return (\n    <SvgContainer scale={scale} ratio={1} fill={fill}>\n      <polygon\n        points={`${w / 2} 0 0 ${h / 2} ${w / 2} ${h} ${w} ${h / 2}`}\n      />\n    </SvgContainer>\n  );\n};\n\nexport const Club = ({scale, fill = \"#222\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={0.98} fill={fill}>\n      <path\n        d=\"M70.3555185,31.9345189 C71.174537,29.4903991 71.587963,26.9404062 71.587963,24.3163882 C71.587963,10.9083748 60.5577593,0 47,0 C33.4422407,0 22.412037,10.9083748 22.412037,24.3163882 C22.412037,26.9404062 22.825463,29.4903991 23.6444815,31.9345189 C10.5223426,32.426872 0,43.137703 0,56.2332616 C0,69.641275 11.0302037,80.5496498 24.587963,80.5496498 C30.872037,80.5496498 36.6116944,78.2040867 40.9631111,74.3539201 L35.6686481,92.1010101 L58.1820833,92.1010101 L52.8323519,74.1692877 C57.2077037,78.12834 63.0287407,80.5496498 69.412037,80.5496498 C82.9697963,80.5496498 94,69.641275 94,56.2332616 C94,43.137703 83.4776574,32.426872 70.3555185,31.9345189 Z\"\n        fill={fill}\n      />\n    </SvgContainer>\n  );\n};\n\nconst SvgContainer = ({children, ratio, scale, fill}) => {\n  let width = scale * 100,\n    height = Math.floor(width * ratio);\n  return (\n    <div>\n      <svg\n        width={`${width}px`}\n        height={`${height}px`}\n        viewBox={`0 0 ${width} ${height}`}>\n        <g fill={fill} transform={`scale(${scale})`}>\n          {children}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {Heart, Spade, Diamond, Club} from \"./shape/shape.js\";\nexport const CARD_NUM = {\n  TOTAL: 52,\n  SUITS: 4,\n  HAND: 13\n};\n\nexport const TIMER = {\n  join: 15000,\n\n}\nexport const ROBOT_NAME = \"-robot\" ;\n\nexport const RESULT = {\n  win: \"YOU WIN\",\n  lose: \"YOU LOSE\"\n};\n\nexport const PLAYER_NUM = 4;\nexport const EMPTY_SEAT = -1;\nexport const NO_TRUMP = 4;\nexport const BID_NUM = [1, 2, 3, 4, 5, 6, 7];\n\nexport const SUIT_SHAPE = {\n  0: (scale, fill) => <Club scale={scale} fill={fill} />,\n  1: (scale, fill) => <Diamond scale={scale} fill={fill} />,\n  2: (scale, fill) => <Heart scale={scale} fill={fill} />,\n  3: (scale, fill) => <Spade scale={scale} fill={fill} />,\n  4: scale => <div>NT</div>\n};\n\nexport const CARD_RANK = [2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"A\"];\n\nexport const DEFAULT_GAME = {\n  deal: 0,\n  bid: {\n    isDb: false,\n    isRdb: false,\n    trick: 0,\n    trump: -1\n  },\n  order: -1,\n  isGameOver: false\n};\n\nexport const PLAYERS = [EMPTY_SEAT, EMPTY_SEAT, EMPTY_SEAT, EMPTY_SEAT];\nexport const GAME_STATE = {\n  join: \"join\",\n  auction: \"auction\",\n  playing: \"playing\",\n  gameover: \"gameover\",\n  close: \"close\"\n};\n\nexport const TAB_OPTION = [\"Chat\", \"Result\"];\n\nexport const DIRECTION = [\"south\", \"west\", \"north\", \"east\"];\n\nexport const Emoji = [\n  \"🤔\",\n  \"🤣\",\n  \"🤩\",\n  \"😝\",\n  \"😍\",\n  \"😵\",\n  \"🙄\",\n  \"🤭\",\n  \"😱\",\n  \"🤷\",\n  \"👍\",\n  \"👎\",\n  \"👯\",\n  \"👀\",\n  \"🐷\",\n  \"🎉\",\n  \"🎃\",\n  \"🍺\",\n  \"🔥\",\n  \"🛁\"\n];\n","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {app, firebaseApp} from \"../firebase/firebase.js\";\nimport {getObj} from \"../helper/helper.js\";\nimport {\n  GAME_STATE,\n  EMPTY_SEAT,\n  DEFAULT_GAME,\n  PLAYERS\n} from \"../components/constant.js\";\n\nexport const dispatch = (type, action) =>\n  store.dispatch(Object.assign({}, {type: type}, action));\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_USER_INFO\": {\n      return Object.assign({}, state, {\n        user: action.user,\n        uid: action.uid,\n        userInfo: action.userInfo\n      });\n    }\n    case \"UPDATE_USER_LIST\": {\n      return Object.assign({}, state, {\n        userList: action.userList\n      });\n    }\n    case \"STOP_LOADING\": {\n      return Object.assign({}, state, {isLoad: action.isLoad});\n    }\n    case \"FETCH_TABLE_DATA\": {\n      // tables is an array, query table by index\n      return Object.assign({}, state, {tables: action.tables});\n    }\n    case \"UPDATE_CHAT_ROOM\": {\n      return Object.assign({}, state, {chatroom: action.chatroom});\n    }\n    case \"UPDATE_TABLE_DATA\": {\n      let {id, table} = action;\n      let tables = state.tables;\n      let updatedTables = Object.assign({}, tables);\n      updatedTables[id] = table;\n      return Object.assign({}, state, {tables: updatedTables});\n    }\n    case \"UPDATE_CURRENT_TABLE_ID\": {\n      return Object.assign({}, state, {\n        currentTableId: action.currentTableId\n      });\n    }\n    case \"FETCH_TABLE_LIST\": {\n      // tables is an array, query table by index\n      return Object.assign({}, state, {tableList: action.tableList});\n    }\n    default:\n      return state;\n  }\n};\n\nexport const dispatchToDatabase = (type, action) => {\n  switch (type) {\n    case \"CREATE_USER\": {\n      app.setNodeByPath(`/users/${action.uid}`, action.userInfo);\n      break;\n    }\n\n    case \"CREATE_TABLE\": {\n      let {currentUser} = action;\n      if (!action.currentUser.uid) {\n        console.log(\"user is not login\");\n        return;\n      }\n      let timeStamp = new Date().getTime();\n      let players = PLAYERS.slice(0);\n      let newPlayerInfo = {};\n      let uidKey = `${currentUser.uid}`;\n      newPlayerInfo[uidKey] = {displayName: currentUser.displayName};\n      players[0] = action.currentUser.uid;\n      let tableKey = app.getNewChildKey(\"tables\");\n      let linkId = action.tableRef || timeStamp;\n      let newTable = {\n        timeStamp: linkId,\n        createTime: linkId,\n        gameState: GAME_STATE.join,\n        id: tableKey,\n        linkId: linkId,\n        game: DEFAULT_GAME,\n        playerInfo: Object.assign(\n          {},\n          {\n            \"C1-robot\": {displayName: \"C1-robot\"},\n            \"C2-robot\": {displayName: \"C2-robot\"},\n            \"C3-robot\": {displayName: \"C3-robot\"},\n            \"-1\": {displayName: \"\"}\n          },\n          newPlayerInfo\n        ),\n        players: players,\n        ready: [false, false, false, false]\n      };\n      app.setNodeByPath(`tables/${tableKey}`, newTable);\n      app.setTableListData(linkId, {\n        id: tableKey,\n        isOpen: true,\n        players: players,\n        playerInfo: Object.assign(\n          {},\n          {\n            \"C1-robot\": {displayName: \"C1-robot\"},\n            \"C2-robot\": {displayName: \"C2-robot\"},\n            \"C3-robot\": {displayName: \"C3-robot\"},\n            \"-1\": {displayName: \"\"}\n          },\n          newPlayerInfo\n        )\n      });\n      break;\n    }\n\n    case \"CREATE_NEW_GAME\": {\n      let {table} = action;\n      let tableData = Object.assign({}, table);\n      let {record, game} = tableData;\n      if (record) {\n        record.push(game);\n      } else {\n        record = [game];\n      }\n      // reset table\n      let timeStamp = new Date().getTime();\n\n      tableData.record = record;\n      tableData.createTime = timeStamp;\n      tableData.game = Object.assign({}, DEFAULT_GAME);\n      tableData.ready = [false, false, false, false];\n      tableData.timeStamp = timeStamp;\n      tableData.gameState = GAME_STATE.join;\n      app.updateTableDataByID(tableData.id, tableData);\n      break;\n    }\n    case \"READY_A_PLAYER\": {\n      let {table, playerIndex} = action;\n      let updateTable = Object.assign({}, table);\n      updateTable.ready[playerIndex] = true;\n      app.setNodeByPath(`tables/${table.id}`, updateTable);\n      break;\n    }\n    case \"UPDATE_TABLE_TIMESTAMP\": {\n      app.setNodeByPath(\n        `tables/${action.id}/timeStamp/`,\n        new Date().getTime()\n      );\n      break;\n    }\n    case \"ADD_NEW_DECK_TO_TABLE\": {\n      // todo, use high order function to wrap this\n      // create a game\n      let {cards, table} = action;\n      let newGame = Object.assign({}, table.game, {\n        cards: cards\n      });\n      app.updateTableDataByID(`${table.id}/game/`, newGame);\n      break;\n    }\n    case \"UPDATE_WINNER_CARD\": {\n      // todo, use high order function to wrap this\n      let {table} = action;\n      let game = Object.assign({}, table.game);\n\n      let cards = game.cards;\n      game.order = action.order;\n\n      // update which player will draw first\n      let targetCardIndex = cards.findIndex(\n        card => card.value === action.winnerCard.value\n      );\n      let winner = action.winnerCard;\n      winner.isWin = true;\n      game.deal = winner.player;\n      cards[targetCardIndex] = winner;\n      // 51 means the index in the card array , the n-52 cards is given\n      if (action.order === 51) {\n        game.isGameOver = true;\n      }\n      app.updateTableDataByID(`${table.id}/game/`, game);\n      break;\n    }\n    case \"UPDATE_CURRENT_TRICK\": {\n      // update this is how many trick players have been draw\n\n      let {table, order, deal} = action;\n      let {game} = table;\n      app.updateTableGameDataByPath(`${table.id}/game/order/`, order);\n\n      let cards = game.cards;\n\n      let targetCardInex = cards.findIndex(\n        card => card.value === action.value\n      );\n\n      let currentCard = cards[targetCardInex];\n      currentCard.order = order;\n\n      // update deal order, who can draw card next\n      app.updateTableGameDataByPath(`${table.id}/game/deal/`, deal);\n      app.updateTableGameDataByPath(\n        `${table.id}/timeStamp/`,\n        new Date().getTime()\n      );\n\n      // this card has been draw in nth trick\n      // set current trick number to this card\n      if (currentCard.trick === 0) {\n        // update trick to current nth trick, e.g. players have play 4 tricks\n        // so far, the maxTrick will be 5\n        currentCard.trick = action.maxTrick;\n        // record who has this card\n        currentCard.player = (deal + 4 - 1) % 4;\n\n        app.updateTableGameDataByPath(\n          `${table.id}/game/cards/${targetCardInex}`,\n          currentCard\n        );\n      }\n      break;\n    }\n    case \"ADD_VIEWER_TO_TABLE\": {\n      let {currentUser, table, color} = action;\n      let {linkId, id} = table;\n      app.setNodeByPath(`tables/${id}/viewers/${currentUser.uid}`, color);\n      app.updateTableGameDataByPath(\n        `${id}/timeStamp/`,\n        new Date().getTime()\n      );\n      // if anyone join this table, update data to table list\n      break;\n    }\n    case \"ADD_PLAYER_TO_TABLE\": {\n      let {currentUser, table, emptySeatIndex, color} = action;\n      let {linkId, id, players} = table;\n\n      app.setNodeByPath(\n        `tables/${id}/players/${emptySeatIndex}`,\n        currentUser.uid\n      );\n      app.setNodeByPath(`tables/${id}/playerInfo/${currentUser.uid}`, {\n        displayName: currentUser.displayName\n      });\n      app.setNodeByPath(`tables/${id}/viewers/${currentUser.uid}`, color);\n      // if anyone join this table, update data to table list\n      let updatePlayers = players.slice(0);\n      updatePlayers[emptySeatIndex] = currentUser.uid;\n      app.setNodeByPath(`tableList/${linkId}/players`, updatePlayers);\n      app.setNodeByPath(\n        `tableList/${linkId}/playerInfo/${currentUser.uid}`,\n        {displayName: currentUser.displayName}\n      );\n      app.updateTableGameDataByPath(\n        `${id}/timeStamp/`,\n        new Date().getTime()\n      );\n\n      break;\n    }\n    case \"UPDATE_AUCTION\": {\n      // in order to detect if some user isn't online anymore\n      // record current to database when a current user is deal\n      app.updateTableGameDataByPath(\n        `${action.table.id}/game/`,\n        action.game\n      );\n      app.updateTableGameDataByPath(\n        `${action.table.id}/timeStamp/`,\n        new Date().getTime()\n      );\n      break;\n    }\n    case \"SEND_MESSAGE_TO_CHATROOM\": {\n      let {message, currentUser, table} = action;\n      let time = new Date().getTime();\n      let newMessage = {};\n      newMessage.isPlayer = table.players.some(\n        player => player === currentUser.uid\n      );\n      newMessage.content = action.message;\n      newMessage.uid = currentUser.uid;\n      newMessage.displayName = currentUser.displayName;\n      app.setNodeByPath(\n        `chatroom/${table.id}/message/${time}/`,\n        newMessage\n      );\n    }\n    default:\n      return null;\n  }\n};\n\n// app.getNodeByPathOnce(\"tables\", value => {\n//   return dispatch(\"FETCH_TABLE_DATA\", {tables: value.val()});\n// });\n\napp.getNodeByPath(\"tableList\", value => {\n  return dispatch(\"FETCH_TABLE_LIST\", {tableList: value.val()});\n});\n\napp.getNodeByPath(\"users\", value => {\n  return dispatch(\"UPDATE_USER_LIST\", {userList: value.val()});\n});\n\nexport const store = createStore(\n  appReducer,\n  {\n    currentUser: null,\n    isLoad: false,\n    tables: {},\n    currentTableId: null,\n    closeTables: {}\n  },\n  applyMiddleware(thunk)\n);\n\napp.auth.onAuthStateChanged(user => {\n  if (user) {\n    app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n      let userInfo = snapshot.val();\n      dispatch(\"UPDATE_USER_INFO\", {\n        user: user,\n        uid: user.uid,\n        userInfo: snapshot.val()\n      });\n    });\n    // }\n  } else {\n    return dispatch(\"UPDATE_USER_INFO\", {\n      uid: null,\n      userInfo: null,\n      user: null\n    });\n  }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/thumbnail.scss\";\nimport {ROBOT_NAME} from \"./constant.js\";\n// import ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport avatar0 from \"../images/avatar/0.svg\";\nimport avatar1 from \"../images/avatar/1.svg\";\nimport avatar2 from \"../images/avatar/2.svg\";\nimport avatar3 from \"../images/avatar/3.svg\";\nimport avatar4 from \"../images/avatar/4.svg\";\nimport avatar5 from \"../images/avatar/5.svg\";\nimport avatar6 from \"../images/avatar/6.svg\";\nimport avatar7 from \"../images/avatar/7.svg\";\nimport avatar8 from \"../images/avatar/8.svg\";\nimport avatar9 from \"../images/avatar/9.svg\";\nimport avatar10 from \"../images/avatar/10.svg\";\nimport avatar11 from \"../images/avatar/11.svg\";\nimport avatar12 from \"../images/avatar/12.svg\";\nimport avatar13 from \"../images/avatar/13.svg\";\nimport avatar14 from \"../images/avatar/14.svg\";\nimport avatar15 from \"../images/avatar/15.svg\";\nimport avatar16 from \"../images/avatar/16.svg\";\nimport avatar17 from \"../images/avatar/17.svg\";\nimport avatar18 from \"../images/avatar/18.svg\";\nimport avatar19 from \"../images/avatar/19.svg\";\nimport avatar20 from \"../images/avatar/20.svg\";\nimport avatar21 from \"../images/avatar/21.svg\";\nimport robot from \"../images/avatar/robot.svg\";\nimport avatarSlot from \"../images/avatar/avatar_slot.svg\";\n\nconst Avatar = {\n  0: avatar0,\n  1: avatar1,\n  2: avatar2,\n  3: avatar3,\n  4: avatar4,\n  5: avatar5,\n  6: avatar6,\n  7: avatar7,\n  8: avatar8,\n  9: avatar9,\n  10: avatar10,\n  11: avatar11,\n  12: avatar12,\n  13: avatar13,\n  14: avatar14,\n  15: avatar15,\n  16: avatar16,\n  17: avatar17,\n  18: avatar18,\n  19: avatar19,\n  20: avatar20\n};\n\nconst avatarNum = Object.keys(Avatar).length;\nexport const Thumbnail = ({\n  name = \"\",\n  size = 40,\n  disabled = false,\n  offset = 16,\n  border = false,\n  isCurrentUser = false,\n  styleName = null,\n  robotMargin = 0,\n  robotOffset = -5\n}) => {\n  let shiftAvatar = avatarNum;\n  if (name.length) {\n    shiftAvatar =\n            name\n              .split(\"\")\n              .map(str => str.charCodeAt(str) || +str)\n              .reduce((sum, num) => sum + num, 0) % avatarNum;\n  }\n  let source = Avatar[shiftAvatar];\n  if (name.includes(ROBOT_NAME)) {\n    source = robot;\n  }\n  return (\n    <div\n      className={`thumbnail disabled ${styleName}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size\n      }}>\n      <div\n        className={\n          border\n            ? \"thumbnail-inner thumbnail-outline\"\n            : \"thumbnail-inner\"\n        }>\n        <div className=\"border-style\">\n          <img\n            className={disabled ? \"disabled\" : \"\"}\n            style={{marginTop: robotMargin}}\n            width={\n              border\n                ? size - offset + 5 + robotOffset\n                : size - offset + robotOffset\n            }\n            src={source}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const ThumbnailWithTag = ({\n  name = \"\",\n  size = 40,\n  disabled = false,\n  offset = 16,\n  border = false,\n  isCurrentUser = false,\n  styleName = null\n}) => {\n  return (\n    <div className=\"thumbnail-with-tag\">\n      <div className=\"tag\" />\n      <Thumbnail\n        name={name}\n        size={size}\n        disabled={disabled}\n        offset={offset}\n        border={border}\n        isCurrentUser={isCurrentUser}\n        styleName={styleName}\n      />\n    </div>\n  );\n};\n\nexport const ThumbailGroup = ({players, size, teamOrder}) => {\n  let team = players.filter((player, index) => index % 2 === teamOrder);\n  let members = team.map((player, index) => (\n    <Thumbnail key={`member-${index}`} name={player} size={size} />\n  ));\n  return <div className=\"thumbnail-group\">{members}</div>;\n};\n\nexport const ThumbailGroupWithTag = ({\n  players,\n  currentUser,\n  size,\n  styleObj,\n  teamOrder,\n  styleOb,\n  offset\n}) => {\n  let team = players.filter((player, index) => index % 2 === teamOrder);\n  let members = team.map((player, index) => {\n    if (player === currentUser.displayName) {\n      return (\n        <ThumbnailWithTag\n          key={`member-${index}`}\n          offset={offset}\n          name={player}\n          size={size}\n        />\n      );\n    } else {\n      return (\n        <Thumbnail\n          offset={offset}\n          key={`member-${index}`}\n          name={player}\n          size={size}\n        />\n      );\n    }\n  });\n  return (\n    <div className=\"thumbnail-group\" style={styleObj}>\n      {members}\n    </div>\n  );\n};\n\nexport class WaitingThumbnail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posY: Math.floor(Math.random() * 40),\n      position: 0,\n      stop: false,\n      isGoingUp: true,\n      name: \"enter\"\n    };\n    this.changeImg = this.changeImg.bind(this);\n    this.timer = setInterval(this.changeImg, 20);\n  }\n  componentDidMount() {\n    this.mount = true;\n  }\n  componentWillUnmount() {\n    this.mount = false;\n  }\n  changeImg() {\n    if (!this.mount) return;\n    let {posY} = this.state;\n    if (this.state.posY > 50) {\n      this.setState({isGoingUp: false});\n    } else if (this.state.posY < -50) {\n      this.setState({isGoingUp: true});\n    }\n    let dy;\n    if (this.state.isGoingUp) {\n      dy = Math.floor(Math.random() * 2);\n    } else if (this.state.isGoingUp === false) {\n      dy = Math.floor(Math.random() * -3);\n    }\n\n    this.setState({posY: posY + dy});\n  }\n  componentDidUpdate(prevProps) {\n    if (!this.mount) return;\n    if (this.props.stop !== prevProps.stop && this.props.stop === true) {\n      this.setState({stop: true, posY: 40});\n      clearInterval(this.timer);\n    }\n  }\n  render() {\n    let size = this.props.size || 30;\n    let disabled = this.props.disabled || false;\n    let pos = this.state.position;\n    let name = disabled ? `disabled ${this.state.name}` : this.state.name;\n    let img = (\n      <img\n        className={name}\n        style={{\n          transform: `translateY(${this.state.posY}%) scale(1.07)`\n        }}\n        width={size - 16}\n        src={avatarSlot}\n      />\n    );\n    return (\n      <div\n        className=\"waiting-thumbnail disabled\"\n        style={{\n          width: size,\n          height: size,\n          borderRadius: size\n        }}>\n        {img}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {ThumbnailWithTag} from \"./thumbnail.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport {Link} from \"react-router-dom\";\nimport {dispatch} from \"../reducer/reducer.js\";\nimport \"../style/user-state.scss\";\n\nexport default class UserState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.closePanel = this.closePanel.bind(this);\n  }\n  handleSignOut() {\n    this.closePanel();\n    app.auth.signOut();\n  }\n  closePanel() {\n    this.setState({isOpen: false});\n  }\n  render() {\n    let {currentUser} = this.props;\n    return (\n      <div className=\"user-state-panel\">\n        <div\n          className={\n            this.state.isOpen\n              ? \"Login-state-btn open-btn\"\n              : \"Login-state-btn\"\n          }\n          onClick={() => this.setState({isOpen: !this.state.isOpen})}>\n          <ThumbnailWithTag\n            isCurrentUser={true}\n            size={40}\n            offset={5}\n            name={(currentUser && currentUser.displayName) || \"\"}\n          />\n          <div>\n            <h6>{currentUser.displayName}</h6>\n            <span>線上</span>\n          </div>\n        </div>\n        <div className={this.state.isOpen ? \"options open\" : \"options\"}>\n          <Link onClick={this.handleSignOut} to=\"/\">\n                登出\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport \"../style/header.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport logoImg from \"../images/logo.svg\";\nimport {dispatch} from \"../reducer/reducer.js\";\nimport UserState from \"./userState.js\";\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    let _this = this;\n    if (!this.props.currentUser) {\n      this.props.getUserAuthInfo().then(user => {\n        console.log(_this.props.currentUser);\n        _this.setState({isLoad: true});\n      });\n    }\n  }\n  render() {\n    let userProfile = <UserState currentUser={this.props.currentUser} />;\n    let rightTopCorner;\n    let registerBtns = (\n      <div className=\"register-btn-groups\">\n        <Link to=\"/signup\">註冊</Link>\n        <Link to=\"/login\">登入</Link>\n      </div>\n    );\n    rightTopCorner =\n            this.props.currentUser && this.props.currentUser.uid\n              ? userProfile\n              : registerBtns;\n    let {roomNum} = this.props;\n    let roomInfo = null;\n    if (roomNum) {\n      roomNum = `${roomNum}`;\n      roomInfo =\"桌號 \" + roomNum.slice(roomNum.length - 3, roomNum.length);\n    }\n    return (\n      <header className={this.props.isTableColor ? \"table-header\" : \"\"}>\n        <div>\n          <Link to=\"/\">\n            <img src={logoImg} />\n            <h1>Wow Bridge</h1>\n          </Link>\n        </div>\n        <div>\n          <h3>{roomInfo}</h3>\n        </div>\n        <div>\n          <div>{rightTopCorner}</div>\n        </div>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport {dispatch, store} from \"../reducer/reducer.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/signup.scss\";\nimport \"../style/btn.scss\";\nimport \"../style/checkbox.scss\";\nimport Header from \"./header.js\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      redirect: false\n    };\n    this.redirectToLobbyIfLogin();\n    this.redirectToLobbyIfLogin = this.redirectToLobbyIfLogin.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n  componentDidMount() {\n    this.isMount = true;\n  }\n  componentWillUnmountMount() {\n    this.isMount = false;\n  }\n  redirectToLobbyIfLogin() {\n    // todo\n    let promise = new Promise((resolve, reject) => {\n      app.onAuthChanged(user => {\n        if (user && this.isMount) {\n          resolve(user);\n          this.setState({redirect: true});\n        } else {\n          throw new Error(\"cancel redirect behavior\");\n        }\n      });\n    }).catch(error => console.log(error.message));\n  }\n  handleLogin() {\n    let auth = app.auth;\n    let {email, password} = this.state;\n    if (!email || !password) return;\n    let promise = auth.signInWithEmailAndPassword(email, password);\n    promise\n      .then(user => this.setState({redirect: true}))\n      .catch(err => this.setState({error: err.message}));\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"singup-wrapper\">\n          <div className=\"signup login\">\n            <h2>登入</h2>\n            <div>\n              <h3>電子信箱</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Email address\"\n                onChange={e => {\n                  this.setState({\n                    email: e.currentTarget.value\n                  });\n                }}\n                value={this.state.email}\n              />\n            </div>\n            <div>\n              <h3>密碼</h3>\n              <input\n                placeholder=\"Enter password\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    password: e.currentTarget.value\n                  });\n                }}\n                value={this.state.password}\n              />\n            </div>\n            <div className=\"error-text\">\n              {this.state.error || \"\"}\n            </div>\n            <div>\n              <div className=\"btn-group\">\n                <button\n                  onClick={this.handleLogin}\n                  className=\"btn-style-round\">\n                                    登入\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"./constant.js\";\nimport \"../style/reset.scss\";\nimport \"../style/card.scss\";\n\nexport const TrickCard = ({value}) => {\n  return (\n    <div className=\"abbbbbbbbbbbbb\">\n      <Card flipUp={true} value={value} />\n    </div>\n  );\n};\n\nexport const Card = ({value, evt = null, flipUp, name = null}) => {\n  let kind = Math.floor(value / CARD_NUM.HAND);\n  let wrapperName = name ? `card-wrapper ${name}` : \"card-wrapper\";\n  if (flipUp) {\n    return (\n      <div\n        className={wrapperName}\n        onClick={() => {\n          if (evt) {\n            evt(value);\n          }\n        }}>\n        <div className=\"card flip-up\">\n          <div className=\"card-inner\">\n            <div\n              className={\n                kind === 1 || kind === 2\n                  ? \"red value\"\n                  : \"black value\"\n              }>\n              {CARD_RANK[value % CARD_NUM.HAND]}\n            </div>\n            {SUIT_SHAPE[kind](0.235)}\n            <div className=\"large-shape\">\n              {SUIT_SHAPE[kind](0.5)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={wrapperName}>\n        <div className=\"card flip-down\">\n          <div className=\"card-inner\" />\n        </div>\n      </div>\n    );\n  }\n};\n","export const getCurrentMaxTrick = cards => {\n  if (!cards) return null;\n  return Math.max(...cards.map(card => card.trick));\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {Card, TrickCard} from \"./card.js\";\nimport {getCurrentMaxTrick} from \"./getCurrentMaxTrick.js\";\nimport \"../style/game.scss\";\n\nexport default class Trick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeOutCards: false\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.order !== prevProps.order) {\n      if (this.props.order % 4 === 3) {\n        setTimeout(() => this.setState({fadeOutCards: true}), 2000);\n      } else {\n        this.setState({fadeOutCards: false});\n      }\n    }\n  }\n  render() {\n    let direction = [\"south-card\", \"west-card\", \"north-card\", \"east-card\"];\n    let {order, cards, cardsByPlayer, isTrickFinish} = this.props;\n    if (!cards) {\n      return null;\n    }\n\n    let currentTrick = null,\n      maxTrick = getCurrentMaxTrick(cards);\n\n    // cause maxTrick will increase if there are already four cards\n    if (maxTrick === 0) {\n      maxTrick = 1;\n    }\n\n    // show cards sequence by player order\n    if (cardsByPlayer && !this.state.fadeOutCards) {\n      // sorting tricks by player index, and filter cards by max trick\n      currentTrick = cardsByPlayer.map((hand, index) => {\n        hand = hand.sort((cardA, cardB) => cardA.value - cardB.value);\n        let trickCards = hand.map( (userHand, i) => {\n          if (userHand.trick === maxTrick) {\n            return (\n              <TrickCard\n                key={`trick-card-x-index-${index}-${i}`}\n                value={userHand.value}\n              />\n            );\n          }\n        });\n\n        let hasTrickCards =\n                    trickCards.filter(\n                      card => card !== null && card !== undefined\n                    ).length > 0;\n        if (hasTrickCards) {\n          return (\n            <div\n              className={`trick-card-wrapper ${direction[index]}`}\n              key={`trick-card-${index}`}>\n              {trickCards}\n            </div>\n          );\n        } else {\n          return null;\n        }\n      });\n    }\n\n    if (currentTrick) {\n      currentTrick = currentTrick.filter(\n        card => card !== null && card !== undefined\n      );\n    }\n\n    return (\n      <div className={\"trick-area\"}>\n        <div className=\"trick-area-inner\">{currentTrick}</div>\n      </div>\n    );\n  }\n}\n","export const teamScore = cards => {\n  let teamA = 0,\n    teamB = 0;\n  cards.map((card, index) => {\n    let winningScore = card.isWin ? 1 : 0;\n    if ((index % 4) % 2 === 0) {\n      teamA += winningScore;\n    } else {\n      teamB += winningScore;\n    }\n  });\n  return {teamA: teamA, teamB: teamB};\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/trick-score.scss\";\nimport {teamScore} from \"./socre.js\";\nimport {\n  Thumbnail,\n  ThumbnailWithTag,\n  ThumbailGroupWithTag\n} from \"./thumbnail.js\";\n\nexport default class TrickScore extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {table, windowWidth, windowHeight, currentUser} = this.props;\n    let {game, players} = table;\n    if (!table || !table.game.cards) {\n      return null;\n    }\n    let {playerInfo} = table;\n    let score = teamScore(game.cards);\n    let playerList = players.map(key => playerInfo[key].displayName);\n    let innerStyle = this.props.innerStyle;\n    let resizeRatio = this.props.ratio || 0.15;\n    let thumbnailStyle = {\n      width: this.props.thumbnailSize,\n      height: this.props.thumbnailSize\n    };\n    let offset = 3;\n    let thumbnailSize = this.props.thumbnailSize * 1.2;\n    return (\n      <div\n        className={\n          this.props.name\n            ? `trick-score ${this.props.name}`\n            : \"trick-score\"\n        }\n        style={innerStyle}>\n        <div\n          className=\"trick-score-inner\"\n          style={{\n            width: windowWidth * resizeRatio\n          }}>\n          <div className=\"group-wrapper\">\n            <div className=\"group\">\n              <ThumbailGroupWithTag\n                styleObj={{\n                  minWidth: thumbnailSize * 2\n                }}\n                teamOrder={0}\n                players={playerList}\n                size={thumbnailSize}\n                offset={offset}\n                currentUser={currentUser}\n              />\n              <div className=\"score\">{score.teamA}</div>\n            </div>\n            <div className=\"group\">\n              <ThumbailGroupWithTag\n                styleObj={{\n                  minWidth: thumbnailSize * 2\n                }}\n                teamOrder={1}\n                players={playerList}\n                size={thumbnailSize}\n                offset={offset}\n                currentUser={currentUser}\n              />\n              <div className=\"score\">{score.teamB}</div>\n            </div>\n          </div>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport TrickScore from \"./trickScore.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {RESULT} from \"./constant.js\";\nimport \"../style/btn.scss\";\n\nexport default class ScoreBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recordGame = this.recordGame.bind(this);\n  }\n  recordGame() {\n    let {table} = this.props;\n    let {game} = table;\n    if (!table || game.order !== 51) {\n      return;\n    }\n    dispatchToDatabase(\"CREATE_NEW_GAME\", {\n      table: table\n    });\n  }\n  render() {\n    let {windowWidth, table, windowHeight, currentUser} = this.props;\n    let {game, players} = this.props.table;\n    if (!game || !game.cards) {\n      return null;\n    }\n    let scoreTeamOne = 0,\n      scoreTeamTwo = 0;\n    let playerIndex = players.indexOf(currentUser.uid);\n    let playerTeamScore = 0,\n      opponentScore = 0;\n    game.cards.map((card, index) => {\n      let winScore = card.isWin ? 1 : 0;\n      if (card.player % 2 === playerIndex % 2) {\n        playerTeamScore += winScore;\n      } else {\n        opponentScore += winScore;\n      }\n    });\n\n    let resultWords = null;\n    let {declarer, trick} = game.bid;\n    let targetTrick = 6 + trick;\n    let isPlayerInDeclarerTeam = playerIndex % 2 === declarer % 2;\n    let isCurrentUserAPlayer = playerIndex >= 0;\n    let isUserWin = false;\n\n    if (isPlayerInDeclarerTeam && playerTeamScore >= targetTrick) {\n      resultWords = RESULT.win;\n      isUserWin = true;\n    } else if (isCurrentUserAPlayer) {\n      resultWords = RESULT.lose;\n    } else {\n      resultWords = \"\";\n    }\n    return (\n      <div\n        className={\n          isUserWin ? \"game-over-board win\" : \"game-over-board lose\"\n        }>\n        <TrickScore\n          currentUser={this.props.currentUser}\n          ratio={0.5}\n          thumbnailSize={46}\n          windowWidth={this.props.windowWidth}\n          widnowHeight={this.props.windowHeight}\n          table={this.props.table}>\n          <div className=\"game-over-board-inner\">\n            <div className=\"result\">\n              <div className=\"words\">{resultWords}</div>\n            </div>\n            <div className=\"btn-wrapper\">\n              <button onClick={this.recordGame} className=\"btn\">\n                                Play again ?\n              </button>\n            </div>\n          </div>\n        </TrickScore>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\n\nexport const AuctionList = ({result, scale}) => {\n  if (!result) {\n    return null;\n  }\n  let resultsNum = result.length;\n\n  return (\n    <div className=\"record\">\n      {Array.from({length: Math.ceil(resultsNum / 4)})\n        .fill(0)\n        .map((res, index) => (\n          <div key={getRandomKey()} className=\"row\">\n            {Array.from({length: 4})\n              .fill(0)\n              .map((re, j) => {\n                let resultItem = result[index * 4 + j];\n                if (resultItem && resultItem.opt) {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      {resultItem.opt}\n                    </div>\n                  );\n                } else if (\n                  resultItem &&\n                                    resultItem.trick >= 0\n                ) {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      <div>{resultItem.trick + 1}</div>\n                      {SUIT_SHAPE[resultItem.trump](\n                        scale,\n                      )}\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      {null}\n                    </div>\n                  );\n                }\n              })}\n          </div>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE, BID_NUM} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {AuctionList} from \"./auctionList.js\";\nimport {Thumbnail} from \"./thumbnail.js\";\nimport \"../style/auction.scss\";\n\nexport default class Auction extends React.Component {\n  constructor(props) {\n    super(props);\n    let {game} = this.props;\n    this.state = {\n      currentTrick: game.bid.trick,\n      visibility: false,\n      current: null\n    };\n    this.updateBid = this.updateBid.bind(this);\n    this.validateUserTurnAndsetTrump = this.validateUserTurnAndsetTrump.bind(\n      this\n    );\n  }\n  validateUserTurnAndsetTrump(index) {\n    // check if already current user's turn to give his bid\n    let {game, currentUser, players} = this.props;\n    if (!currentUser || !game) return;\n    if (players && currentUser) {\n      // if currentUser's Index is same as game deal, let him give bid\n\n      let currentUserIndex = players.findIndex(\n        player => player === this.props.currentUser.uid\n      );\n      if (currentUserIndex === game.deal) {\n        this.setState({\n          currentTrick: index,\n          current: index,\n          visibility: true\n        });\n      }\n    }\n  }\n  updateBid(trump, opt = null) {\n    let newBid,\n      isFinishAuction = false,\n      declarer = this.props.game.bid.declarer;\n\n    if (trump > -1 && trump !== null) {\n      let bid = {\n        trick: this.state.currentTrick,\n        trump: trump\n      };\n      // udpate result\n      let result = this.props.game.bid.result || [];\n      result.push(Object.assign({}, bid));\n\n      // update bid taker, when give a trump bid,\n      // record who is the last bid giver;\n      declarer = this.props.game.deal;\n\n      newBid = Object.assign(\n        {},\n        this.props.game.bid,\n        bid,\n        {declarer: declarer},\n        {result: result}\n      );\n    } else {\n      let result = this.props.game.bid.result || [];\n      result.push({opt: opt});\n\n      // is game start\n\n      if (result.length > 3) {\n        let isAllPass = result\n          .slice(result.length - 3, result.length)\n          .every(res => res.opt === \"Pass\");\n        let hasValidTrump = result.some(bid => bid.trick >= 0);\n        isFinishAuction = isAllPass && hasValidTrump;\n      }\n\n      // update bid\n      newBid = Object.assign({}, this.props.game.bid, {\n        result: result\n      });\n    }\n\n    let deal = this.props.game.deal;\n\n    if (isFinishAuction) {\n      deal = (declarer + 1) % 4;\n    } else {\n      deal = (deal + 1) % 4;\n    }\n\n    let newGame = Object.assign(\n      {},\n      this.props.game,\n      {bid: newBid},\n      {deal: deal}\n    );\n\n    dispatchToDatabase(\"UPDATE_AUCTION\", {\n      table: this.props.table,\n      game: newGame\n    });\n    this.setState({visibility: false, current: null});\n  }\n  render() {\n    let {game, players} = this.props;\n    let {playerInfo} = this.props.table;\n    let isCurrentUser =\n            players && players[game.deal] === this.props.currentUser.uid;\n\n    let value = game.bid.trick * 5 + game.bid.trump;\n\n    // todo: refactor\n    let trickOpt, trumpOpt;\n    if (value < 0) {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index);\n    } else if (value === 34) {\n      trickOpt = [];\n      trumpOpt = [];\n    } else if (value % 5 === 4 && value !== 0) {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt > game.bid.trick);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index);\n    } else {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt >= game.bid.trick);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt > game.bid.trump);\n    }\n\n    let allTrickOpt = trickOpt.map((opt, index) => (\n      <button\n        className={opt === this.state.current ? \"current\" : null}\n        onClick={() => {\n          this.validateUserTurnAndsetTrump(opt);\n        }}\n        key={getRandomKey()}>\n        {opt + 1}\n      </button>\n    ));\n\n    let selectedTrump =\n            this.state.currentTrick === trickOpt[0]\n              ? trumpOpt\n              : [0, 1, 2, 3, 4];\n\n    if (value === 34) {\n      selectedTrump = [];\n    }\n    selectedTrump = selectedTrump.map(opt => (\n      <div onClick={() => this.updateBid(opt, null)} key={getRandomKey()}>\n        {SUIT_SHAPE[opt](0.25)}\n      </div>\n    ));\n\n    let result = game.bid.result;\n\n    let DoubleBtn = result &&\n            !result[result.length - 1].opt && (\n      <button\n        className=\"d-btn\"\n        onClick={() => this.updateBid(-1, \"Double\")}>\n                    Dboule\n      </button>\n    );\n\n    let ReDoubleBtn = result &&\n            result[result.length - 1].opt === \"Double\" && (\n      <button\n        className=\"d-btn\"\n        onClick={() => this.updateBid(-1, \"ReDouble\")}>\n                    ReDouble\n      </button>\n    );\n\n    let playerThumbnails = players.map(\n      (player, index) => (\n        <div\n          key={`auction-thumbnail-${index}`}\n          className={\n            index === this.props.game.deal\n              ? \"default-thumbnail current\"\n              : \"default-thumbnail\"\n          }>\n          <div className=\"default-thumbnail-inner\">\n            <div className=\"default-thumbnail-inner-outline-wrapper\">\n            <div className=\"default-thumbnail-inner-outline\">\n              <Thumbnail\n                size={53}\n                current={index === this.props.game.deal}\n                name={playerInfo[player].displayName}\n              />\n            </div>\n          </div>\n            <span>{playerInfo[player].displayName}</span>\n          </div>\n        </div>\n      )\n    );\n    if (this.props.isFinishAuction) {return null};\n\n    return (\n      <div className=\"auction-inner\">\n        <div className=\"thumbnail-group\">{playerThumbnails}</div>\n        {!game.bid.result && (\n          <div className=\"notes\"> Start Auction </div>\n        )}\n        <AuctionList scale={0.2} result={game.bid.result} />\n        <div className=\"option-wrapper\">\n          {isCurrentUser && (\n            <div className=\"other-btns\">\n              <button\n                className=\"pass\"\n                onClick={() => this.updateBid(null, \"Pass\")}>\n                                Pass\n              </button>\n              {DoubleBtn}\n              {ReDoubleBtn}\n            </div>\n          )}\n          <div className=\"tricks\">{allTrickOpt}</div>\n          {this.state.visibility && (\n            <div className=\"trumps\">{selectedTrump}</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport {Thumbnail} from \"./thumbnail.js\";\nimport \"../style/thumbnail.scss\";\nimport \"../style/player.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nexport const Player = ({name, current = null}) => {\n  return (\n    <div className={current ? \"player current\" : \"player\"}>\n      <div className=\"player-inner\">\n        <Thumbnail robotOffset={-7} styleName=\"border-thumbnail\" size={current ? 40 : 50} offset={5} name={name} border={current} />\n      </div>\n      <div className=\"name\">{name}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {Thumbnail, ThumbnailWithTag} from \"./thumbnail.js\";\nimport {AuctionList} from \"./auctionList.js\";\nimport \"../style/auction.scss\";\n\nexport class AuctionResult extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n\n    let {table, windowWidth, currentUser, windowHeight} = this.props;\n\n    let {game, playerInfo, players} = table;\n    if (!game || !game.bid.result) {\n      return null;\n    }\n    let playerThumbnails = players.map((player, index) => {\n      if (currentUser.uid === player) {\n        return (\n          <ThumbnailWithTag\n            key={`resultThumbnail-${index}`}\n            name={playerInfo[player].displayName}\n            size={30}\n            isCurrentUser={true}\n            offset={5}\n          />\n        );\n\n      } else {\n        return (\n          <Thumbnail\n            key={`resultThumbnail-${index}`}\n            name={playerInfo[player].displayName}\n            size={30}\n            isCurrentUser={true}\n            offset={5}\n          />\n        );\n      }\n    });\n\n    return (\n      <div\n        className=\"auction-result\"\n        style={{\n          top: Math.ceil(windowWidth / 500) * 5,\n          right: Math.ceil(windowWidth / 500) * 5\n        }}>\n        <div className=\"auction-result-inner\">\n          <div className=\"thumbnail-group\">{playerThumbnails}</div>\n          <AuctionList scale={0.15} result={game.bid.result} />\n        </div>\n      </div>\n    );\n  }\n}\n","import {\n  PLAYER_NUM,\n  CARD_NUM,\n  EMPTY_SEAT,\n  NO_TRUMP,\n  DEFAULT_GAME\n} from \"./constant.js\";\nimport {getRandomInt} from \"../helper/helper.js\";\n\nexport const hasSameSuitWithFirstCard = (firstCard, cards) => {\n  if (!cards) {\n    return false;\n  }\n  return (\n    firstCard &&\n        cards.filter(card => {\n          return (\n            Math.floor(card.value / CARD_NUM.HAND) ===\n                Math.floor(firstCard.value / CARD_NUM.HAND)\n          );\n        }).length > 0\n  );\n};\n\n// get porker card detail information offset by current login user\nexport const getOffsetDatabyCurrentUser = (players, game, currentUser) => {\n  if (!game || !game.cards) return;\n\n  let {cards} = game;\n\n  // default don't offset\n  let cardsByPlayer = players\n    .map((userIndex, index) => {\n      return cards.filter((card, i) => i % players.length === index);\n    })\n    .slice(0);\n\n  let offsetIndex = players.findIndex(user => user === currentUser);\n\n  let isCurrentUserAPlayer = offsetIndex !== -1;\n\n  // user is curretn user\n  if (isCurrentUserAPlayer) {\n    return {\n      cardsByPlayer: [\n        ...cardsByPlayer.slice(offsetIndex),\n        ...cardsByPlayer.slice(0, offsetIndex)\n      ],\n      offsetPlayers: [\n        ...players.slice(offsetIndex),\n        ...players.slice(0, offsetIndex)\n      ],\n      offsetIndex: offsetIndex\n    };\n  }\n\n  return {\n    cardsByPlayer: cardsByPlayer,\n    offsetPlayers: players.slice(0),\n    offsetIndex: offsetIndex\n  };\n};\n\nexport const mapFlipDownCards = dislayList => {\n  if (!dislayList) return;\n  let flat = dislayList.flat();\n  let cardsNumberOnHand = 5;\n  let totalLen = flat.length;\n  // if cards number is under n, split flipdown card into two row;\n  if (totalLen <= cardsNumberOnHand) {\n    let mid = Math.floor(totalLen / 2);\n    return [flat.slice(0, mid), flat.slice(mid, totalLen)];\n  } else {\n    let threeRow = [[], [], []];\n    flat.map((card, index) => threeRow[index % 3].push(card));\n    return threeRow;\n  }\n};\n\nexport const getFirstCard = game => {\n  if (!game) {\n    return null;\n  }\n  // what is the first card of current trick\n  // in order to let players only can draw card as the same suit\n  if (\n    game.cards &&\n        game.cards.length >= PLAYER_NUM &&\n        game.order % PLAYER_NUM !== PLAYER_NUM - 1\n  ) {\n    return game.cards\n      .filter(card => card.order % PLAYER_NUM === 0)\n      .sort((cardA, cardB) => cardB.order - cardA.order)[0];\n  }\n  return null;\n};\n\nexport const shuffleCards = () => {\n  let cards = getRandomCards();\n  while (!validateShuffle(cards)) {\n    cards = getRandomCards();\n  }\n  return cards;\n};\n\nexport const mapToFourHands = cards => {\n  if (!cards) return;\n  return [0, 0, 0, 0]\n    .map((userIndex, index) => {\n      return cards.filter((card, i) => i % 4 === index);\n    })\n    .slice(0);\n};\n\nexport const fourHands = cards => {\n  return mapToFourHands(cards).map(hand =>\n    hand.map(value => (value % 13 > 8 ? (value % 13) - 8 : 0))\n  );\n};\n\nconst getRandomCards = () => {\n  let cards = Array.from({length: CARD_NUM.TOTAL})\n    .fill(0)\n    .map((card, i) => i);\n\n  // shuffle array algorithm\n  for (let i = cards.length - 1; i > 0; i--) {\n    let randomIndex = getRandomInt(0, CARD_NUM.TOTAL - 1);\n    [cards[i], cards[randomIndex]] = [cards[randomIndex], cards[i]];\n  }\n\n  return cards;\n};\n\nconst validateShuffle = cards => {\n  return fourHands(cards).every(\n    hand => hand.reduce((sum, value) => value + sum, 0) >= 7\n  );\n};\n\nexport const getMaxCardNumPerSuit = cardsForPlayerHand => {\n  console.log(\"max card num\");\n  return Math.max(...cardsForPlayerHand.map(suit => suit.length));\n};\n\nexport const getHandPosByCardNum = (cardsForPlayerHand, cardSize, offset) => {\n  let maxCardNum = getMaxCardNumPerSuit(cardsForPlayerHand);\n  if (maxCardNum === 0) {\n    return 0;\n  }\n  console.log(\"maxCardNum\", maxCardNum);\n  return (maxCardNum - 1) * offset + cardSize;\n};\n","import {CARD_NUM, NO_TRUMP} from \"./constant.js\";\nimport {getCurrentMaxTrick} from \"./getCurrentMaxTrick.js\";\n\n// which card has max value by the bid trump\nconst findMaxValueByTrump = (arr, trump) => {\n  if (!arr || trump === null || trump === undefined) {\n    return;\n  }\n  let list = arr\n    .filter(item => Math.floor(item.value / CARD_NUM.HAND) === trump)\n    .sort((cardA, cardB) => cardB.value - cardA.value);\n  return list.length ? list[0] : null;\n};\n\n// handle winner card logic\n// if there are any cards with same rank as trump, compare their face value\n// else follow first card's rank to compare value;\nexport const getWinnerCard = (game, cardValue) => {\n  if (!game) return;\n  let cards = game.cards,\n    maxTrick = getCurrentMaxTrick(cards);\n\n  let {trump} = game.bid;\n  let cardsMatchCurrentTrick = cards\n    .map((card, index) => Object.assign({}, card, {index: index}))\n    .filter(\n      card =>\n        (card.trick === maxTrick && card.trick > 0) ||\n                card.value === cardValue,\n    );\n  let winnerCard,\n    noTrumpCards = false;\n\n  if (cardsMatchCurrentTrick.length === 4) {\n    // which card is first been played\n    let first = Math.min(...cardsMatchCurrentTrick.map(card => card.order));\n    let [firstHand] = cardsMatchCurrentTrick.filter(\n      card => card.order === first,\n    );\n    // trump matters most, else, decide by what first hand has draw\n    if (trump !== NO_TRUMP) {\n      // filter trump cards, and compare their face value\n      let tmp = findMaxValueByTrump(cardsMatchCurrentTrick, trump);\n\n      if (tmp !== null) {\n        winnerCard = tmp;\n      } else {\n        noTrumpCards = true;\n      }\n    }\n\n    if (trump === NO_TRUMP || noTrumpCards) {\n      // if their quotient are the same, compare their value, else, let first win\n      let trumpRef = Math.floor(firstHand.value / CARD_NUM.HAND);\n      winnerCard = findMaxValueByTrump(cardsMatchCurrentTrick, trumpRef);\n    } // end of no trump\n  }\n\n  return winnerCard || null;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/progress.scss\";\n\nexport const Progress = ({\n  totalWidth,\n  currentWidth,\n  height = 10,\n  fg = \"#4A90E2\",\n  bg = \"#EAE7DF\"\n}) => {\n  let viewBox = `0 0 200 ${height}`;\n  let heightValue = `${height}px`;\n  let total = `${totalWidth}`;\n  return (\n    <div className=\"\">\n      <svg width={total} height={height} viewBox={viewBox}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <rect\n            fill={bg}\n            x=\"0\"\n            y=\"0\"\n            width={total}\n            height={height}\n            rx=\"5\"\n          />\n          <rect\n            fill={fg}\n            x=\"0\"\n            y=\"0\"\n            width={currentWidth}\n            height={height}\n            rx=\"5\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {EMPTY_SEAT, TIMER} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport \"../style/ready-list.scss\";\nimport {ThumbnailWithTag, WaitingThumbnail} from \"./thumbnail.js\";\nimport {Progress} from \"./progress.js\";\nexport default class PlayerReadyList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timeInterval = 15000;\n    this.frequency = 10; // update frequency per sec;\n    // let timeStamp = new Date().getTime();\n    this.state = {\n      progress: new Date().getTime() - this.props.table.createTime\n    };\n    this.setReadyState = this.setReadyState.bind(this);\n    this.countDownTimer = this.countDownTimer.bind(this);\n    this.checkReadyState = this.checkReadyState.bind(this);\n    this.timer = setInterval(this.countDownTimer, this.frequency);\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n    let diffRange = new Date().getTime() - this.props.createTime;\n\n    if (this.isMount && diffRange >= this.timeInterval) {\n      this.setState({\n        progress: new Date().getTime() - this.props.table.createTime\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.createTime !== prevProps.createTime) {\n      this.state.progress =\n                new Date().getTime() - this.props.table.createTime;\n    }\n  }\n  countDownTimer() {\n    let createTime = this.props.table.createTime;\n    let diffRange = new Date().getTime() - this.props.table.createTime;\n    if (this.isMount && diffRange < this.timeInterval) {\n      this.setState({\n        progress: diffRange\n      });\n    } else {\n      new Promise((resolve, reject) => {\n        clearInterval(this.timer);\n        resolve(\"cleard\");\n      }).then(val => {\n        if (\n          this.isMount &&\n                    this.props.table.createTime !== createTime\n        ) {\n          this.setState({timesUp: true});\n        }\n      });\n    }\n  }\n  checkReadyState() {\n    let {table, currentUser} = this.props;\n    let {game, ready, players, playerInfo} = table;\n    return ready.every(player => player === false);\n  }\n  setReadyState(playerIndex) {\n    let {currentUser, table} = this.props;\n    if (!table) return;\n    let {game, gameState} = table;\n    let players = table.players.slice(0);\n    dispatchToDatabase(\"READY_A_PLAYER\", {\n      playerIndex: playerIndex,\n      table: table\n    });\n  }\n  render() {\n    let {table, currentUser} = this.props;\n    let {game, ready, players, playerInfo} = table;\n\n    if (!game) {\n      return <div> No game data </div>;\n    }\n\n    let {isGameOver, order} = game;\n    let isAnyEmptySeat = players.some(seat => seat === EMPTY_SEAT);\n    let isAllPlayerReady = ready.every(player => player === true);\n\n    // if need to sho playerReadylist\n    let showPlayerReadyList =\n            (isAnyEmptySeat && order < 0) || !isAllPlayerReady;\n\n    if (!showPlayerReadyList) {\n      return null;\n    }\n    let playBtns = null;\n\n    let totolProgress = 200;\n\n    let currentVal = Math.floor(\n      (this.state.progress / this.timeInterval) * totolProgress\n    );\n\n    let isTimesUp = currentVal >= totolProgress - 1;\n\n    let thumbnails = players.map((player, index) => {\n      let playerName;\n      let size = 70;\n      let offset = 0;\n\n      if (playerInfo[player]) {\n        playerName = playerInfo[player].displayName;\n      }\n\n      if (!playerName) {\n        return (\n          <WaitingThumbnail\n            stop={isTimesUp}\n            key={`join-plyaer-${index}`}\n            size={size}\n          />\n        );\n      }\n\n      return (\n        <div\n          key={`join-player-${index}`}\n          className=\"player-ready-wrapper\">\n          <ThumbnailWithTag\n            isCurrentUser={players[index] === currentUser.uid}\n            size={size}\n            offset={offset}\n            disabled={!ready[index]}\n            name={playerName}\n          />\n          <span>{playerName}</span>\n        </div>\n      );\n    });\n\n    let currentUserCanPlay;\n\n    if (players.includes(currentUser.uid)) {\n      currentUserCanPlay = players.some(\n        (player, index) => player === currentUser.uid && !ready[index]\n      );\n      playBtns = players.map((player, index) => {\n        if (player === currentUser.uid && !ready[index]) {\n          return (\n            <div key={`playBtn-${index}`}>\n              <button\n                style={{zIndex: 5}}\n                onClick={() => this.setReadyState(index)}\n                className=\"btn\">\n                                加入牌局\n              </button>\n            </div>\n          );\n        } else {\n          return <div key={`playBtn-${index}`} />;\n        }\n      });\n    }\n\n    let progressState = (\n      <Progress totalWidth={totolProgress} currentWidth={currentVal} />\n    );\n    if (isTimesUp) {\n      if (ready.some(player => player === true)) {\n        progressState = <div>牌桌準備中...</div>;\n      } else {\n        progressState = <div>沒人加入，即將返回大廳...</div>;\n      }\n    }\n    let roomId = `${table.linkId}`;\n    let roomNum = \"桌號 \" + roomId.slice(roomId.length - 3, roomId.length);\n\n    return (\n      <div className=\"player-ready-list\">\n        <div className=\"player-ready-list-inner\">\n          <h3>\n            <span>{roomNum}</span>\n          </h3>\n          <div className=\"row\"> {thumbnails}</div>\n          {!isTimesUp &&\n                        currentUserCanPlay && (\n            <div className=\"btn-wrapper\">{playBtns}</div>\n          )}\n          <div className=\"progress-panel\">{progressState}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport \"../style/game.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getRandomInt, getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {Card} from \"./card.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {GAME_STATE} from \"./constant.js\";\nimport Trick from \"./trick.js\";\nimport {\n  CARD_NUM,\n  DIRECTION,\n  EMPTY_SEAT,\n  NO_TRUMP,\n  DEFAULT_GAME\n} from \"./constant.js\";\nimport TrickScore from \"./trickScore.js\";\nimport ScoreBoard from \"./scoreBoard.js\";\nimport Auction from \"./auction.js\";\nimport {Player} from \"./player.js\";\nimport {AuctionResult} from \"./auctionResult.js\";\nimport {\n  hasSameSuitWithFirstCard,\n  getOffsetDatabyCurrentUser,\n  mapFlipDownCards,\n  getFirstCard,\n  shuffleCards,\n  getHandPosByCardNum\n} from \"./examineCards.js\";\nimport {getWinnerCard} from \"./getWinnerCard.js\";\nimport PlayerReadyList from \"./playerReadyList.js\";\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let {game} = this.props.table;\n    this.state = {\n      endAuction: game && game.order >= 0,\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    };\n    this.deal = this.deal.bind(this);\n    this.getNextMaxTrick = this.getNextMaxTrick.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.suffleCardsWhenReady = this.suffleCardsWhenReady.bind(this);\n    this.endAuction = this.endAuction.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.getAuctionStatus = this.getAuctionStatus.bind(this);\n  }\n  handleResize() {\n    this.setState({\n      windowWidth: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n  componentDidUpdate(prevProps) {\n    let newTable = this.props.table;\n    let oldTable = prevProps.table;\n\n    // todo, using a promise to do this task\n    this.suffleCardsWhenReady();\n  }\n\n  suffleCardsWhenReady() {\n    // when seats is full and has no cards on databse\n    let {players, game, gameState} = this.props.table;\n    if (players) {\n      let isAnyEmptySeat = players.some(seat => seat === EMPTY_SEAT);\n      if (\n        !isAnyEmptySeat &&\n                !game.cards &&\n                gameState === GAME_STATE.auction\n      ) {\n        this.shuffle();\n      }\n    }\n  }\n  // so far, how many tricks have been played ?\n  getNextMaxTrick() {\n    // if (!this.props.table || this.props.table.game) return;\n    let {game} = this.props.table;\n    if (!game) {\n      return;\n    }\n    let cards = game.cards,\n      maxTrick = Math.max(...cards.map(card => card.trick)),\n      maxTrickNum = cards.filter(card => card.trick === maxTrick).length;\n    if (maxTrick === 0 || maxTrickNum >= 4) {\n      return maxTrick + 1;\n    }\n    return maxTrick;\n  }\n  endAuction() {\n    this.setState({endAuction: true});\n  }\n  deal(value) {\n    console.log(\"value\", value);\n    let {table} = this.props;\n    let {game} = this.props.table;\n    if (!game) {\n      return;\n    }\n    let currentPlayer = game.deal;\n    let order = game.order + 1;\n\n    dispatchToDatabase(\n      \"UPDATE_CURRENT_TRICK\",\n      Object.assign(\n        {},\n        {\n          table: table,\n          value: value,\n          time: new Date().getTime(),\n          maxTrick: this.getNextMaxTrick(),\n          order: order,\n          deal: (game.deal + 1) % 4\n        }\n      )\n    );\n\n    let winnerCard = getWinnerCard(game, value);\n\n    // make sure winnerCard exists, and write winner to database\n    if (winnerCard) {\n      // remove index data while dispatch to database\n      let card = Object.assign({}, winnerCard);\n      delete card.index;\n\n      dispatchToDatabase(\n        \"UPDATE_WINNER_CARD\",\n        Object.assign({}, this.props, {\n          table: table,\n          winnerCard: card,\n          order: order,\n          deal: card.player\n        })\n      );\n    }\n  }\n  shuffle() {\n    let cards = shuffleCards();\n    // get new cards\n    cards = cards.map(card => ({\n      value: card,\n      trick: 0\n    }));\n    // todo bid\n    dispatchToDatabase(\"ADD_NEW_DECK_TO_TABLE\", {\n      table: this.props.table,\n      cards: cards\n    });\n  }\n  getAuctionStatus(game) {\n    // check if fishish auction\n    let result = game.bid.result;\n\n    if (!game || !result) {\n      return false;\n    }\n\n    return (\n      result.length >= 4 &&\n            result.some(bid => bid.trick >= 0) &&\n            result.slice(result.length - 3).every(res => res.opt === \"Pass\")\n    );\n  }\n  render() {\n    let {table, currentUser} = this.props;\n\n    console.log(\"in game table\", table);\n\n    let {game, players, ready} = table;\n\n    let {cards, isGameOver} = game;\n\n    let isEndOfCurrentTrick = game.order % 4 === 3;\n    let isFinishAuction = this.getAuctionStatus(game);\n    // set true to give dummy's card to declarer\n    let isDummyMode = isFinishAuction && true;\n\n    // class name for each hand\n    let hands;\n    let {cardsByPlayer, offsetPlayers, offsetIndex} =\n            getOffsetDatabyCurrentUser(players, game, currentUser.uid) || {};\n\n    // turn cards to 4 hands\n    if (cards && cards.length === CARD_NUM.TOTAL) {\n      let currentUserIndex = players.findIndex(\n        user => user === currentUser.uid\n      );\n\n      // if dummy mode, let it be dummy's index, esle let it be something larger\n      let flipIndex = isDummyMode ? (game.bid.declarer + 2) % 4 : 6;\n      let isValidFlipIndex = flipIndex < 4;\n\n      if (isValidFlipIndex) {\n        // udpate dummy hand's index in offset player list\n        flipIndex = offsetPlayers.findIndex(\n          player => player === players[flipIndex]\n        );\n      }\n\n      let currentTurnPlayer = players[game.deal];\n      let isCurrentUserPlayer = players.includes(currentUser.uid);\n\n      // cardsByPlayer already offset by current login user's index\n      hands = cardsByPlayer.map((hand, index) => {\n        let playerHand = offsetPlayers[index];\n        let playerHandIndex = index; // zero will alwasy be current login user\n\n        // makesure dummy hand can view declarer's card\n        if (flipIndex === 0) {\n          flipIndex = 2;\n        }\n\n        // only show cards didn't played\n        hand = hand\n          .sort((a, b) => a.value - b.value)\n          .filter(card => card.trick === 0);\n\n        if (playerHandIndex === 1 && flipIndex !== 1) {\n          hand = hand.sort((a, b) => b.value - a.value);\n        }\n\n        let currentUserIndex = 0;\n\n        // handle display issue for both weat/east players\n        let handCopy = hand.map(userHand =>\n          Object.assign({}, userHand)\n        );\n\n        let display = [[], [], [], []];\n        handCopy.map(card =>\n          display[Math.floor(card.value / CARD_NUM.HAND)].push(card)\n        );\n\n        // handle flip down card, group them into n rows base on\n        // how many cards left\n        display = display.filter(item => item.length !== 0);\n\n        // decide to flip down which players card\n        // use playerHandIndex to decide , playerHandIndex 0 means current user\n        // if current user is not a player, show sorted cards and don't flip them\n        if (\n          playerHandIndex !== currentUserIndex &&\n                    playerHandIndex !== flipIndex &&\n                    isCurrentUserPlayer\n        ) {\n          let mapResult = mapFlipDownCards(display);\n          if (mapResult) {\n            display = mapResult;\n          }\n        }\n\n        // handle sort isssue of west player, should sort\n        // from big to small\n        let firstCard = getFirstCard(game);\n\n        let hasFollowSameSuit = hasSameSuitWithFirstCard(\n          firstCard,\n          display.flat()\n        );\n\n        let cardsInHand = display.map((each, index) => {\n          // use playerHandIndex to decide flip up whose cards\n          // playerHandIndex === 0 means current user\n          let declarerIndex = game.bid.declarer;\n\n          let dummyPlayerIndex = (declarerIndex + 2) % 4;\n          let dummyPlayer = players[dummyPlayerIndex];\n\n          let declarerPlayer = players[declarerIndex];\n\n          // if player is nither declarer nor dummy plaer\n          let isValidCard = isFinishAuction && isCurrentUserPlayer;\n          let canBeClick =\n                        isValidCard &&\n                        // current player is equal to south;\n                        currentTurnPlayer === playerHand &&\n                        playerHandIndex === currentUserIndex;\n\n          // current turn is dummay hand, and current login user is declare,\n          // let current user can control dummy hand's card\n          if (\n            isDummyMode &&\n                        isValidCard &&\n                        dummyPlayer === currentTurnPlayer\n          ) {\n            if (\n              currentUser.uid === declarerPlayer &&\n                            playerHandIndex === 2\n            ) {\n              canBeClick = true;\n            }\n            if (\n              currentUser.uid === dummyPlayer &&\n                            playerHandIndex === currentUserIndex\n            ) {\n              canBeClick = false;\n            }\n          }\n\n          let flipUp =\n                        !isCurrentUserPlayer ||\n                        playerHandIndex === currentUserIndex ||\n                        playerHandIndex === flipIndex;\n\n          // if those card has same suit with first player,\n          // users need only to draw those cards\n          // if not, they can draw any cards\n          let allowClickEvt = card => {\n            return (\n              firstCard === null ||\n                            !hasFollowSameSuit ||\n                            Math.floor(card.value / CARD_NUM.HAND) ===\n                                Math.floor(firstCard.value / CARD_NUM.HAND)\n            );\n          };\n\n          return each.map((card, i) => (\n            <Card\n              name={\n                canBeClick && allowClickEvt(card)\n                  ? `click-able l${index} item-${i}`\n                  : `l${index} item-${i}`\n              }\n              flipUp={flipUp}\n              evt={\n                canBeClick && allowClickEvt(card)\n                  ? this.deal\n                  : null\n              }\n              key={`card-random-${i}`}\n              value={card.value}\n            />\n          ));\n        });\n\n        // calculate hand style and card postion\n        let totalCardsInHand = cardsInHand\n          .map(suit => suit.length)\n          .reduce((sum, len) => sum + len, 0);\n        let totalSuitType = cardsInHand.filter(\n          suit => suit.length !== 0\n        ).length;\n\n        // handle resize\n        let sidebarWidth = this.state.windowWidth >= 1200 ? 480 : 400;\n        let horCardOffset = 40;\n        let cardSize = 100;\n\n        let horCardStyle =\n                    DIRECTION[index] === \"north\" || DIRECTION[index] === \"south\"\n                      ? {\n                        left:\n                                  (this.state.windowWidth -\n                                      sidebarWidth -\n                                      (horCardOffset * totalCardsInHand +\n                                          horCardOffset)) /\n                                  2\n                      }\n                      : null;\n\n        const getHandHeight = suitNum => {\n          let cardh = 125,\n            shift = 70;\n          return (\n            suitNum * cardh - (cardh - shift) * (suitNum - 1) + 10\n          );\n        };\n\n        let verTopPos =\n                    DIRECTION[index] === \"west\" || DIRECTION[index] === \"east\"\n                      ? (this.state.windowHeight -\n                              getHandHeight(totalSuitType)) /\n                          2\n                      : null;\n\n        let verEdgePos;\n\n        // let verHandPos = getHandPosByCardNum(\n        //   cardsInHand,\n        //   cardSize,\n        //   horCardOffset,\n        //   this.state.windowWidth\n        // );\n\n        if (verTopPos && DIRECTION[index] === \"west\") {\n          verEdgePos = {top: verTopPos};\n        }\n        if (verTopPos && DIRECTION[index] === \"east\") {\n          verEdgePos = {top: verTopPos};\n        }\n\n        // console.log(\"verHandPos\", verHandPos);\n        // let verEdgePos = () => {\n        //   if (verTopPos && DIRECTION[index] === \"west\") {\n        //     return Object.assign({}, verTopPos, {left: verHandPos});\n        //   } else if (verTopPos && DIRECTION[index] === \"east\") {\n        //     return Object.assign({}, verTopPos, {\n        //       right: verHandPos\n        //   }\n        // };\n\n        // console.log(\"verEdgePos\", verEdgePos);\n\n        return (\n          <div\n            className={DIRECTION[index]}\n            style={horCardStyle || verEdgePos}\n            key={`player-hand-index-${index}`}>\n            <div className=\"hand-inner\">\n              <div className=\"user-hand\">{cardsInHand}</div>\n              <Player\n                current={\n                  currentTurnPlayer === playerHand &&\n                                    isFinishAuction\n                }\n                name={\n                  (table.playerInfo[playerHand] &&\n                                        table.playerInfo[playerHand]\n                                          .displayName) ||\n                                    \"Anonymous\"\n                }\n              />\n            </div>\n          </div>\n        );\n      });\n    } // end of cards\n    let isAllReady = table.ready.every(player => player === true);\n\n    // dom elements\n    if (isGameOver) {\n      return (\n        <div className=\"game\">\n          <div>\n            <ScoreBoard\n              startGame={this.suffleCardsWhenReady}\n              currentUser={currentUser}\n              windowWidth={this.state.windowWidth}\n              widnowHeight={this.state.windowHeight}\n              table={table}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"game\">\n        {!isAllReady && (\n          <PlayerReadyList\n            suffleCardsWhenReady={this.suffleCardsWhenReady}\n            currentUser={currentUser}\n            table={this.props.table}\n          />\n        )}\n        {isFinishAuction && (\n          <AuctionResult\n            currentUser={currentUser}\n            windowWidth={this.state.windowWidth}\n            windowHeight={this.state.windowHeight}\n            table={table}\n          />\n        )}\n        <div className=\"auction\">\n          {game.bid &&\n                        game.cards && (\n            <Auction\n              isFinishAuction={isFinishAuction}\n              endAuction={this.endAuction}\n              game={game}\n              table={table}\n              currentUser={currentUser}\n              players={players}\n            />\n          )}\n        </div>\n        <div className=\"arena\">\n          <div className=\"hands\">{hands}</div>\n          <Trick\n            cards={cards}\n            cardsByPlayer={cardsByPlayer}\n            order={game.order}\n            isTrickFinish={isEndOfCurrentTrick}\n          />\n          <TrickScore\n            currentUser={currentUser}\n            resizeRatio={0.15}\n            innerStyle={{\n              bottom: Math.ceil(this.state.windowWidth / 500) * 5,\n              right: Math.ceil(this.state.windowWidth / 500) * 5\n            }}\n            thumbnailSize={30}\n            name=\"right-bottom-pos\"\n            windowWidth={this.state.windowWidth}\n            widnowHeight={this.state.windowHeight}\n            table={this.props.table}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE} from \"../constant.js\";\nimport {teamScore} from \"../socre.js\";\n\nexport default class RecordItem extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {index, record, current} = this.props;\n    if (!record) {\n      return (\n        <div className=\"record-item\">\n          <div className=\"empty\" />\n        </div>\n      );\n    }\n    let score = teamScore(record.cards);\n    return (\n      <div\n        onClick={() => this.props.changeRecord(index)}\n        className={\n          current\n            ? \"record-item active current\"\n            : \"record-item active\"\n        }>\n        <div>{index + 1}</div>\n        <div className=\"bid\">\n          <span>{record.bid.trick + 1}</span>\n          {SUIT_SHAPE[record.bid.trump](0.15)}\n        </div>\n        <div>{score.teamA}</div>\n        <div>{score.teamB}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Dot = ({current, page, changePage}) => {\n  return (\n    <div\n      onClick={() => changePage(page)}\n      className={current ? \"dot current\" : \"dot\"}\n    />\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport RecordItem from \"./recordItem.js\";\nimport {ThumbailGroup} from \"../thumbnail.js\";\nimport {Dot} from \"../dotIndicator/dot.js\";\n\nexport default class GameRecord extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0\n    };\n    this.changePage = this.changePage.bind(this);\n  }\n  changePage(page) {\n    this.setState({page: page});\n  }\n  render() {\n    let resultNum = 3;\n    let {record} = this.props;\n    if (!record) {\n      return (\n        <div className=\"record-empty\">No available game records</div>\n      );\n    }\n    let recordList, dots, dotsNum;\n    if (record) {\n      if (record.length <= resultNum) {\n        record = record.concat([null, null, null]).slice(0, resultNum);\n      } else {\n        let start = this.state.page * resultNum;\n        let end =\n                    start + resultNum >= record.length\n                      ? record.length\n                      : start + resultNum;\n        record =\n                    end === start + resultNum\n                      ? record.slice(start, end)\n                      : record.slice(start, end);\n      }\n      recordList = record.map((recordItem, index) => (\n        <RecordItem\n          key={`record-item-${index}`}\n          index={index}\n          changeRecord={this.props.changeRecord}\n          current={this.props.currentRecord === index}\n          record={recordItem}\n        />\n      ));\n\n      dotsNum = Math.ceil(record.length / resultNum);\n      dots =\n                dotsNum <= 1\n                  ? null\n                  : (dots = Array.from({length: dotsNum})\n                    .fill(0)\n                    .map((dotItem, index) => (\n                      <Dot\n                        key={`dot-${index}`}\n                        changePage={this.changePage}\n                        page={index}\n                        current={index === this.state.page}\n                      />\n                    )));\n    }\n\n    return (\n      <div className=\"record-list\">\n        {this.props.record && (\n          <div className=\"record-header\">\n            <div />\n            <div />\n            <ThumbailGroup\n              teamOrder={0}\n              players={this.props.players}\n              size={32}\n            />\n            <ThumbailGroup\n              teamOrder={1}\n              players={this.props.players}\n              size={32}\n            />\n          </div>\n        )}\n        {recordList}\n        <div className=\"dots-holder\">\n          <div className=\"dots-holder-inner\">{dots}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"../thumbnail.js\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"../constant.js\";\n\nexport const Hand = ({player, cards, direction}) => {\n  let display = [[], [], [], []];\n  cards.map(card => display[Math.floor(card.value / 13)].push(card));\n  let displaySuit = display.map((suit, index) => (\n    <div className=\"hand\" key={`suit-${index}`}>\n      <div>{SUIT_SHAPE[index](0.15)}</div>\n      <div className=\"card-value\">\n        {suit.map((card, index) => (\n          <div key={`suit-${index}`}>\n            {CARD_RANK[card.value % CARD_NUM.HAND]}\n          </div>\n        ))}\n      </div>\n    </div>\n  ));\n  return (\n    <div className={`rewind-player ${direction}`}>\n      <div>\n        <Thumbnail name={player} size={26} />\n      </div>\n      <div className=\"hand-wrapper\">{displaySuit}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"../thumbnail.js\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"../constant.js\";\n\nexport const RewindAuction = ({players, bid}) => {\n  let {declarer, trump, trick} = bid;\n  return (\n    <div className=\"rewind-auction\">\n      <h3>Auction</h3>\n      <div>\n        <Thumbnail name={players[declarer]} size={26} />\n      </div>\n      <div>\n        {trick + 1} {SUIT_SHAPE[trump](0.15)}\n      </div>\n    </div>\n  );\n};\n\n\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ThumbailGroup} from \"../thumbnail.js\";\nimport {teamScore} from \"../socre.js\";\n\nexport const RewindResult = ({players, cards}) => {\n  let score = teamScore(cards);\n  return (\n    <div className=\"rewind-result\">\n      <h3>Result</h3>\n      <div>\n        <ThumbailGroup teamOrder={0} players={players} size={20} />\n        <div>{score.teamA}</div>\n      </div>\n      <div>\n        <ThumbailGroup teamOrder={1} players={players} size={20} />\n        <div>{score.teamB}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Hand} from \"./hand.js\";\nimport {mapToFourHands} from \"../examineCards.js\";\nimport {DIRECTION} from \"../constant.js\";\nimport {RewindAuction} from \"./rewindAuction.js\";\nimport {RewindResult} from \"./rewindResult.js\";\n\nexport default class GameRewind extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if (!this.props.record) {\n      return null;\n    }\n    let {cards, bid} = this.props.record;\n    let fourHandCards = mapToFourHands(cards);\n    let fourHands = fourHandCards.map((cards, index) => (\n      <Hand\n        direction={DIRECTION[index]}\n        key={`hand-${index}`}\n        cards={cards}\n        player={this.props.players[index]}\n      />\n    ));\n    return (\n      <div className=\"rewind\">\n        {fourHands}\n        <RewindAuction players={this.props.players} bid={bid} />\n        <RewindResult players={this.props.players} cards={cards} />\n        <div />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport reactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {app} from \"../firebase/firebase.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport randomColor from \"randomcolor\";\nimport {SUIT_SHAPE, Emoji} from \"./constant.js\";\n\nexport default class Chatroom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\"\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.addEmoji = this.addEmoji.bind(this);\n    this.msgEnd;\n    this.emoji = Emoji;\n  }\n  handleKeyPress(e) {\n    // && this.state.message.length\n    if (e.key === \"Enter\") {\n      console.log(\"has enter\");\n      this.sendMessage();\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  componentDidUpdate() {\n    console.log(\"did update\");\n    this.scrollToBottom();\n  }\n  addEmoji(emoji) {\n    this.setState({message: this.state.message + emoji});\n  }\n  sendMessage(e) {\n    dispatchToDatabase(\"SEND_MESSAGE_TO_CHATROOM\", {\n      message: this.state.message,\n      currentUser: this.props.currentUser,\n      table: this.props.table\n    });\n    this.setState({\n      message: \"\"\n    });\n    // this.scrollToBottom();\n  }\n  handleChange(e) {\n    this.setState({message: e.currentTarget.value});\n  }\n  scrollToBottom() {\n    // fixed when typing, message won't scroll to bottom \n    setTimeout(() => {\n      this.msgEnd.scrollIntoView({behavior: \"smooth\", block: \"end\"});\n    }, 10);\n  }\n  render() {\n    let {currentUser, table, chatroom} = this.props;\n    if (!table || !currentUser) {\n      console.log(\"no current table data\");\n    }\n    let {players} = table;\n    let messageList;\n    let emojiList = this.emoji.map((emj, i) => (\n      <a\n        key={`emj-${i}`}\n        className=\"emjbtn\"\n        onClick={() => this.addEmoji(emj)}>\n        {emj}\n      </a>\n    ));\n\n    if (chatroom && chatroom.message && table && table.viewers) {\n      let end = Object.keys(chatroom.message).length;\n      let chatStart = 0; //end - chatLen >= 0 ? end - chatLen : 0;\n      let isCurrentUserAPlayer = players.some(\n        player => player === currentUser.uid\n      );\n      let msgMapList;\n      if (isCurrentUserAPlayer) {\n        msgMapList = Object.keys(chatroom.message)\n          .sort((a, b) => +a - +b)\n          .filter(key => chatroom.message[key].isPlayer);\n      } else {\n        msgMapList = Object.keys(chatroom.message).sort(\n          (a, b) => +a - +b\n        );\n      }\n\n      messageList = msgMapList.map((id, index) => {\n        let color = table.viewers[chatroom.message[id].uid];\n        let symbol = null;\n        let playerIndex = players.findIndex(\n          player => player === chatroom.message[id].uid\n        );\n        if (playerIndex > -1) {\n          symbol = (\n            <div\n              style={{backgroundColor: color}}\n              className=\"symbol\">\n              {SUIT_SHAPE[playerIndex](0.1, \"#ffffff\")}\n            </div>\n          );\n        }\n        let msg = chatroom.message[id].content;\n        return (\n          <div className=\"msg\" key={`message-${index}`}>\n            <a>\n              {symbol}\n              <b style={{color: color}}>\n                {chatroom.message[id].displayName}{\" \"}\n                <b className=\"comma\">:</b>\n              </b>\n              {msg}\n            </a>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"chatroom\">\n        <div className=\"msg-wrapper\">\n          {messageList}\n\n          <div\n            ref={el => {\n              this.msgEnd = el;\n            }}\n            style={{float: \"left\", clear: \"both\"}}>\n            <i />\n          </div>\n        </div>\n        <div className=\"typing-area\">\n          <textarea\n            placeholder=\"type something...\"\n            rows=\"10\"\n            col=\"50\"\n            value={this.state.message}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n          />\n          <div className=\"emoji\">{emojiList}</div>\n          <button onClick={this.sendMessage}>送出</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport GameRecord from \"./gameRecord.js\";\nimport GameRewind from \"./gameRewind.js\";\nimport {TAB_OPTION} from \"../constant.js\";\nimport Chatroom from \"../chatroom.js\";\n\nexport default class Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    let {record} = this.props.table;\n    this.state = {\n      tab: 0,\n      currentRecord: record ? record.length - 1 : null\n    };\n    this.changeRecord = this.changeRecord.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n  }\n  changeRecord(index) {\n    this.setState({currentRecord: index});\n  }\n  handleTab(index) {\n    this.setState({tab: index});\n  }\n  render() {\n    if (!this.props.table) return null;\n    // let options = TAB_OPTION.map((opt, i) => (\n    //   <div\n    //     onClick={() => this.handleTab(i)}\n    //     className={this.state.tab === i ? `current ${opt}` : `${opt}`}\n    //     key={`opt-${i}`}>\n    //     <span />\n    //     <b>{opt}</b>\n    //   </div>\n    // ));\n    // let currentRecord = null;\n    // if (this.props.table.record) {\n    //   currentRecord =\n    //             this.state.currentRecord >= 0 &&\n    //             this.props.table.record[this.state.currentRecord];\n    // }\n\n    // let domRecord = (\n    //   <div>\n    //     <GameRecord\n    //       players={this.props.table.players}\n    //       record={this.props.table.record || null}\n    //       changeRecord={this.changeRecord}\n    //       currentRecord={this.state.currentRecord}\n    //     />\n    //     <GameRewind\n    //       players={this.props.table.players}\n    //       record={currentRecord}\n    //     />\n    //   </div>\n    // );\n    // let domChatroom = (\n    //   <Chatroom\n    //     currentUser={this.props.currentUser}\n    //     chatroom={this.props.chatroom}\n    //     table={this.props.table}\n    //   />\n    // );\n\n    // let currentTabContent = this.state.tab === 0 ? domChatroom : domRecord;\n\n    return (\n      <div className=\"sidebar\">\n        <div className=\"tabs\" style={{marginLeft: 30}}>\n          <div className={\"current chatroom\"}>\n            <span />\n            <b>chatroom</b>\n          </div>\n        </div>\n        <div className=\"tab-wrapper\" />\n        <div>\n          <Chatroom\n            currentUser={this.props.currentUser}\n            chatroom={this.props.chatroom}\n            table={this.props.table}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// <div>{currentTabContent}</div>\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nexport default class Loading extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"main-loading\">\n        <h2>Loading ...</h2>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./game.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport Sidebar from \"./sidebar/sidebar.js\";\nimport {GAME_STATE} from \"./constant.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport randomColor from \"randomcolor\";\nimport {EMPTY_SEAT} from \"./constant.js\";\nimport Header from \"./header.js\";\nimport Loading from \"./loading.js\";\nimport \"../style/table.scss\";\nimport \"../style/sidebar.scss\";\nimport \"../style/record-item.scss\";\nimport \"../style/record.scss\";\nimport \"../style/dot.scss\";\nimport \"../style/rewind.scss\";\n\nexport default class Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateTableData = this.updateTableData.bind(this);\n    this.linkId =\n            this.props.match.params.id || window.location.hash.slice(8);\n    if (!this.props.currentUser) {\n      this.props\n        .getUserAuthInfo()\n        .then(user => {\n          app.getDataByPathOnce(\n            `tableList/${this.linkId}`,\n            snapshot => {\n              if (!snapshot.val()) {\n                return null;\n              }\n              let tableKey = snapshot.val().id;\n              dispatchToDatabase(\"UPDATE_TABLE_TIMESTAMP\", {\n                id: tableKey\n              });\n              app.getDataByPathOnce(\n                `tables/${tableKey}/`,\n                snapshot => {\n                  this.updateTableData(tableKey, this.linkId)\n                    .then(msg =>\n                      this.setState({isLoad: true})\n                    )\n                    .catch(err => console.log(err));\n                }\n              );\n            }\n          );\n        })\n        .catch(err => this.setState({redirectToLogin: true}));\n    } else {\n      this.linkId = this.props.match.params.id;\n      this.tableKey = this.props.tableList[this.linkId].id;\n      this.updateTableData()\n        .then(msg => this.setState({isLoad: true}))\n        .catch(err => console.log(err));\n    }\n\n    this.state = {\n      isLoad: false,\n      redirectToLogin: false\n    };\n\n    // only fetch data\n\n    this.addPlayerToTable = this.addPlayerToTable.bind(this);\n    this.color = randomColor(\"dark\");\n  }\n\n  closeTable(tableKey = this.tableKey, linkId = this.linkId) {\n    return new Promise((resolve, reject) => {\n      app.setNodeByPath(\n        `tables/${tableKey}/gameState/${GAME_STATE.gameover}`,\n        GAME_STATE.gameover\n      );\n    });\n  }\n\n  updateTableData(tableKey = this.tableKey, linkId = this.linkId) {\n    return new Promise((resolve, reject) => {\n      app.getNodeByPath(`tables/${tableKey}`, value => {\n        resolve(value.val());\n        return dispatch(\"UPDATE_TABLE_DATA\", {\n          table: value.val(),\n          id: tableKey\n        });\n      });\n      app.getNodeByPath(`chatroom/${tableKey}`, value => {\n        resolve(\"successfulyy\");\n        return dispatch(\"UPDATE_CHAT_ROOM\", {\n          chatroom: value.val()\n        });\n      });\n    });\n  }\n  componentDidMount() {\n    // fetch data again\n    this.updateTableData().then(data => this.setState({isLoad: true}));\n  }\n  addPlayerToTable(table) {\n    if (!table) return;\n    let {players, viewers} = table;\n    let emptySeatIndex = players.findIndex(seat => seat === EMPTY_SEAT);\n    let alreadyAPlayer = players.some(\n      seat => seat === this.props.currentUser.uid\n    );\n    let alreadyAViewer = Boolean(\n      viewers && viewers[this.props.currentUser.uid]\n    );\n    if (emptySeatIndex > -1 && !alreadyAPlayer) {\n      dispatchToDatabase(\"ADD_PLAYER_TO_TABLE\", {\n        currentUser: this.props.currentUser,\n        table: table,\n        emptySeatIndex: emptySeatIndex,\n        color: this.color\n      });\n    } else if (!alreadyAViewer) {\n      dispatchToDatabase(\"ADD_VIEWER_TO_TABLE\", {\n        currentUser: this.props.currentUser,\n        table: table,\n        color: this.color\n      });\n    }\n  }\n  componentDidUpdate(prevProps) {\n    // if this is a different table\n    if (!this.props.tableList) return;\n    if (this.props.currentTableId !== prevProps.currentTableId) {\n      this.setState({isLoad: false});\n      this.updateTableData().then(data => this.setState({isLoad: true}));\n    }\n\n    let {tableKey, linkId} = this;\n    if (this.props.tableList[this.linkId].id) {\n      if (this.props.tables[tableKey] !== prevProps.tables[tableKey]) {\n        this.addPlayerToTable(this.props.tables[tableKey]);\n      }\n    }\n  }\n  render() {\n    if (this.state.redirectToLogin) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    if (!this.state.isLoad) {\n      return <Loading />;\n    }\n\n    let {tables, currentUser} = this.props;\n    let linkId = this.props.match.params.id;\n    let tableKey = this.props.tableList[linkId].id;\n    if (!tables || !tables[tableKey]) {\n      return null;\n    }\n    let targetTable = tables[tableKey];\n    if (\n      targetTable.gameState &&\n            targetTable.gameState === GAME_STATE.close\n    ) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <Header\n          roomNum={this.linkId || null}\n          isTableColor={true}\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"table\">\n          <Game\n            currentUser={currentUser}\n            currentTableId={this.props.currentTableId}\n            table={targetTable}\n          />\n          <Sidebar\n            currentUser={currentUser}\n            chatroom={this.props.chatroom}\n            table={targetTable}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {GAME_STATE, TIMER} from \"./constant.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {EMPTY_SEAT} from \"../components/constant.js\";\nimport {getObj, getObjSortKey} from \"../helper/helper.js\";\nimport {app} from \"../firebase/firebase.js\";\n\nimport \"../style/table-list.scss\";\n\nexport default class OpenTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createTable = this.createTable.bind(this);\n    this.setCurrentTable = this.setCurrentTable.bind(this);\n  }\n  createTable(tableRef) {\n    if (!this.props.currentUser) {\n      return;\n    }\n    dispatchToDatabase(\"CREATE_TABLE\", {\n      tableRef: tableRef,\n      currentUser: this.props.currentUser\n    });\n    this.setCurrentTable(tableRef);\n  }\n  setCurrentTable(id) {\n    if (this.props.currentUser) {\n      dispatch(\"UPDATE_CURRENT_TABLE_ID\", {currentTableId: id});\n    }\n  }\n  render() {\n    let tableList = this.props.tableList;\n\n    let tableLinks;\n\n    if (tableList) {\n      let tableListKey = Object.keys(tableList);\n\n      let openTableList = tableListKey.filter(key => {\n        let tableCreateTime = +key;\n\n        if (\n          tableList[key].players &&\n                    new Date().getTime() - tableCreateTime <= TIMER.join\n        ) {\n          return tableList[key].players.some(\n            seat => seat === EMPTY_SEAT\n          );\n        } else {\n          return !tableList[key].players;\n        }\n      });\n\n      let PLAYER_NUM = 4;\n      let ROOM_NUM_LEN = 3;\n\n      tableLinks = openTableList.map((key, index) => {\n        let roomNum = key.slice(key.length - ROOM_NUM_LEN, key.length);\n        let players = this.props.tableList[key].players;\n        let playerInfo = this.props.tableList[key].playerInfo;\n        let emptySeats = players\n          ? players.filter(player => player === EMPTY_SEAT).length\n          : PLAYER_NUM - 1;\n\n        let owner = playerInfo[players[0]].displayName;\n        return (\n          <div\n            className=\"table-list-item\"\n            key={`tablelist-item-${index}}`}>\n            <div className=\"room-number\">\n              <span>{roomNum}</span>\n            </div>\n            <div>{owner}</div>\n            <div className=\"empty-seats\">{emptySeats} </div>\n            <div>\n              <Link\n                className=\"btn-style-border\"\n                onClick={() => this.setCurrentTable(key)}\n                key={key}\n                to={\n                  this.props.currentUser\n                    ? `/table/${key}`\n                    : \"/login\"\n                }>\n                                加入\n              </Link>\n            </div>\n          </div>\n        );\n      });\n    }\n\n    let tableRef = new Date().getTime();\n    let openBtn = this.props.currentUser &&\n            this.props.openBtn && (\n      <Link\n        className=\"btn-style-border\"\n        onClick={() => this.createTable(tableRef)}\n        to={\n          this.props.currentUser ? `/table/${tableRef}` : \"/login\"\n        }>\n                    我要開桌\n      </Link>\n    );\n\n    return (\n      <div className=\"table-list\">\n        {this.props.title && <h4>{this.props.title}</h4>}\n        <div className=\"table-list-header\">\n          <div>房號</div>\n          <div>桌長</div>\n          <div>空位</div>\n          <div className=\"open-table-section\">{openBtn}</div>\n        </div>\n        <div className=\"table-list-item-group\">{tableLinks}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {EMPTY_SEAT} from \"../components/constant.js\";\nimport {getObj, getObjSortKey} from \"../helper/helper.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/table-list.scss\";\n\nexport default class OpenTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createTable = this.createTable.bind(this);\n    this.setCurrentTable = this.setCurrentTable.bind(this);\n  }\n  createTable(tableRef) {\n    dispatchToDatabase(\"CREATE_TABLE\", {\n      tableRef: tableRef,\n      currentUser: this.props.currentUser\n    });\n  }\n  setCurrentTable(id) {\n    if (this.props.currentUser) {\n      dispatch(\"UPDATE_CURRENT_TABLE_ID\", {currentTableId: id});\n    }\n  }\n  render() {\n    let {tableList} = this.props;\n    let tableLinks;\n    if (tableList) {\n      let tableListKey = Object.keys(tableList);\n      let playingTables = tableListKey.filter(\n        key =>\n          tableList[key].players &&\n                    !tableList[key].players.some(\n                      player => player === EMPTY_SEAT\n                    )\n      );\n      tableLinks = playingTables.map((key, index) => {\n        let {players, playerInfo} = this.props.tableList[key];\n        let playerList = players.map((playerKey, index) => (\n          <div key={`playerSeat-${index}`}>\n            {playerInfo[playerKey]\n              ? playerInfo[playerKey].displayName\n              : \"Anonymous\"}\n          </div>\n        ));\n        return (\n          <div\n            className=\"playing-table\"\n            key={`playing-table-item-${index}}`}>\n            <div className=\"room-number\"><span>{key.slice(key.length-3, key.length)}</span></div>\n            {playerList}\n            <div>\n              <Link\n                onClick={() => this.setCurrentTable(key)}\n                className=\"btn-style-border\"\n                to={\n                  this.props.currentUser\n                    ? `/table/${key}`\n                    : \"/login\"\n                }>\n                 觀賞 \n              </Link>\n            </div>\n          </div>\n        );\n      });\n    }\n    return (\n      <div className=\"table-list\">\n        <h4>{this.props.title}</h4>\n        <div className=\"table-list-header playing-table-header\">\n          <div>房號</div>\n          <div>南</div>\n          <div>西</div>\n          <div>北</div>\n          <div>東</div>\n          <div />\n        </div>\n        <div className=\"table-list-item-group\">{tableLinks}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  IndexRoute,\n  BrowserRouter,\n  Router,\n  Route,\n  Switch,\n  Link\n} from \"react-router-dom\";\nimport {EMPTY_SEAT} from \"./constant.js\";\nimport OpenTables from \"./openTables.js\";\nimport PlayingTables from \"./playingTables.js\";\nimport \"../style/lobby.scss\";\nimport openImg from \"../images/open.svg\";\nimport playImg from \"../images/play.svg\";\nimport Header from \"./header.js\";\n\nexport default class Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let open = 0,\n      playing = 0;\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"lobby\">\n          <div className=\"lobby-title\">\n            <h2>Welcome to Wow Bridge</h2>\n          </div>\n          <div className=\"table-lists\">\n            <div className=\"table-list-wrapper\">\n              <div className=\"table-num\" />\n              <div className=\"table-list-inner\">\n                <img src={openImg} />\n                <OpenTables\n                  title={\"揪咖打牌\"}\n                  openBtn={true}\n                  tables={this.props.tables}\n                  currentUser={this.props.currentUser}\n                  open={true}\n                  tableList={this.props.tableList}\n                />\n              </div>\n            </div>\n            <div className=\"table-list-wrapper\">\n              <div className=\"table-num\" />\n              <div className=\"table-list-inner\">\n                <img src={playImg} />\n                <PlayingTables\n                  tables={this.props.tables}\n                  title={\"熱門牌桌\"}\n                  openBtn={true}\n                  open={false}\n                  currentUser={this.props.currentUser}\n                  tableList={this.props.tableList}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/signup.scss\";\nimport \"../style/btn.scss\";\nimport \"../style/checkbox.scss\";\nimport {Redirect} from \"react-router-dom\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport Header from \"./header.js\";\n\n\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm: \"\",\n      agreement: false,\n      message: \"\",\n      redirect: false\n    };\n    this.handleSignUp = this.handleSignUp.bind(this);\n  }\n  handleSignUp() {\n    let auth = app.auth;\n    let {email, password, name} = this.state;\n    if (!email || !password || !confirm) return;\n    let promise = auth.createUserWithEmailAndPassword(email, password);\n    promise\n      .then(user => {\n        let randomIcon = Math.floor(Math.random() * 20);\n        this.props.updateUserInfo(user, {\n          name: name,\n          email: email\n        });\n        return auth.onAuthStateChanged(user => {\n          if (user) {\n            let userInfo = {\n              displayName: name,\n              email: email\n            };\n            user.updateProfile(userInfo);\n            app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n              if (!snapshot.val()) {\n                dispatchToDatabase(\"CREATE_USER\", {\n                  uid: user.uid,\n                  userInfo: userInfo\n                });\n              }\n            });\n          } else {\n            console.log(\"no user uid\");\n          }\n        });\n      })\n      .then(user => this.setState({redirect: true}))\n      .catch(error => this.setState({message: error.message}));\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"singup-wrapper\">\n          <div className=\"signup\">\n            <h2>註冊</h2>\n            <div>\n              <h3>玩家名稱</h3>\n              <input\n                placeholder=\"請輸入玩家名稱\"\n                type=\"text\"\n                onChange={e => {\n                  this.setState({\n                    name: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.name}\n              />\n            </div>\n            <div>\n              <h3>密碼</h3>\n              <input\n                placeholder=\"請輸入至少 6 位數\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    password: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.password}\n              />\n            </div>\n            <div>\n              <h3>確認密碼</h3>\n              <input\n                placeholder=\"請輸入至少 6 位數\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    confirm: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.confirm}\n              />\n            </div>\n            <div>\n              <h3>電子信箱</h3>\n              <input\n                type=\"email\"\n                placeholder=\"john@bridge.com\"\n                onChange={e => {\n                  this.setState({\n                    email: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.email}\n              />\n            </div>\n            <div>\n              <div className=\"error-text error-text-panel\">\n                {this.state.message}\n              </div>\n              <div className=\"btn-group\">\n                <button\n                  onClick={this.handleSignUp}\n                  className=\"btn-style-round\">\n                                    註冊\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// <label className=\"checkbox-lable\">\n//   <input id=\"agreement\" type=\"checkbox\" />\n//   <div\n//     className={\n//       this.state.agreement ? \"checked\" : \"\"\n//     }\n//     onClick={() =>\n//       this.setState({\n//         agreement: !this.state.agreement\n//       })\n//     }\n//   />\n// </label>\n\n// <span\n//   onClick={() =>\n//     this.setState({\n//       agreement: !this.state.agreement\n//     })\n//   }>\n//                   I allow the use of collected data about my study\n//                   behavior for research purposes. The data\n//                   contains information from game playing and\n//                   chatting messages. No individuals can be\n//                   identified from publications.\n// </span>\n","import \"./style/main.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Login from \"./components/login.js\";\nimport Table from \"./components/table.js\";\nimport Lobby from \"./components/lobby.js\";\nimport Loading from \"./components/loading.js\";\nimport SignUp from \"./components/signUp.js\";\nimport {app} from \"./firebase/firebase.js\";\nimport {Route, HashRouter} from \"react-router-dom\";\nimport {dispatch, store} from \"./reducer/reducer.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = store.getState();\n    this.update = this.update.bind(this);\n    this.stopLoading = this.stopLoading.bind(this);\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n    this.getUserAuthInfo = this.getUserAuthInfo.bind(this);\n  }\n  update() {\n    this.setState(store.getState());\n  }\n  componentDidUnMount() {\n    this.unSubscribe();\n  }\n  componentDidMount() {\n    this.unSubscribe = store.subscribe(this.update.bind(this));\n    this.stopLoading();\n  }\n  updateUserInfo(user, userInfo) {\n    dispatch(\"UPDATE_USER_INFO\", {\n      user: user,\n      uid: user.uid,\n      userInfo: userInfo\n    });\n  }\n  getUserAuthInfo() {\n    return new Promise((resolve, reject) => {\n      app.auth.onAuthStateChanged(user => {\n        if (user) {\n          app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n            let userInfo = snapshot.val();\n            resolve(userInfo);\n            dispatch(\"UPDATE_USER_INFO\", {\n              user: user,\n              uid: user.uid,\n              userInfo: snapshot.val()\n            });\n          });\n        } else {\n          reject(true);\n          return dispatch(\"UPDATE_USER_INFO\", {\n            uid: null,\n            userInfo: null,\n            user: null\n          });\n        }\n      });\n    });\n  }\n  stopLoading() {\n    dispatch(\"STOP_LOADING\", {isLoad: true});\n  }\n  render() {\n    if (!this.state.isLoad) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        <HashRouter>\n          <div>\n            <div>\n              <Route\n                path=\"/login\"\n                exact\n                render={props => (\n                  <Login\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    currentUser={this.state.user}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={props => (\n                  <SignUp\n                    updateUserInfo={this.updateUserInfo}\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    currentUser={this.state.user}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                path=\"/table/:id\"\n                render={props => (\n                  <Table\n                    currentTableId={\n                      this.state.currentTableId\n                    }\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    userInfo={this.state.userInfo}\n                    chatroom={this.state.chatroom}\n                    tables={this.state.tables}\n                    tableList={this.state.tableList}\n                    currentUser={this.state.user}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Lobby\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    tables={this.state.tables || null}\n                    currentUser={this.state.user}\n                    tableList={this.state.tableList}\n                  />\n                )}\n              />\n            </div>\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n"],"sourceRoot":""}
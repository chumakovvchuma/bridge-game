{"version":3,"sources":["webpack:///./src/images/logo.svg","webpack:///./src/images/open.svg","webpack:///./src/images/play.svg","webpack:///./src/images/avatar/0.svg","webpack:///./src/images/avatar/1.svg","webpack:///./src/images/avatar/2.svg","webpack:///./src/images/avatar/3.svg","webpack:///./src/images/avatar/4.svg","webpack:///./src/images/avatar/5.svg","webpack:///./src/images/avatar/6.svg","webpack:///./src/images/avatar/7.svg","webpack:///./src/images/avatar/8.svg","webpack:///./src/images/avatar/9.svg","webpack:///./src/images/avatar/10.svg","webpack:///./src/images/avatar/11.svg","webpack:///./src/images/avatar/12.svg","webpack:///./src/images/avatar/13.svg","webpack:///./src/images/avatar/14.svg","webpack:///./src/images/avatar/15.svg","webpack:///./src/images/avatar/16.svg","webpack:///./src/images/avatar/17.svg","webpack:///./src/images/avatar/18.svg","webpack:///./src/images/avatar/19.svg","webpack:///./src/images/avatar/20.svg","webpack:///./src/images/avatar/robot.svg","webpack:///./src/images/avatar/avatar_slot.svg","webpack:///./src/images/avatar/21.svg","webpack:///./src/helper/helper.js","webpack:///./src/firebase/firebase.js","webpack:///./src/firebase/config.js","webpack:///./src/components/shape/shape.js","webpack:///./src/components/constant.js","webpack:///./src/reducer/reducer.js","webpack:///./src/components/card.js","webpack:///./src/components/getCurrentMaxTrick.js","webpack:///./src/components/trick.js","webpack:///./src/components/socre.js","webpack:///./src/components/thumbnail.js","webpack:///./src/components/trickScore.js","webpack:///./src/components/scoreBoard.js","webpack:///./src/components/auctionList.js","webpack:///./src/components/auction.js","webpack:///./src/components/player.js","webpack:///./src/components/auctionResult.js","webpack:///./src/components/examineCards.js","webpack:///./src/components/getWinnerCard.js","webpack:///./src/components/progress.js","webpack:///./src/components/playerReadyList.js","webpack:///./src/components/game.js","webpack:///./src/components/login.js","webpack:///./src/components/createTable.js","webpack:///./src/components/sidebar/recordItem.js","webpack:///./src/components/dotIndicator/dot.js","webpack:///./src/components/sidebar/gameRecord.js","webpack:///./src/components/sidebar/hand.js","webpack:///./src/components/sidebar/rewindAuction.js","webpack:///./src/components/sidebar/rewindResult.js","webpack:///./src/components/sidebar/gameRewind.js","webpack:///./src/components/chatroom.js","webpack:///./src/components/sidebar/sidebar.js","webpack:///./src/components/loading.js","webpack:///./src/components/table.js","webpack:///./src/components/userState.js","webpack:///./src/components/header.js","webpack:///./src/components/openTables.js","webpack:///./src/components/playingTables.js","webpack:///./src/components/lobby.js","webpack:///./src/components/signUp.js","webpack:///./src/index.js"],"names":["module","exports","__webpack_require__","p","getRandomKey","n","arguments","length","undefined","letter","Array","from","fill","map","w","Math","floor","random","join","getRandomInt","min","max","firebaseApp","a","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","app","db","database","auth","onAuthChanged","callback","onAuthStateChanged","user","console","log","getNodeByPathOnce","path","action","ref","on","getNodeByPath","pushDataByPath","data","push","cancelListenDataChange","off","listenPathChildren","setNodeByPath","set","getDataByPathOnce","once","getNewChildKey","node","child","key","updateTableDataByID","id","updateTableGameDataByPath","game","setTableListData","shape_Heart","_ref","scale","_ref$fill","react_default","createElement","shape_SvgContainer","ratio","d","shape_Spade","_ref2","_ref2$fill","shape_Diamond","_ref3","_ref3$fill","points","shape_Club","_ref4","_ref4$fill","_ref5","children","width","height","viewBox","transform","CARD_NUM","TIMER","RESULT","SUIT_SHAPE","0","1","2","3","4","CARD_RANK","DEFAULT_GAME","deal","bid","isDb","isRdb","trick","trump","order","isGameOver","PLAYERS","GAME_STATE","DIRECTION","Emoji","dispatch","type","store","Object","assign","reducer_dispatchToDatabase","uid","userInfo","currentUser","timeStamp","Date","getTime","players","slice","newPlayerInfo","uidKey","displayName","tableKey","linkId","tableRef","newTable","createTime","gameState","playerInfo","C1-robot","C2-robot","C3-robot","-1","ready","isOpen","table","tableData","record","playerIndex","updateTable","cards","newGame","targetCardIndex","findIndex","card","value","winnerCard","winner","isWin","player","targetCardInex","currentCard","maxTrick","color","emptySeatIndex","updatePlayers","message","time","newMessage","isPlayer","some","content","tableList","val","userList","redux","state","isInTablePage","isLoad","tables","chatroom","updatedTables","currentTableId","closeTables","es","snapshot","card_TrickCard","className","card_Card","flipUp","_ref2$evt","evt","_ref2$name","name","kind","wrapperName","onClick","getCurrentMaxTrick","apply","_toConsumableArray","components_trick","Trick","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","fadeOutCards","Component","prevProps","_this2","setTimeout","setState","direction","_props","cardsByPlayer","isTrickFinish","currentTrick","hand","index","trickCards","sort","cardA","cardB","userHand","i","filter","teamScore","teamA","teamB","winningScore","Avatar","_0_default","_1_default","_2_default","_3_default","_4_default","5","_5_default","6","_6_default","7","_7_default","8","_8_default","9","_9_default","10","_10_default","11","_11_default","12","_12_default","13","_13_default","14","_14_default","15","_15_default","16","_16_default","17","_17_default","18","_18_default","19","_19_default","20","_20_default","avatarNum","keys","thumbnail_Thumbnail","_ref$name","_ref$size","size","_ref$disabled","disabled","_ref$offset","offset","_ref$border","border","_ref$styleName","isCurrentUser","styleName","_ref$robotMargin","robotMargin","_ref$robotOffset","robotOffset","shiftAvatar","split","str","charCodeAt","reduce","sum","num","source","includes","robot_default","style","borderRadius","marginTop","src","thumbnail_ThumbnailWithTag","_ref2$size","_ref2$disabled","_ref2$offset","_ref2$border","_ref2$isCurrentUser","_ref2$styleName","thumbnail_ThumbailGroup","teamOrder","members","thumbnail_ThumbailGroupWithTag","styleObj","styleOb","thumbnail_WaitingThumbnail","_React$Component","WaitingThumbnail","thumbnail_classCallCheck","thumbnail_possibleConstructorReturn","posY","position","stop","isGoingUp","changeImg","bind","timer","setInterval","thumbnail_inherits","thumbnail_createClass","mount","dy","clearInterval","img","avatar_slot_default","trickScore","TrickScore","trickScore_classCallCheck","trickScore_possibleConstructorReturn","windowWidth","windowHeight","score","playerList","innerStyle","resizeRatio","thumbnailSize","minWidth","scoreBoard","ScoreBoard","scoreBoard_classCallCheck","scoreBoard_possibleConstructorReturn","recordGame","_props$table","indexOf","playerTeamScore","winScore","resultWords","_game$bid","declarer","isUserWin","widnowHeight","auctionList_AuctionList","result","resultsNum","ceil","res","re","j","resultItem","opt","components_auction","Auction","auction_classCallCheck","auction_possibleConstructorReturn","visibility","current","updateBid","validateUserTurnAndsetTrump","newBid","isFinishAuction","isAllPass","every","hasValidTrump","_this3","_props2","trickOpt","trumpOpt","allTrickOpt","selectedTrump","DoubleBtn","ReDoubleBtn","playerThumbnails","player_Player","_ref$current","auctionResult_AuctionResult","AuctionResult","auctionResult_classCallCheck","auctionResult_possibleConstructorReturn","auctionResult_inherits","auctionResult_createClass","top","right","mapToFourHands","userIndex","examineCards_getRandomCards","randomIndex","validateShuffle","examineCards_fourHands","getWinnerCard_findMaxValueByTrump","arr","list","item","getWinnerCard_getWinnerCard","cardValue","cardsMatchCurrentTrick","noTrumpCards","first","getWinnerCard_toConsumableArray","_cardsMatchCurrentTri","firstHand","_slicedToArray","tmp","trumpRef","progress_Progress","totalWidth","currentWidth","_ref$height","_ref$fg","fg","_ref$bg","bg","total","fillRule","x","y","rx","playerReadyList","PlayerReadyList","playerReadyList_classCallCheck","playerReadyList_possibleConstructorReturn","timeInterval","frequency","progress","setReadyState","countDownTimer","checkReadyState","isMount","isMounted","Promise","resolve","reject","then","timesUp","_props3","isEmptySeat","seat","isAllPlayerReady","playBtns","thumbnails","playerName","currentUserCanPlay","zIndex","currentVal","components_game","Game","game_classCallCheck","game_possibleConstructorReturn","endAuction","window","innerWidth","innerHeight","getNextMaxTrick","shuffle","suffleCardsWhenReady","handleResize","getAuctionStatus","addEventListener","removeEventListener","game_toConsumableArray","maxTrickNum","shuffleCards","isEndOfCurrentTrick","isDummyMode","hands","offsetIndex","examineCards_toConsumableArray","offsetPlayers","getOffsetDatabyCurrentUser","flipIndex","currentTurnPlayer","isCurrentUserPlayer","playerHand","playerHandIndex","b","display","mapResult","dislayList","flat","totalLen","mid","threeRow","mapFlipDownCards","firstCard","PLAYER_NUM","examineCards_getFirstCard","hasFollowSameSuit","examineCards_hasSameSuitWithFirstCard","cardsInHand","each","declarerIndex","dummyPlayer","declarerPlayer","isValidCard","canBeClick","allowClickEvt","totalCardsInHand","suit","len","totalSuitType","sidebarWidth","horCardStyle","left","verTopPos","suitNum","getHandHeight","verEdgePos","isAllReady","startGame","bottom","login","Login","login_classCallCheck","login_possibleConstructorReturn","redirect","email","password","handleName","handleLogin","_state","signInWithEmailAndPassword","catch","err","error","e","target","_this4","Redirect","to","placeholder","onChange","currentTarget","CreateTable","createTable_classCallCheck","createTable_possibleConstructorReturn","sidebar_recordItem","RecordItem","recordItem_classCallCheck","recordItem_possibleConstructorReturn","changeRecord","dot_Dot","page","changePage","GameRecord","gameRecord_classCallCheck","gameRecord_possibleConstructorReturn","recordList","dots","dotsNum","concat","start","end","recordItem","currentRecord","dotItem","hand_Hand","displaySuit","rewindAuction_RewindAuction","rewindResult_RewindResult","GameRewind","gameRewind_classCallCheck","gameRewind_possibleConstructorReturn","_props$record","fourHands","components_chatroom","Chatroom","chatroom_classCallCheck","chatroom_possibleConstructorReturn","sendMessage","handleChange","handleKeyPress","addEmoji","msgEnd","emoji","scrollToBottom","scrollIntoView","behavior","block","messageList","emojiList","emj","viewers","symbol","backgroundColor","msg","el","float","clear","rows","col","onKeyPress","sidebar","Sidebar","sidebar_classCallCheck","sidebar_possibleConstructorReturn","tab","handleTab","marginLeft","loading","Loading","loading_classCallCheck","loading_possibleConstructorReturn","components_table","Table","table_classCallCheck","table_possibleConstructorReturn","updateTableData","match","params","location","hash","getUserAuthInfo","redirectToLogin","addPlayerToTable","randomColor_default","alreadyAPlayer","alreadyAViewer","Boolean","targetTable","userState","UserState","userState_classCallCheck","userState_possibleConstructorReturn","handleSignOut","closePanel","updateHeader","signOut","Link","components_header","Header","header_classCallCheck","header_possibleConstructorReturn","rightTopCorner","userProfile","registerBtns","logo_default","openTables","OpenTables","openTables_classCallCheck","openTables_possibleConstructorReturn","createTable","setCurrentTable","tableLinks","emptySeats","openBtn","title","components_playingTables","playingTables_classCallCheck","playingTables_possibleConstructorReturn","_props$tableList$key","playerKey","components_lobby","Lobby","lobby_classCallCheck","lobby_possibleConstructorReturn","open_default","open","play_default","signUp","SignUp","signUp_classCallCheck","signUp_possibleConstructorReturn","confirm","agreement","handleSignUp","createUserWithEmailAndPassword","updateUserInfo","updateProfile","src_App","App","src_classCallCheck","src_possibleConstructorReturn","getState","update","stopLoading","unSubscribe","subscribe","pathName","pathname","HashRouter","isLogin","Route","exact","render","_extends","react_dom_default","document","getElementById"],"mappings":"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","file":"main.6951.js","sourcesContent":["module.exports = __webpack_public_path__ + \"a9a323fd5ae656a5e7131b60e27fe204.svg\";","module.exports = __webpack_public_path__ + \"67ce7d5a833d9fc83f623c431a6760ce.svg\";","module.exports = __webpack_public_path__ + \"7df62acafa694b8c1a4a0528fb6546cc.svg\";","module.exports = __webpack_public_path__ + \"f576168014a0a063e9a9067746d52afe.svg\";","module.exports = __webpack_public_path__ + \"faf9092c22feba281cd0b857153cf2ac.svg\";","module.exports = __webpack_public_path__ + \"d192d5a8c77493a9b9a15e4bad4856b1.svg\";","module.exports = __webpack_public_path__ + \"abc73620aa65da15acbe08e163313e69.svg\";","module.exports = __webpack_public_path__ + \"7b537845db343dc95978342656f3dc31.svg\";","module.exports = __webpack_public_path__ + \"2d2ff47c522a67f3797a22229173805c.svg\";","module.exports = __webpack_public_path__ + \"d6a663b6ce16afbdddedd183bfc0b95a.svg\";","module.exports = __webpack_public_path__ + \"698ae12ca4406b41dd2c2b5f4188f232.svg\";","module.exports = __webpack_public_path__ + \"11177e33f8a5453cc4a2af006bf9f0cc.svg\";","module.exports = __webpack_public_path__ + \"7eeb4128a906d97fc444f2ec6f7f2a1e.svg\";","module.exports = __webpack_public_path__ + \"2b61df562f9ceba376a217086ea0a4b8.svg\";","module.exports = __webpack_public_path__ + \"7613d518f4a31149fa31d1ef8fa9c9c8.svg\";","module.exports = __webpack_public_path__ + \"ab790a27815c6aedaebbd55078126d7a.svg\";","module.exports = __webpack_public_path__ + \"8046cef8ebd3096cc0a092095a911f45.svg\";","module.exports = __webpack_public_path__ + \"374c11fb9598eacab7db87323f15d7d7.svg\";","module.exports = __webpack_public_path__ + \"eec13f2e2f2341c89b52487b6c6f5531.svg\";","module.exports = __webpack_public_path__ + \"9da5b3a25ce2afe1ff9a69a9a480b099.svg\";","module.exports = __webpack_public_path__ + \"7b799210bff006a8a7cdc13de038aa1c.svg\";","module.exports = __webpack_public_path__ + \"fa7e619e21d79bd64b2932efa099a21a.svg\";","module.exports = __webpack_public_path__ + \"29fd5a207752c8fb18bdeffe7c7f8c24.svg\";","module.exports = __webpack_public_path__ + \"addf317cff816fe4d291212403763c59.svg\";","module.exports = __webpack_public_path__ + \"45f7fd83a8a3a89158e6756d229ab27e.svg\";","module.exports = __webpack_public_path__ + \"86e690f3ad2e18fae51f04c2e64f688d.svg\";","module.exports = __webpack_public_path__ + \"8ca025b877e870030ea3af1681978e68.svg\";","export const getKeywordFromURL = () => {\n  let urlLocation = window.location.search,\n    index = urlLocation.search(/=/g);\n  if (!urlLocation) return \"\";\n  return urlLocation.slice(index + 1, urlLocation.length);\n};\n\nexport const getKeywordObjFromURL = () => {\n  let keyword = getKeywordFromURL();\n  let urlLocation = window.location.search,\n    index = urlLocation.search(/=/g);\n  return {\n    key: urlLocation.slice(1, index),\n    value: getKeywordFromURL()\n  };\n};\n\nexport const getRandomKey = (n = 8) => {\n  let letter = \"abcdefghijklmnopqrstuvxyzABCDEFGHIJKLMNOPQRSTUVXYZ\";\n  return Array.from({length: n})\n    .fill(0)\n    .map(w => letter[Math.floor(Math.random() * (letter.length - 1))])\n    .join(\"\");\n};\n\nexport const getObj = (key, value) => {\n  let newObj = {};\n  newObj[key] = value;\n  return Object.assign({}, newObj);\n};\n\nexport const getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getObjSortKey = obj => {\n  if (!obj) {\n    return null;\n  }\n  return Object.keys(obj).sort((a, b) => a < b);\n};\n","import firebase from \"firebase\";\nimport {config} from \"./config.js\";\n\nexport const firebaseApp = firebase.initializeApp(config);\n\nexport const app = {\n  db: firebaseApp.database(),\n  auth: firebaseApp.auth(),\n  onAuthChanged: callback => {\n    firebaseApp.auth().onAuthStateChanged(user => {\n      if (user) {\n        callback(user);\n      } else {\n        console.log(\"no one login\");\n      }\n    });\n  },\n  getNodeByPathOnce: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .on(\"value\", action);\n  },\n  getNodeByPath: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .on(\"value\", action);\n  },\n  pushDataByPath: (path, data) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .push(data);\n  },\n  cancelListenDataChange: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .off(\"value\", action);\n  },\n  listenPathChildren: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .off(\"value\");\n  },\n  setNodeByPath: (path, data) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .set(data);\n  },\n  getDataByPathOnce: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .once(\"value\", action);\n  },\n  getNewChildKey: node => {\n    return firebaseApp\n      .database()\n      .ref()\n      .child(node)\n      .push().key;\n  },\n  updateTableDataByID: (id, data) => {\n    firebaseApp\n      .database()\n      .ref(`tables/${id}/`)\n      .set(data);\n  },\n  updateTableGameDataByPath: (path, game) => {\n    firebaseApp\n      .database()\n      .ref(\"tables/\" + path)\n      .set(game);\n  },\n  setTableListData: (id, data) => {\n    firebaseApp\n      .database()\n      .ref(`tableList/${id}/`)\n      .set(data);\n  }\n};\n","export const config = {\n  apiKey: \"AIzaSyDsmWxFexrd890dUvpA313qvxvcjDRp1Ok\",\n  authDomain: \"wowbridge88.firebaseapp.com\",\n  databaseURL: \"https://wowbridge88.firebaseio.com\",\n  projectId: \"wowbridge88\",\n  storageBucket: \"wowbridge88.appspot.com\",\n  messagingSenderId: \"862342003288\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet redColor = \"#FF525D\";\nlet blackColor = \"#222222\";\n\nexport const Heart = ({scale, fill = \"#FF525D\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={0.89} fill={fill}>\n      <path d=\"M70.9643211,0 C59.2565148,0 53.056072,5.64335169 49.9709368,10.1546618 C46.889795,5.64335169 40.6986702,0 29.0152682,0 C15.0405332,0 0,9.29808951 0,29.7129874 C0,37.7588224 1.74734105,44.1438566 5.84192287,51.0638602 C9.82779506,57.7993304 18.2685439,66.1002296 30.9298889,75.7372219 C35.8715185,79.4984213 40.4235682,82.6625486 43.3724836,84.6547112 C49.0391399,88.4833363 49.2609963,88.5228158 49.9456452,88.5232594 C49.9802548,88.5241466 50.0135332,88.5245902 50.0468117,88.5245902 C50.6941887,88.5245902 51.1401201,88.3183208 56.5574098,84.6764471 C59.5081,82.6922691 64.0641431,79.5401188 69.0102098,75.7873476 C81.6870849,66.1698733 90.1513504,57.851674 94.1682825,51.0643038 C98.2557649,44.1571643 100,37.7712429 100,29.713431 C100,9.29808951 84.9488177,0 70.9643211,0 Z\" />\n    </SvgContainer>\n  );\n};\n\nexport const Spade = ({scale, fill = \"#222\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={1} fill={fill}>\n      <path\n        d=\"M88.5085925,35.4545714 C84.7618726,29.0791639 76.8279859,21.2225289 64.9275728,12.1017285 C60.2811897,8.54098888 56.0030971,5.54662558 53.2315338,3.66150342 C47.8489868,0 47.6921609,0 47.0310732,0 C46.3716539,0 46.2152451,0 40.8347835,3.64219036 C38.0615518,5.52017509 33.7788713,8.50362231 29.1295686,12.0555451 C17.2145573,21.1574523 9.25814768,29.0300415 5.48264861,35.4541516 C1.63958096,41.9928804 0,48.0361874 0,55.6623252 C0,74.9846174 14.1481113,83.785073 27.2935382,83.785073 C33.059808,83.785073 37.4025496,82.3177007 40.6500126,80.3074635 L37.0551136,94 L56.8014075,94 L53.1693874,80.1668141 C56.4343682,82.2488454 60.8367536,83.785073 66.7252308,83.785073 C79.8614817,83.785073 94,74.9846174 94,55.6623252 C94,48.0475233 92.3579165,42.0042164 88.5085925,35.4545714 Z\"\n        fill={fill}\n      />\n    </SvgContainer>\n  );\n};\n\nexport const Diamond = ({scale, fill = \"#FF525D\"}) => {\n  let w = 93,\n    h = 100;\n  return (\n    <SvgContainer scale={scale} ratio={1} fill={fill}>\n      <polygon\n        points={`${w / 2} 0 0 ${h / 2} ${w / 2} ${h} ${w} ${h / 2}`}\n      />\n    </SvgContainer>\n  );\n};\n\nexport const Club = ({scale, fill = \"#222\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={0.98} fill={fill}>\n      <path\n        d=\"M70.3555185,31.9345189 C71.174537,29.4903991 71.587963,26.9404062 71.587963,24.3163882 C71.587963,10.9083748 60.5577593,0 47,0 C33.4422407,0 22.412037,10.9083748 22.412037,24.3163882 C22.412037,26.9404062 22.825463,29.4903991 23.6444815,31.9345189 C10.5223426,32.426872 0,43.137703 0,56.2332616 C0,69.641275 11.0302037,80.5496498 24.587963,80.5496498 C30.872037,80.5496498 36.6116944,78.2040867 40.9631111,74.3539201 L35.6686481,92.1010101 L58.1820833,92.1010101 L52.8323519,74.1692877 C57.2077037,78.12834 63.0287407,80.5496498 69.412037,80.5496498 C82.9697963,80.5496498 94,69.641275 94,56.2332616 C94,43.137703 83.4776574,32.426872 70.3555185,31.9345189 Z\"\n        fill={fill}\n      />\n    </SvgContainer>\n  );\n};\n\nconst SvgContainer = ({children, ratio, scale, fill}) => {\n  let width = scale * 100,\n    height = Math.floor(width * ratio);\n  return (\n    <div>\n      <svg\n        width={`${width}px`}\n        height={`${height}px`}\n        viewBox={`0 0 ${width} ${height}`}>\n        <g fill={fill} transform={`scale(${scale})`}>\n          {children}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {Heart, Spade, Diamond, Club} from \"./shape/shape.js\";\nexport const CARD_NUM = {\n  TOTAL: 52,\n  SUITS: 4,\n  HAND: 13\n};\n\nexport const TIMER = {\n  join: 25000,\n\n}\nexport const ROBOT_NAME = \"-robot\" ;\n\nexport const RESULT = {\n  win: \"YOU WIN\",\n  lose: \"YOU LOSE\"\n};\n\nexport const PLAYER_NUM = 4;\nexport const EMPTY_SEAT = -1;\nexport const NO_TRUMP = 4;\nexport const BID_NUM = [1, 2, 3, 4, 5, 6, 7];\n\nexport const SUIT_SHAPE = {\n  0: (scale, fill) => <Club scale={scale} fill={fill} />,\n  1: (scale, fill) => <Diamond scale={scale} fill={fill} />,\n  2: (scale, fill) => <Heart scale={scale} fill={fill} />,\n  3: (scale, fill) => <Spade scale={scale} fill={fill} />,\n  4: scale => <div>NT</div>\n};\n\nexport const CARD_RANK = [2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"A\"];\n\nexport const DEFAULT_GAME = {\n  deal: 0,\n  bid: {\n    isDb: false,\n    isRdb: false,\n    trick: 0,\n    trump: -1\n  },\n  order: -1,\n  isGameOver: false\n};\n\nexport const PLAYERS = [EMPTY_SEAT, EMPTY_SEAT, EMPTY_SEAT, EMPTY_SEAT];\nexport const GAME_STATE = {\n  join: \"join\",\n  auction: \"auction\",\n  playing: \"playing\",\n  gameover: \"gameover\",\n  close: \"close\"\n};\n\nexport const TAB_OPTION = [\"Chat\", \"Result\"];\n\nexport const DIRECTION = [\"south\", \"west\", \"north\", \"east\"];\n\nexport const Emoji = [\n  \"🤔\",\n  \"🤣\",\n  \"🤩\",\n  \"😝\",\n  \"😍\",\n  \"😵\",\n  \"🙄\",\n  \"🤭\",\n  \"😱\",\n  \"🤷\",\n  \"👍\",\n  \"👎\",\n  \"👯\",\n  \"👀\",\n  \"🐷\",\n  \"🎉\",\n  \"🎃\",\n  \"🍺\",\n  \"🔥\",\n  \"🛁\"\n];\n","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {app, firebaseApp} from \"../firebase/firebase.js\";\nimport {getObj} from \"../helper/helper.js\";\nimport {\n  GAME_STATE,\n  EMPTY_SEAT,\n  DEFAULT_GAME,\n  PLAYERS\n} from \"../components/constant.js\";\n\nexport const dispatch = (type, action) =>\n  store.dispatch(Object.assign({}, {type: type}, action));\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_USER_INFO\": {\n      return Object.assign({}, state, {\n        user: action.user,\n        uid: action.uid,\n        userInfo: action.userInfo\n      });\n    }\n\n    case \"UPDATE_OPEN_TABLE_LIST\": {\n      // let {closeTables} = Object.assign({}, state);\n      // closeTables[action.id] = action.linkId;\n      // console.log(\"udpated --------- in open table list\");\n      // return Object.assign({}, state, {\n      //   closeTables: closeTables\n      //\n      // });\n      return Object.assign({}, state);\n    }\n    case \"UPDATE_USER_LIST\": {\n      return Object.assign({}, state, {\n        userList: action.userList\n      });\n    }\n    case \"SET_CURRENT_HEADER\": {\n      return Object.assign({}, state, {\n        isInTablePage: action.isInTablePage\n      });\n    }\n    case \"STOP_LOADING\": {\n      return Object.assign({}, state, {isLoad: action.isLoad});\n    }\n    case \"FETCH_TABLE_DATA\": {\n      // tables is an array, query table by index\n      return Object.assign({}, state, {tables: action.tables});\n    }\n    case \"UPDATE_CHAT_ROOM\": {\n      return Object.assign({}, state, {chatroom: action.chatroom});\n    }\n    case \"UPDATE_TABLE_DATA\": {\n      let {id, table} = action;\n      let tables = state.tables;\n      let updatedTables = Object.assign({}, tables);\n      updatedTables[id] = table;\n      return Object.assign({}, state, {tables: updatedTables});\n    }\n    case \"UPDATE_CURRENT_TABLE_ID\": {\n      console.log(\"in update current table id, reducer\");\n      return Object.assign({}, state, {\n        currentTableId: action.currentTableId\n      });\n    }\n    case \"FETCH_TABLE_LIST\": {\n      // tables is an array, query table by index\n      return Object.assign({}, state, {tableList: action.tableList});\n    }\n    default:\n      return state;\n  }\n};\n\nexport const dispatchToDatabase = (type, action) => {\n  switch (type) {\n    case \"CREATE_USER\": {\n      app.setNodeByPath(`/users/${action.uid}`, action.userInfo);\n      break;\n    }\n\n    case \"CREATE_TABLE\": {\n      let {currentUser} = action;\n      if (!action.currentUser.uid) {\n        console.log(\"user is not login\");\n        return;\n      }\n      let timeStamp = new Date().getTime();\n      let players = PLAYERS.slice(0);\n      let newPlayerInfo = {};\n      let uidKey = `${currentUser.uid}`;\n      newPlayerInfo[uidKey] = {displayName: currentUser.displayName};\n      players[0] = action.currentUser.uid;\n      let tableKey = app.getNewChildKey(\"tables\");\n      let linkId = action.tableRef || timeStamp;\n      let newTable = {\n        timeStamp: linkId,\n        createTime: linkId,\n        gameState: GAME_STATE.join,\n        id: tableKey,\n        linkId: linkId,\n        game: DEFAULT_GAME,\n        playerInfo: Object.assign(\n          {},\n          {\n            \"C1-robot\": {displayName: \"C1-robot\"},\n            \"C2-robot\": {displayName: \"C2-robot\"},\n            \"C3-robot\": {displayName: \"C3-robot\"},\n            \"-1\": {displayName: \"\"}\n          },\n          newPlayerInfo\n        ),\n        players: players,\n        ready: [false, false, false, false]\n      };\n      app.setNodeByPath(`tables/${tableKey}`, newTable);\n      app.setTableListData(linkId, {\n        id: tableKey,\n        isOpen: true,\n        playerInfo: Object.assign(\n          {},\n          {\n            \"C1-robot\": {displayName: \"C1-robot\"},\n            \"C2-robot\": {displayName: \"C2-robot\"},\n            \"C3-robot\": {displayName: \"C3-robot\"},\n            \"-1\": {displayName: \"\"}\n          },\n          newPlayerInfo\n        )\n      });\n      break;\n    }\n\n    case \"CREATE_NEW_GAME\": {\n      let {table} = action;\n      let tableData = Object.assign({}, table);\n      let {record, game} = tableData;\n      if (record) {\n        record.push(game);\n      } else {\n        record = [game];\n      }\n      // reset table\n      let timeStamp = new Date().getTime();\n\n      tableData.record = record;\n      tableData.createTime = timeStamp;\n      tableData.game = Object.assign({}, DEFAULT_GAME);\n      tableData.ready = [false, false, false, false];\n      tableData.timeStamp = timeStamp;\n      tableData.gameState = GAME_STATE.join;\n      app.updateTableDataByID(tableData.id, tableData);\n      break;\n    }\n    case \"READY_A_PLAYER\": {\n      let {table, playerIndex} = action;\n      // let path = `tables/${table.id}/ready/${playerIndex}`;\n      let updateTable = Object.assign({}, table);\n      console.log(\" ready a player in redurcer\");\n      updateTable.ready[playerIndex] = true;\n      // updateTable.timeStamp = new Date().getTime();\n      app.setNodeByPath(`tables/${table.id}`, updateTable);\n      // updateTimer\n      // app.setNodeByPath(\n      //   `tables/${table.id}/timeStamp/`,\n      //   new Date().getTime\n      // );\n      break;\n    }\n    case \"UPDATE_TABLE_TIMESTAMP\": {\n      app.setNodeByPath(\n        `tables/${action.id}/timeStamp/`,\n        new Date().getTime()\n      );\n      break;\n    }\n    case \"ADD_NEW_DECK_TO_TABLE\": {\n      // todo, use high order function to wrap this\n      // create a game\n      let {cards, table} = action;\n      let newGame = Object.assign({}, table.game, {\n        cards: cards\n      });\n      app.updateTableDataByID(`${table.id}/game/`, newGame);\n      break;\n    }\n    case \"UPDATE_WINNER_CARD\": {\n      // todo, use high order function to wrap this\n      let {table} = action;\n      let game = Object.assign({}, table.game);\n\n      let cards = game.cards;\n      game.order = action.order;\n\n      // update which player will draw first\n      let targetCardIndex = cards.findIndex(\n        card => card.value === action.winnerCard.value\n      );\n      let winner = action.winnerCard;\n      winner.isWin = true;\n      game.deal = winner.player;\n      cards[targetCardIndex] = winner;\n      // 51 means the index in the card array , the n-52 cards is given\n      if (action.order === 51) {\n        game.isGameOver = true;\n      }\n      app.updateTableDataByID(`${table.id}/game/`, game);\n      break;\n    }\n    case \"UPDATE_CURRENT_TRICK\": {\n      // update this is how many trick players have been draw\n\n      let {table, order, deal} = action;\n      console.log(\"action , in current trick\", action);\n      console.log(\"table.id\", table);\n      let {game} = table;\n      app.updateTableGameDataByPath(`${table.id}/game/order/`, order);\n\n      let cards = game.cards;\n\n      let targetCardInex = cards.findIndex(\n        card => card.value === action.value\n      );\n\n      let currentCard = cards[targetCardInex];\n      currentCard.order = order;\n\n      // update deal order, who can draw card next\n      app.updateTableGameDataByPath(`${table.id}/game/deal/`, deal);\n      app.updateTableGameDataByPath(\n        `${table.id}/timeStamp/`,\n        new Date().getTime()\n      );\n\n      // this card has been draw in nth trick\n      // set current trick number to this card\n      if (currentCard.trick === 0) {\n        // update trick to current nth trick, e.g. players have play 4 tricks\n        // so far, the maxTrick will be 5\n        currentCard.trick = action.maxTrick;\n        // record who has this card\n        currentCard.player = (deal + 4 - 1) % 4;\n\n        app.updateTableGameDataByPath(\n          `${table.id}/game/cards/${targetCardInex}`,\n          currentCard\n        );\n      }\n      break;\n    }\n    case \"ADD_VIEWER_TO_TABLE\": {\n      let {currentUser, table, color} = action;\n      let {linkId, id} = table;\n      app.setNodeByPath(`tables/${id}/viewers/${currentUser.uid}`, color);\n      app.updateTableGameDataByPath(\n        `${id}/timeStamp/`,\n        new Date().getTime()\n      );\n      // if anyone join this table, update data to table list\n      break;\n    }\n    case \"ADD_PLAYER_TO_TABLE\": {\n      let {currentUser, table, emptySeatIndex, color} = action;\n      let {linkId, id, players} = table;\n\n      app.setNodeByPath(\n        `tables/${id}/players/${emptySeatIndex}`,\n        currentUser.uid\n      );\n      app.setNodeByPath(`tables/${id}/playerInfo/${currentUser.uid}`, {\n        displayName: currentUser.displayName\n      });\n      app.setNodeByPath(`tables/${id}/viewers/${currentUser.uid}`, color);\n      // if anyone join this table, update data to table list\n      let updatePlayers = players.slice(0);\n      updatePlayers[emptySeatIndex] = currentUser.uid;\n      app.setNodeByPath(`tableList/${linkId}/players`, updatePlayers);\n      app.setNodeByPath(\n        `tableList/${linkId}/playerInfo/${currentUser.uid}`,\n        {displayName: currentUser.displayName}\n      );\n      app.updateTableGameDataByPath(\n        `${id}/timeStamp/`,\n        new Date().getTime()\n      );\n\n      break;\n    }\n    case \"UPDATE_AUCTION\": {\n      // in order to detect if some user isn't online anymore\n      // record current to database when a current user is deal\n      app.updateTableGameDataByPath(\n        `${action.table.id}/game/`,\n        action.game\n      );\n      app.updateTableGameDataByPath(\n        `${action.table.id}/timeStamp/`,\n        new Date().getTime()\n      );\n      break;\n    }\n    case \"SEND_MESSAGE_TO_CHATROOM\": {\n      let {message, currentUser, table} = action;\n      let time = new Date().getTime();\n      let newMessage = {};\n      newMessage.isPlayer = table.players.some(\n        player => player === currentUser.uid\n      );\n      newMessage.content = action.message;\n      newMessage.uid = currentUser.uid;\n      newMessage.displayName = currentUser.displayName;\n      app.setNodeByPath(\n        `chatroom/${table.id}/message/${time}/`,\n        newMessage\n      );\n    }\n    default:\n      return null;\n  }\n};\n\n// app.getNodeByPathOnce(\"tables\", value => {\n//   return dispatch(\"FETCH_TABLE_DATA\", {tables: value.val()});\n// });\n\napp.getNodeByPath(\"tableList\", value => {\n  return dispatch(\"FETCH_TABLE_LIST\", {tableList: value.val()});\n});\n\napp.getNodeByPath(\"users\", value => {\n  return dispatch(\"UPDATE_USER_LIST\", {userList: value.val()});\n});\n\nexport const store = createStore(\n  appReducer,\n  {\n    currentUser: null,\n    isLoad: false,\n    tables: {},\n    isInTablePage: false,\n    currentTableId: null,\n    closeTables: {}\n  },\n  applyMiddleware(thunk)\n);\n\napp.auth.onAuthStateChanged(user => {\n  if (user) {\n    app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n      let userInfo = snapshot.val();\n      dispatch(\"UPDATE_USER_INFO\", {\n        user: user,\n        uid: user.uid,\n        userInfo: snapshot.val()\n      });\n    });\n    // }\n  } else {\n    return dispatch(\"UPDATE_USER_INFO\", {\n      uid: null,\n      userInfo: null,\n      user: null\n    });\n  }\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"./constant.js\";\nimport \"../style/reset.scss\";\nimport \"../style/card.scss\";\n\nexport const TrickCard = ({value}) => {\n  return (\n    <div className=\"abbbbbbbbbbbbb\">\n      <Card flipUp={true} value={value} />\n    </div>\n  );\n};\n\nexport const Card = ({value, evt = null, flipUp, name = null}) => {\n  let kind = Math.floor(value / CARD_NUM.HAND);\n  let wrapperName = name ? `card-wrapper ${name}` : \"card-wrapper\";\n  if (flipUp) {\n    return (\n      <div\n        className={wrapperName}\n        onClick={() => {\n          if (evt) {\n            evt(value);\n          }\n        }}>\n        <div className=\"card flip-up\">\n          <div className=\"card-inner\">\n            <div\n              className={\n                kind === 1 || kind === 2\n                  ? \"red value\"\n                  : \"black value\"\n              }>\n              {CARD_RANK[value % CARD_NUM.HAND]}\n            </div>\n            {SUIT_SHAPE[kind](0.235)}\n            <div className=\"large-shape\">\n              {SUIT_SHAPE[kind](0.5)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={wrapperName}>\n        <div className=\"card flip-down\">\n          <div className=\"card-inner\" />\n        </div>\n      </div>\n    );\n  }\n};\n","export const getCurrentMaxTrick = cards => {\n  if (!cards) return null;\n  return Math.max(...cards.map(card => card.trick));\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {Card, TrickCard} from \"./card.js\";\nimport {getCurrentMaxTrick} from \"./getCurrentMaxTrick.js\";\nimport \"../style/game.scss\";\n\nexport default class Trick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeOutCards: false\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.order !== prevProps.order) {\n      if (this.props.order % 4 === 3) {\n        setTimeout(() => this.setState({fadeOutCards: true}), 2000);\n      } else {\n        this.setState({fadeOutCards: false});\n      }\n    }\n  }\n  render() {\n    let direction = [\"south-card\", \"west-card\", \"north-card\", \"east-card\"];\n    let {order, cards, cardsByPlayer, isTrickFinish} = this.props;\n    if (!cards) {\n      return null;\n    }\n\n    let currentTrick = null,\n      maxTrick = getCurrentMaxTrick(cards);\n\n    // cause maxTrick will increase if there are already four cards\n    if (maxTrick === 0) {\n      maxTrick = 1;\n    }\n\n    // show cards sequence by player order\n    if (cardsByPlayer && !this.state.fadeOutCards) {\n      // sorting tricks by player index, and filter cards by max trick\n      currentTrick = cardsByPlayer.map((hand, index) => {\n        hand = hand.sort((cardA, cardB) => cardA.value - cardB.value);\n        let trickCards = hand.map( (userHand, i) => {\n          if (userHand.trick === maxTrick) {\n            return (\n              <TrickCard\n                key={`trick-card-x-index-${index}-${i}`}\n                value={userHand.value}\n              />\n            );\n          }\n        });\n\n        let hasTrickCards =\n                    trickCards.filter(\n                      card => card !== null && card !== undefined\n                    ).length > 0;\n        if (hasTrickCards) {\n          return (\n            <div\n              className={`trick-card-wrapper ${direction[index]}`}\n              key={`trick-card-${index}`}>\n              {trickCards}\n            </div>\n          );\n        } else {\n          return null;\n        }\n      });\n    }\n\n    if (currentTrick) {\n      currentTrick = currentTrick.filter(\n        card => card !== null && card !== undefined\n      );\n    }\n\n    return (\n      <div className={\"trick-area\"}>\n        <div className=\"trick-area-inner\">{currentTrick}</div>\n      </div>\n    );\n  }\n}\n","export const teamScore = cards => {\n  let teamA = 0,\n    teamB = 0;\n  cards.map((card, index) => {\n    let winningScore = card.isWin ? 1 : 0;\n    if ((index % 4) % 2 === 0) {\n      teamA += winningScore;\n    } else {\n      teamB += winningScore;\n    }\n  });\n  return {teamA: teamA, teamB: teamB};\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/thumbnail.scss\";\nimport {ROBOT_NAME} from \"./constant.js\";\n// import ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport avatar0 from \"../images/avatar/0.svg\";\nimport avatar1 from \"../images/avatar/1.svg\";\nimport avatar2 from \"../images/avatar/2.svg\";\nimport avatar3 from \"../images/avatar/3.svg\";\nimport avatar4 from \"../images/avatar/4.svg\";\nimport avatar5 from \"../images/avatar/5.svg\";\nimport avatar6 from \"../images/avatar/6.svg\";\nimport avatar7 from \"../images/avatar/7.svg\";\nimport avatar8 from \"../images/avatar/8.svg\";\nimport avatar9 from \"../images/avatar/9.svg\";\nimport avatar10 from \"../images/avatar/10.svg\";\nimport avatar11 from \"../images/avatar/11.svg\";\nimport avatar12 from \"../images/avatar/12.svg\";\nimport avatar13 from \"../images/avatar/13.svg\";\nimport avatar14 from \"../images/avatar/14.svg\";\nimport avatar15 from \"../images/avatar/15.svg\";\nimport avatar16 from \"../images/avatar/16.svg\";\nimport avatar17 from \"../images/avatar/17.svg\";\nimport avatar18 from \"../images/avatar/18.svg\";\nimport avatar19 from \"../images/avatar/19.svg\";\nimport avatar20 from \"../images/avatar/20.svg\";\nimport avatar21 from \"../images/avatar/21.svg\";\nimport robot from \"../images/avatar/robot.svg\";\nimport avatarSlot from \"../images/avatar/avatar_slot.svg\";\n\nconst Avatar = {\n  0: avatar0,\n  1: avatar1,\n  2: avatar2,\n  3: avatar3,\n  4: avatar4,\n  5: avatar5,\n  6: avatar6,\n  7: avatar7,\n  8: avatar8,\n  9: avatar9,\n  10: avatar10,\n  11: avatar11,\n  12: avatar12,\n  13: avatar13,\n  14: avatar14,\n  15: avatar15,\n  16: avatar16,\n  17: avatar17,\n  18: avatar18,\n  19: avatar19,\n  20: avatar20\n};\n\nconst avatarNum = Object.keys(Avatar).length;\nexport const Thumbnail = ({\n  name = \"\",\n  size = 40,\n  disabled = false,\n  offset = 16,\n  border = false,\n  isCurrentUser = false,\n  styleName = null,\n  robotMargin=0,\n  robotOffset=-5,\n}) => {\n  let shiftAvatar = avatarNum;\n  if (name.length) {\n    shiftAvatar =\n            name\n              .split(\"\")\n              .map(str => str.charCodeAt(str) || +str)\n              .reduce((sum, num) => sum + num, 0) % avatarNum;\n  }\n  let source = Avatar[shiftAvatar];\n  if (name.includes(ROBOT_NAME)) {\n    source = robot;\n  }\n  return (\n    <div\n      className={`thumbnail disabled ${styleName}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size\n      }}>\n      <div\n        className={\n          border\n            ? \"thumbnail-inner thumbnail-outline\"\n            : \"thumbnail-inner\"\n        }>\n        <div className=\"border-style\">\n          <img\n            className={disabled ? \"disabled\" : \"\"}\n            style={{marginTop: robotMargin}}\n            width={size - offset + robotOffset}\n            src={source}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const ThumbnailWithTag = ({\n  name = \"\",\n  size = 40,\n  disabled = false,\n  offset = 16,\n  border = false,\n  isCurrentUser = false,\n  styleName = null\n}) => {\n  return (\n    <div className=\"thumbnail-with-tag\">\n      <div className=\"tag\" />\n      <Thumbnail\n        name={name}\n        size={size}\n        disabled={disabled}\n        offset={offset}\n        border={border}\n        isCurrentUser={isCurrentUser}\n        styleName={styleName}\n      />\n    </div>\n  );\n};\n\nexport const ThumbailGroup = ({players, size, teamOrder}) => {\n  let team = players.filter((player, index) => index % 2 === teamOrder);\n  let members = team.map((player, index) => (\n    <Thumbnail key={`member-${index}`} name={player} size={size} />\n  ));\n  return <div className=\"thumbnail-group\">{members}</div>;\n};\n\nexport const ThumbailGroupWithTag = ({\n  players,\n  currentUser,\n  size,\n  styleObj,\n  teamOrder,\n  styleOb,\n  offset\n}) => {\n  let team = players.filter((player, index) => index % 2 === teamOrder);\n  let members = team.map((player, index) => {\n    if (player === currentUser.displayName) {\n      return (\n        <ThumbnailWithTag\n          key={`member-${index}`}\n          offset={offset}\n          name={player}\n          size={size}\n        />\n      );\n    } else {\n      return (\n        <Thumbnail\n          offset={offset}\n          key={`member-${index}`}\n          name={player}\n          size={size}\n        />\n      );\n    }\n  });\n  return (\n    <div className=\"thumbnail-group\" style={styleObj}>\n      {members}\n    </div>\n  );\n};\n\nexport class WaitingThumbnail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posY: Math.floor(Math.random() * 40),\n      position: 0,\n      stop: false,\n      isGoingUp: true,\n      name: \"enter\"\n    };\n    this.changeImg = this.changeImg.bind(this);\n    this.timer = setInterval(this.changeImg, 20);\n  }\n  componentDidMount() {\n    this.mount = true;\n  }\n  componentWillUnmount() {\n    this.mount = false;\n  }\n  changeImg() {\n    if (!this.mount) return;\n    let {posY} = this.state;\n    if (this.state.posY > 50) {\n      this.setState({isGoingUp: false});\n    } else if (this.state.posY < -50) {\n      this.setState({isGoingUp: true});\n    }\n    let dy;\n    if (this.state.isGoingUp) {\n      dy = Math.floor(Math.random() * 2);\n    } else if (this.state.isGoingUp === false) {\n      dy = Math.floor(Math.random() * -3);\n    }\n\n    this.setState({posY: posY + dy});\n  }\n  componentDidUpdate(prevProps) {\n    if (!this.mount) return;\n    if (this.props.stop !== prevProps.stop && this.props.stop === true) {\n      this.setState({stop: true, posY: 40});\n      clearInterval(this.timer);\n    }\n  }\n  render() {\n    let size = this.props.size || 30;\n    let disabled = this.props.disabled || false;\n    let pos = this.state.position;\n    let name = disabled ? `disabled ${this.state.name}` : this.state.name;\n    let img = (\n      <img\n        className={name}\n        style={{\n          transform: `translateY(${this.state.posY}%) scale(1.07)`\n        }}\n        width={size - 16}\n        src={avatarSlot}\n      />\n    );\n    return (\n      <div\n        className=\"waiting-thumbnail disabled\"\n        style={{\n          width: size,\n          height: size,\n          borderRadius: size\n        }}>\n        {img}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/trick-score.scss\";\nimport {teamScore} from \"./socre.js\";\nimport {\n  Thumbnail,\n  ThumbnailWithTag,\n  ThumbailGroupWithTag\n} from \"./thumbnail.js\";\n\nexport default class TrickScore extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {table, windowWidth, windowHeight, currentUser} = this.props;\n    let {game, players} = table;\n    if (!table || !table.game.cards) {\n      return null;\n    }\n    let {playerInfo} = table;\n    let score = teamScore(game.cards);\n    let playerList = players.map(key => playerInfo[key].displayName);\n    let innerStyle = this.props.innerStyle;\n    let resizeRatio = this.props.ratio || 0.15;\n    let thumbnailStyle = {\n      width: this.props.thumbnailSize,\n      height: this.props.thumbnailSize\n    };\n    let offset = 3;\n    let thumbnailSize = this.props.thumbnailSize * 1.2;\n    return (\n      <div\n        className={\n          this.props.name\n            ? `trick-score ${this.props.name}`\n            : \"trick-score\"\n        }\n        style={innerStyle}>\n        <div\n          className=\"trick-score-inner\"\n          style={{\n            width: windowWidth * resizeRatio\n          }}>\n          <div className=\"group-wrapper\">\n            <div className=\"group\">\n              <ThumbailGroupWithTag\n                styleObj={{\n                  minWidth: thumbnailSize * 2\n                }}\n                teamOrder={0}\n                players={playerList}\n                size={thumbnailSize}\n                offset={offset}\n                currentUser={currentUser}\n              />\n              <div className=\"score\">{score.teamA}</div>\n            </div>\n            <div className=\"group\">\n              <ThumbailGroupWithTag\n                styleObj={{\n                  minWidth: thumbnailSize * 2\n                }}\n                teamOrder={1}\n                players={playerList}\n                size={thumbnailSize}\n                offset={offset}\n                currentUser={currentUser}\n              />\n              <div className=\"score\">{score.teamB}</div>\n            </div>\n          </div>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport TrickScore from \"./trickScore.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {RESULT} from \"./constant.js\";\nimport \"../style/btn.scss\";\n\nexport default class ScoreBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recordGame = this.recordGame.bind(this);\n  }\n  recordGame() {\n    let {table} = this.props;\n    let {game} = table;\n    if (!table || game.order !== 51) {\n      return;\n    }\n    dispatchToDatabase(\"CREATE_NEW_GAME\", {\n      table: table\n    });\n  }\n  render() {\n    let {windowWidth, table, windowHeight, currentUser} = this.props;\n    let {game, players} = this.props.table;\n    if (!game || !game.cards) {\n      return null;\n    }\n    let scoreTeamOne = 0,\n      scoreTeamTwo = 0;\n    let playerIndex = players.indexOf(currentUser.uid);\n    let playerTeamScore = 0,\n      opponentScore = 0;\n    game.cards.map((card, index) => {\n      let winScore = card.isWin ? 1 : 0;\n      if (card.player % 2 === playerIndex % 2) {\n        playerTeamScore += winScore;\n      } else {\n        opponentScore += winScore;\n      }\n    });\n\n    let resultWords = null;\n    let {declarer, trick} = game.bid;\n    let targetTrick = 6 + trick;\n    let isPlayerInDeclarerTeam = playerIndex % 2 === declarer % 2;\n    let isCurrentUserAPlayer = playerIndex >= 0;\n    let isUserWin = false;\n\n    if (isPlayerInDeclarerTeam && playerTeamScore >= targetTrick) {\n      resultWords = RESULT.win;\n      isUserWin = true;\n    } else if (isCurrentUserAPlayer) {\n      resultWords = RESULT.lose;\n    } else {\n      resultWords = \"\";\n    }\n    return (\n      <div\n        className={\n          isUserWin ? \"game-over-board win\" : \"game-over-board lose\"\n        }>\n        <TrickScore\n          currentUser={this.props.currentUser}\n          ratio={0.5}\n          thumbnailSize={46}\n          windowWidth={this.props.windowWidth}\n          widnowHeight={this.props.windowHeight}\n          table={this.props.table}>\n          <div className=\"game-over-board-inner\">\n            <div className=\"result\">\n              <div className=\"words\">{resultWords}</div>\n            </div>\n            <div className=\"btn-wrapper\">\n              <button onClick={this.recordGame} className=\"btn\">\n                                Play again ?\n              </button>\n            </div>\n          </div>\n        </TrickScore>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\n\nexport const AuctionList = ({result, scale}) => {\n  if (!result) {\n    return null;\n  }\n  let resultsNum = result.length;\n\n  return (\n    <div className=\"record\">\n      {Array.from({length: Math.ceil(resultsNum / 4)})\n        .fill(0)\n        .map((res, index) => (\n          <div key={getRandomKey()} className=\"row\">\n            {Array.from({length: 4})\n              .fill(0)\n              .map((re, j) => {\n                let resultItem = result[index * 4 + j];\n                if (resultItem && resultItem.opt) {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      {resultItem.opt}\n                    </div>\n                  );\n                } else if (\n                  resultItem &&\n                                    resultItem.trick >= 0\n                ) {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      <div>{resultItem.trick + 1}</div>\n                      {SUIT_SHAPE[resultItem.trump](\n                        scale,\n                      )}\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      {null}\n                    </div>\n                  );\n                }\n              })}\n          </div>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE, BID_NUM} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {AuctionList} from \"./auctionList.js\";\nimport {Thumbnail} from \"./thumbnail.js\";\nimport \"../style/auction.scss\";\n\nexport default class Auction extends React.Component {\n  constructor(props) {\n    super(props);\n    let {game} = this.props;\n    this.state = {\n      currentTrick: game.bid.trick,\n      visibility: false,\n      current: null\n    };\n    this.updateBid = this.updateBid.bind(this);\n    this.validateUserTurnAndsetTrump = this.validateUserTurnAndsetTrump.bind(\n      this\n    );\n  }\n  validateUserTurnAndsetTrump(index) {\n    // check if already current user's turn to give his bid\n    let {game, currentUser, players} = this.props;\n    if (!currentUser || !game) return;\n    if (players && currentUser) {\n      // if currentUser's Index is same as game deal, let him give bid\n\n      let currentUserIndex = players.findIndex(\n        player => player === this.props.currentUser.uid\n      );\n      if (currentUserIndex === game.deal) {\n        this.setState({\n          currentTrick: index,\n          current: index,\n          visibility: true\n        });\n      }\n    }\n  }\n  updateBid(trump, opt = null) {\n    let newBid,\n      isFinishAuction = false,\n      declarer = this.props.game.bid.declarer;\n\n    if (trump > -1 && trump !== null) {\n      let bid = {\n        trick: this.state.currentTrick,\n        trump: trump\n      };\n      // udpate result\n      let result = this.props.game.bid.result || [];\n      result.push(Object.assign({}, bid));\n\n      // update bid taker, when give a trump bid,\n      // record who is the last bid giver;\n      declarer = this.props.game.deal;\n\n      newBid = Object.assign(\n        {},\n        this.props.game.bid,\n        bid,\n        {declarer: declarer},\n        {result: result}\n      );\n    } else {\n      let result = this.props.game.bid.result || [];\n      result.push({opt: opt});\n\n      // is game start\n\n      if (result.length > 3) {\n        let isAllPass = result\n          .slice(result.length - 3, result.length)\n          .every(res => res.opt === \"Pass\");\n        let hasValidTrump = result.some(bid => bid.trick >= 0);\n        isFinishAuction = isAllPass && hasValidTrump;\n      }\n\n      // update bid\n      newBid = Object.assign({}, this.props.game.bid, {\n        result: result\n      });\n    }\n\n    let deal = this.props.game.deal;\n\n    if (isFinishAuction) {\n      deal = (declarer + 1) % 4;\n    } else {\n      deal = (deal + 1) % 4;\n    }\n\n    let newGame = Object.assign(\n      {},\n      this.props.game,\n      {bid: newBid},\n      {deal: deal}\n    );\n\n    dispatchToDatabase(\"UPDATE_AUCTION\", {\n      table: this.props.table,\n      game: newGame\n    });\n    this.setState({visibility: false, current: null});\n  }\n  render() {\n    let {game, players} = this.props;\n    let {playerInfo} = this.props.table;\n    let isCurrentUser =\n            players && players[game.deal] === this.props.currentUser.uid;\n\n    let value = game.bid.trick * 5 + game.bid.trump;\n\n    // todo: refactor\n    let trickOpt, trumpOpt;\n    if (value < 0) {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index);\n    } else if (value === 34) {\n      trickOpt = [];\n      trumpOpt = [];\n    } else if (value % 5 === 4 && value !== 0) {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt > game.bid.trick);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index);\n    } else {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt >= game.bid.trick);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt > game.bid.trump);\n    }\n\n    let allTrickOpt = trickOpt.map((opt, index) => (\n      <button\n        className={opt === this.state.current ? \"current\" : null}\n        onClick={() => {\n          this.validateUserTurnAndsetTrump(opt);\n        }}\n        key={getRandomKey()}>\n        {opt + 1}\n      </button>\n    ));\n\n    let selectedTrump =\n            this.state.currentTrick === trickOpt[0]\n              ? trumpOpt\n              : [0, 1, 2, 3, 4];\n\n    if (value === 34) {\n      selectedTrump = [];\n    }\n    selectedTrump = selectedTrump.map(opt => (\n      <div onClick={() => this.updateBid(opt, null)} key={getRandomKey()}>\n        {SUIT_SHAPE[opt](0.25)}\n      </div>\n    ));\n\n    let result = game.bid.result;\n\n    let DoubleBtn = result &&\n            !result[result.length - 1].opt && (\n      <button\n        className=\"d-btn\"\n        onClick={() => this.updateBid(-1, \"Double\")}>\n                    Dboule\n      </button>\n    );\n\n    let ReDoubleBtn = result &&\n            result[result.length - 1].opt === \"Double\" && (\n      <button\n        className=\"d-btn\"\n        onClick={() => this.updateBid(-1, \"ReDouble\")}>\n                    ReDouble\n      </button>\n    );\n\n    let playerThumbnails = players.map(\n      (player, index) => (\n        <div\n          key={`auction-thumbnail-${index}`}\n          className={\n            index === this.props.game.deal\n              ? \"default-thumbnail current\"\n              : \"default-thumbnail\"\n          }>\n          <div className=\"default-thumbnail-inner\">\n            <div className=\"default-thumbnail-inner-outline-wrapper\">\n            <div className=\"default-thumbnail-inner-outline\">\n              <Thumbnail\n                size={53}\n                current={index === this.props.game.deal}\n                name={playerInfo[player].displayName}\n              />\n            </div>\n          </div>\n            <span>{playerInfo[player].displayName}</span>\n          </div>\n        </div>\n      )\n    );\n    if (this.props.isFinishAuction) {return null};\n\n    return (\n      <div className=\"auction-inner\">\n        <div className=\"thumbnail-group\">{playerThumbnails}</div>\n        {!game.bid.result && (\n          <div className=\"notes\"> Start Auction </div>\n        )}\n        <AuctionList scale={0.2} result={game.bid.result} />\n        <div className=\"option-wrapper\">\n          {isCurrentUser && (\n            <div className=\"other-btns\">\n              <button\n                className=\"pass\"\n                onClick={() => this.updateBid(null, \"Pass\")}>\n                                Pass\n              </button>\n              {DoubleBtn}\n              {ReDoubleBtn}\n            </div>\n          )}\n          <div className=\"tricks\">{allTrickOpt}</div>\n          {this.state.visibility && (\n            <div className=\"trumps\">{selectedTrump}</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport {Thumbnail} from \"./thumbnail.js\";\nimport \"../style/thumbnail.scss\";\nimport \"../style/player.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nexport const Player = ({name, current = null}) => {\n  return (\n    <div className={current ? \"player current\" : \"player\"}>\n      <div className=\"player-inner\">\n        <Thumbnail robotOffset={-7} styleName=\"border-thumbnail\" size={current ? 40 : 50} offset={5} name={name} border={current} />\n      </div>\n      <div className=\"name\">{name}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {Thumbnail, ThumbnailWithTag} from \"./thumbnail.js\";\nimport {AuctionList} from \"./auctionList.js\";\nimport \"../style/auction.scss\";\n\nexport class AuctionResult extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n\n    let {table, windowWidth, currentUser, windowHeight} = this.props;\n\n    let {game, playerInfo, players} = table;\n    if (!game || !game.bid.result) {\n      return null;\n    }\n    let playerThumbnails = players.map((player, index) => {\n      if (currentUser.uid === player) {\n        return (\n          <ThumbnailWithTag\n            key={`resultThumbnail-${index}`}\n            name={playerInfo[player].displayName}\n            size={30}\n            isCurrentUser={true}\n            offset={5}\n          />\n        );\n\n      } else {\n        return (\n          <Thumbnail\n            key={`resultThumbnail-${index}`}\n            name={playerInfo[player].displayName}\n            size={30}\n            isCurrentUser={true}\n            offset={5}\n          />\n        );\n      }\n    });\n\n    return (\n      <div\n        className=\"auction-result\"\n        style={{\n          top: Math.ceil(windowWidth / 500) * 5,\n          right: Math.ceil(windowWidth / 500) * 5\n        }}>\n        <div className=\"auction-result-inner\">\n          <div className=\"thumbnail-group\">{playerThumbnails}</div>\n          <AuctionList scale={0.15} result={game.bid.result} />\n        </div>\n      </div>\n    );\n  }\n}\n","import {\n  PLAYER_NUM,\n  CARD_NUM,\n  EMPTY_SEAT,\n  NO_TRUMP,\n  DEFAULT_GAME\n} from \"./constant.js\";\nimport {getRandomInt} from \"../helper/helper.js\";\n\nexport const hasSameSuitWithFirstCard = (firstCard, cards) => {\n  if (!cards) {\n    return false;\n  }\n  return (\n    firstCard &&\n        cards.filter(card => {\n          return (\n            Math.floor(card.value / CARD_NUM.HAND) ===\n                Math.floor(firstCard.value / CARD_NUM.HAND)\n          );\n        }).length > 0\n  );\n};\n\n// get porker card detail information offset by current login user\nexport const getOffsetDatabyCurrentUser = (players, game, currentUser) => {\n  if (!game || !game.cards) return;\n\n  let {cards} = game;\n\n  // default don't offset\n  let cardsByPlayer = players\n    .map((userIndex, index) => {\n      return cards.filter((card, i) => i % players.length === index);\n    })\n    .slice(0);\n\n  let offsetIndex = players.findIndex(user => user === currentUser);\n\n  let isCurrentUserAPlayer = offsetIndex !== -1;\n\n  // user is curretn user\n  if (isCurrentUserAPlayer) {\n    return {\n      cardsByPlayer: [\n        ...cardsByPlayer.slice(offsetIndex),\n        ...cardsByPlayer.slice(0, offsetIndex)\n      ],\n      offsetPlayers: [\n        ...players.slice(offsetIndex),\n        ...players.slice(0, offsetIndex)\n      ],\n      offsetIndex: offsetIndex\n    };\n  }\n\n  return {\n    cardsByPlayer: cardsByPlayer,\n    offsetPlayers: players.slice(0),\n    offsetIndex: offsetIndex\n  };\n};\n\nexport const mapFlipDownCards = dislayList => {\n  if (!dislayList) return;\n  let flat = dislayList.flat();\n  let cardsNumberOnHand = 5;\n  let totalLen = flat.length;\n  // if cards number is under n, split flipdown card into two row;\n  if (totalLen <= cardsNumberOnHand) {\n    let mid = Math.floor(totalLen / 2);\n    return [flat.slice(0, mid), flat.slice(mid, totalLen)];\n  } else {\n    let threeRow = [[], [], []];\n    flat.map((card, index) => threeRow[index % 3].push(card));\n    return threeRow;\n  }\n};\n\nexport const getFirstCard = game => {\n  if (!game) {\n    return null;\n  }\n  // what is the first card of current trick\n  // in order to let players only can draw card as the same suit\n  if (\n    game.cards &&\n        game.cards.length >= PLAYER_NUM &&\n        game.order % PLAYER_NUM !== PLAYER_NUM - 1\n  ) {\n    return game.cards\n      .filter(card => card.order % PLAYER_NUM === 0)\n      .sort((cardA, cardB) => cardB.order - cardA.order)[0];\n  }\n  return null;\n};\n\nexport const shuffleCards = () => {\n  let cards = getRandomCards();\n  while (!validateShuffle(cards)) {\n    cards = getRandomCards();\n  }\n  return cards;\n};\n\nexport const mapToFourHands = cards => {\n  if (!cards) return;\n  return [0, 0, 0, 0]\n    .map((userIndex, index) => {\n      return cards.filter((card, i) => i % 4 === index);\n    })\n    .slice(0);\n};\n\nexport const fourHands = cards => {\n  return mapToFourHands(cards).map(hand =>\n    hand.map(value => (value % 13 > 8 ? (value % 13) - 8 : 0))\n  );\n};\n\nconst getRandomCards = () => {\n  let cards = Array.from({length: CARD_NUM.TOTAL})\n    .fill(0)\n    .map((card, i) => i);\n\n  // shuffle array algorithm\n  for (let i = cards.length - 1; i > 0; i--) {\n    let randomIndex = getRandomInt(0, CARD_NUM.TOTAL - 1);\n    [cards[i], cards[randomIndex]] = [cards[randomIndex], cards[i]];\n  }\n\n  return cards;\n};\n\nconst validateShuffle = cards => {\n  return fourHands(cards).every(\n    hand => hand.reduce((sum, value) => value + sum, 0) >= 7\n  );\n};\n\nexport const getMaxCardNumPerSuit = cardsForPlayerHand => {\n  console.log(\"max card num\");\n  return Math.max(...cardsForPlayerHand.map(suit => suit.length));\n};\n\nexport const getHandPosByCardNum = (cardsForPlayerHand, cardSize, offset) => {\n  let maxCardNum = getMaxCardNumPerSuit(cardsForPlayerHand);\n  if (maxCardNum === 0) {\n    return 0;\n  }\n  console.log(\"maxCardNum\", maxCardNum);\n  return (maxCardNum - 1) * offset + cardSize;\n};\n","import {CARD_NUM, NO_TRUMP} from \"./constant.js\";\nimport {getCurrentMaxTrick} from \"./getCurrentMaxTrick.js\";\n\n// which card has max value by the bid trump\nconst findMaxValueByTrump = (arr, trump) => {\n  if (!arr || trump === null || trump === undefined) {\n    return;\n  }\n  let list = arr\n    .filter(item => Math.floor(item.value / CARD_NUM.HAND) === trump)\n    .sort((cardA, cardB) => cardB.value - cardA.value);\n  return list.length ? list[0] : null;\n};\n\n// handle winner card logic\n// if there are any cards with same rank as trump, compare their face value\n// else follow first card's rank to compare value;\nexport const getWinnerCard = (game, cardValue) => {\n  if (!game) return;\n  let cards = game.cards,\n    maxTrick = getCurrentMaxTrick(cards);\n\n  let {trump} = game.bid;\n  let cardsMatchCurrentTrick = cards\n    .map((card, index) => Object.assign({}, card, {index: index}))\n    .filter(\n      card =>\n        (card.trick === maxTrick && card.trick > 0) ||\n                card.value === cardValue,\n    );\n  let winnerCard,\n    noTrumpCards = false;\n\n  if (cardsMatchCurrentTrick.length === 4) {\n    // which card is first been played\n    let first = Math.min(...cardsMatchCurrentTrick.map(card => card.order));\n    let [firstHand] = cardsMatchCurrentTrick.filter(\n      card => card.order === first,\n    );\n    // trump matters most, else, decide by what first hand has draw\n    if (trump !== NO_TRUMP) {\n      // filter trump cards, and compare their face value\n      let tmp = findMaxValueByTrump(cardsMatchCurrentTrick, trump);\n\n      if (tmp !== null) {\n        winnerCard = tmp;\n      } else {\n        noTrumpCards = true;\n      }\n    }\n\n    if (trump === NO_TRUMP || noTrumpCards) {\n      // if their quotient are the same, compare their value, else, let first win\n      let trumpRef = Math.floor(firstHand.value / CARD_NUM.HAND);\n      winnerCard = findMaxValueByTrump(cardsMatchCurrentTrick, trumpRef);\n    } // end of no trump\n  }\n\n  return winnerCard || null;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/progress.scss\";\n\nexport const Progress = ({\n  totalWidth,\n  currentWidth,\n  height = 10,\n  fg = \"#4A90E2\",\n  bg = \"#EAE7DF\"\n}) => {\n  let viewBox = `0 0 200 ${height}`;\n  let heightValue = `${height}px`;\n  let total = `${totalWidth}`;\n  return (\n    <div className=\"\">\n      <svg width={total} height={height} viewBox={viewBox}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <rect\n            fill={bg}\n            x=\"0\"\n            y=\"0\"\n            width={total}\n            height={height}\n            rx=\"5\"\n          />\n          <rect\n            fill={fg}\n            x=\"0\"\n            y=\"0\"\n            width={currentWidth}\n            height={height}\n            rx=\"5\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {EMPTY_SEAT, TIMER} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport \"../style/ready-list.scss\";\nimport {Thumbnail, WaitingThumbnail} from \"./thumbnail.js\";\nimport {Progress} from \"./progress.js\";\nexport default class PlayerReadyList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timeInterval = 20000;\n    this.frequency = 10; // update frequency per sec;\n    // update how many persec to current progress\n    // this.progressInterval = Math.floor(\n    //   TIMER.join / Math.floor(this.timeInterval / this.frequency)\n    // );\n    console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxx\");\n    console.log(\"renew a constructor\");\n    console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxx\");\n    // let timeStamp = new Date().getTime();\n    this.state = {\n      progress: new Date().getTime() - this.props.table.createTime\n    };\n    console.log(\"this.props.table.createTime\", this.props.table.createTime);\n    // Math.floor(this.timeInterval / this.frequency)\n    // this.duration = TIMER.join;\n    this.setReadyState = this.setReadyState.bind(this);\n    this.countDownTimer = this.countDownTimer.bind(this);\n    this.checkReadyState = this.checkReadyState.bind(this);\n    this.timer = setInterval(this.countDownTimer, this.frequency);\n  }\n  componentDidMount() {\n    this.isMount = true;\n  }\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n  countDownTimer() {\n    console.log(\"count down\");\n    let createTime = this.props.table.createTime;\n    let progress = new Date().getTime() - this.props.table.createTime;\n    console.log(\"progress, now - this.props.table.creatTime\", progress);\n    if (this.isMounted && progress < this.timeInterval) {\n      this.setState({\n        progress: progress\n      });\n    } else {\n      new Promise((resolve, reject) => {\n        clearInterval(this.timer);\n        resolve(\"cleard\");\n        console.log(\" in promise, this is \");\n      }).then(val => {\n        if (\n          this.isMount &&\n                    this.props.table.createTime !== createTime\n        ) {\n          this.setState({timesUp: true});\n        }\n      });\n    }\n  }\n  checkReadyState() {\n    let {table, currentUser} = this.props;\n    let {game, ready, players, playerInfo} = table;\n    return ready.every(player => player === false);\n  }\n  setReadyState(playerIndex) {\n    let {currentUser, table} = this.props;\n    if (!table) return;\n    let {game, gameState} = table;\n    let players = table.players.slice(0);\n    console.log(\"playerIndex\", playerIndex);\n    dispatchToDatabase(\"READY_A_PLAYER\", {\n      playerIndex: playerIndex,\n      table: table\n    });\n  }\n  render() {\n    console.log(\"this.state.progress\", this.state.progress);\n    let {table, currentUser} = this.props;\n    let {game, ready, players, playerInfo} = table;\n\n    if (!game) {\n      return <div> no game data </div>;\n    }\n    // if(new Date().getTime() - this.props.table.createTime >= this.timeInterval ){\n    //   return <div>waiting...</div>\n    // }\n\n    let {isGameOver, order} = game;\n    let isEmptySeat = players.some(seat => seat === EMPTY_SEAT);\n    let isAllPlayerReady = ready.every(player => player === true);\n\n    // if need to sho playerReadylist\n    let showPlayerReadyList =\n            (isEmptySeat && order < 0) || !isAllPlayerReady;\n\n    if (!showPlayerReadyList) {\n      return null;\n    }\n    let playBtns = null;\n\n    if (this.state.timesUp && ready.some(player => player === true)) {\n      return <div>all player is ready, waiting for poker</div>;\n    }\n    if (this.state.timesUp && ready.every(player => player === false)) {\n      return <div> no one wants to play, redirect to lobby... </div>;\n    }\n    let thumbnails = players.map((player, index) => {\n      let playerName;\n      let size = 70;\n      if (playerInfo[player]) {\n        playerName = playerInfo[player].displayName;\n      }\n      if (!playerName) {\n        return (\n          <WaitingThumbnail\n            stop={this.state.progress >= TIMER.join}\n            key={`join-plyaer-${index}`}\n            size={size}\n          />\n        );\n      }\n      return (\n        <div\n          key={`join-player-${index}`}\n          className=\"player-ready-wrapper\">\n          <Thumbnail\n            size={size}\n            disabled={!ready[index]}\n            name={playerName}\n          />\n          <span>{playerName}</span>\n        </div>\n      );\n    });\n\n    let currentUserCanPlay;\n\n    if (players.includes(currentUser.uid)) {\n      currentUserCanPlay = players.some(\n        (player, index) => player === currentUser.uid && !ready[index]\n      );\n      playBtns = players.map((player, index) => {\n        if (player === currentUser.uid && !ready[index]) {\n          return (\n            <div key={`playBtn-${index}`}>\n              <button\n                style={{zIndex: 5}}\n                onClick={() => this.setReadyState(index)}\n                className=\"btn\">\n                                加入牌局\n              </button>\n            </div>\n          );\n        } else {\n          return <div key={`playBtn-${index}`} />;\n        }\n      });\n    }\n\n    let totalWidth = 200;\n    let unit = this.timeInterval / totalWidth;\n\n    let currentVal = Math.floor(\n      (this.state.progress / this.timeInterval) * 200\n    );\n\n    console.log(\"currentVal, shouldn't greater than 200\", currentVal);\n\n    return (\n      <div className=\"player-ready-list\">\n        <div className=\"player-ready-list-inner\">\n          <div className=\"row\"> {thumbnails}</div>\n          {currentUserCanPlay && (\n            <div className=\"btn-wrapper\">{playBtns}</div>\n          )}\n          <div className=\"progress-panel\">\n            <Progress totalWidth={200} currentWidth={currentVal} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// <div className=\"notes\">等待加入中...</div>\n","import \"../style/reset.scss\";\nimport \"../style/game.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getRandomInt, getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {Card} from \"./card.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {GAME_STATE} from \"./constant.js\";\nimport Trick from \"./trick.js\";\nimport {\n  CARD_NUM,\n  DIRECTION,\n  EMPTY_SEAT,\n  NO_TRUMP,\n  DEFAULT_GAME\n} from \"./constant.js\";\nimport TrickScore from \"./trickScore.js\";\nimport ScoreBoard from \"./scoreBoard.js\";\nimport Auction from \"./auction.js\";\nimport {Player} from \"./player.js\";\nimport {AuctionResult} from \"./auctionResult.js\";\nimport {\n  hasSameSuitWithFirstCard,\n  getOffsetDatabyCurrentUser,\n  mapFlipDownCards,\n  getFirstCard,\n  shuffleCards,\n  getHandPosByCardNum\n} from \"./examineCards.js\";\nimport {getWinnerCard} from \"./getWinnerCard.js\";\nimport PlayerReadyList from \"./playerReadyList.js\";\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let {game} = this.props.table;\n    this.state = {\n      endAuction: game && game.order >= 0,\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    };\n    this.deal = this.deal.bind(this);\n    this.getNextMaxTrick = this.getNextMaxTrick.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.suffleCardsWhenReady = this.suffleCardsWhenReady.bind(this);\n    this.endAuction = this.endAuction.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.getAuctionStatus = this.getAuctionStatus.bind(this);\n  }\n  handleResize() {\n    this.setState({\n      windowWidth: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n  componentDidUpdate(prevProps) {\n    let newTable = this.props.table;\n    let oldTable = prevProps.table;\n\n    this.suffleCardsWhenReady();\n    console.log(\"prevProps.table\", prevProps.table);\n    console.log(\"this.props.table \", this.props.table);\n    console.log(\"in game comp did update\");\n    // if (this.props.table !== prevProps.table) {\n    //   console.log(this.props.table);\n    //   console.log(this.prevProps.table);\n    //   console.log(\"table not equal\");\n    // }\n\n    // console.log(\"game comp update\");\n    // todo, refine logic, under some condition, state might not be update\n    // if ready state is change\n    // if (\n    //   !newTable.ready.every(\n    //     (player, index) => player === oldTable.ready[index]\n    //   )\n    // ) {\n    // and are all ready\n    // if (newTable.ready.every(player => player === true)) {\n    //   this.suffleCardsWhenReady();\n    // }\n    // }\n  }\n  suffleCardsWhenReady() {\n    // when seats is full and has no cards on databse\n    let {players, game, gameState} = this.props.table;\n    if (players) {\n      let isAnyEmptySeat = players.some(seat => seat === EMPTY_SEAT);\n      if (\n        !isAnyEmptySeat &&\n                !game.cards &&\n                gameState === GAME_STATE.auction\n      ) {\n        this.shuffle();\n      }\n    }\n  }\n  // so far, how many tricks have been played ?\n  getNextMaxTrick() {\n    // if (!this.props.table || this.props.table.game) return;\n    let {game} = this.props.table;\n    if (!game) {\n      return;\n    }\n    let cards = game.cards,\n      maxTrick = Math.max(...cards.map(card => card.trick)),\n      maxTrickNum = cards.filter(card => card.trick === maxTrick).length;\n    if (maxTrick === 0 || maxTrickNum >= 4) {\n      return maxTrick + 1;\n    }\n    return maxTrick;\n  }\n  endAuction() {\n    this.setState({endAuction: true});\n  }\n  deal(value) {\n    console.log(\"value\", value);\n    let {table} = this.props;\n    let {game} = this.props.table;\n    if (!game) {\n      return;\n    }\n    let currentPlayer = game.deal;\n    let order = game.order + 1;\n\n    dispatchToDatabase(\n      \"UPDATE_CURRENT_TRICK\",\n      Object.assign(\n        {},\n        {\n          table: table,\n          value: value,\n          time: new Date().getTime(),\n          maxTrick: this.getNextMaxTrick(),\n          order: order,\n          deal: (game.deal + 1) % 4\n        }\n      )\n    );\n\n    let winnerCard = getWinnerCard(game, value);\n\n    // make sure winnerCard exists, and write winner to database\n    if (winnerCard) {\n      // remove index data while dispatch to database\n      let card = Object.assign({}, winnerCard);\n      delete card.index;\n\n      dispatchToDatabase(\n        \"UPDATE_WINNER_CARD\",\n        Object.assign({}, this.props, {\n          table: table,\n          winnerCard: card,\n          order: order,\n          deal: card.player\n        })\n      );\n    }\n  }\n  shuffle() {\n    let cards = shuffleCards();\n    // get new cards\n    cards = cards.map(card => ({\n      value: card,\n      trick: 0\n    }));\n    // todo bid\n    dispatchToDatabase(\"ADD_NEW_DECK_TO_TABLE\", {\n      table: this.props.table,\n      cards: cards\n    });\n  }\n  getAuctionStatus(game) {\n    // check if fishish auction\n    let result = game.bid.result;\n\n    if (!game || !result) {\n      return false;\n    }\n\n    return (\n      result.length >= 4 &&\n            result.some(bid => bid.trick >= 0) &&\n            result.slice(result.length - 3).every(res => res.opt === \"Pass\")\n    );\n  }\n  render() {\n    // if (!this.state.redirectToLogin) {\n    //   return <Redirect />;\n    // }\n\n    let {table, currentUser} = this.props;\n\n    console.log(\"in game table\", table);\n\n    let {game, players, ready} = table;\n\n    let {cards, isGameOver} = game;\n\n    let isEndOfCurrentTrick = game.order % 4 === 3;\n    let isFinishAuction = this.getAuctionStatus(game);\n    // set true to give dummy's card to declarer\n    let isDummyMode = isFinishAuction && true;\n\n    // class name for each hand\n    let hands;\n    let {cardsByPlayer, offsetPlayers, offsetIndex} =\n            getOffsetDatabyCurrentUser(players, game, currentUser.uid) || {};\n\n    // turn cards to 4 hands\n    if (cards && cards.length === CARD_NUM.TOTAL) {\n      let currentUserIndex = players.findIndex(\n        user => user === currentUser.uid\n      );\n\n      // if dummy mode, let it be dummy's index, esle let it be something larger\n      let flipIndex = isDummyMode ? (game.bid.declarer + 2) % 4 : 6;\n      let isValidFlipIndex = flipIndex < 4;\n\n      if (isValidFlipIndex) {\n        // udpate dummy hand's index in offset player list\n        flipIndex = offsetPlayers.findIndex(\n          player => player === players[flipIndex]\n        );\n      }\n\n      let currentTurnPlayer = players[game.deal];\n      let isCurrentUserPlayer = players.includes(currentUser.uid);\n\n      // cardsByPlayer already offset by current login user's index\n      hands = cardsByPlayer.map((hand, index) => {\n        let playerHand = offsetPlayers[index];\n        let playerHandIndex = index; // zero will alwasy be current login user\n\n        // makesure dummy hand can view declarer's card\n        if (flipIndex === 0) {\n          flipIndex = 2;\n        }\n\n        // only show cards didn't played\n        hand = hand\n          .sort((a, b) => a.value - b.value)\n          .filter(card => card.trick === 0);\n\n        if (playerHandIndex === 1 && flipIndex !== 1) {\n          hand = hand.sort((a, b) => b.value - a.value);\n        }\n\n        let currentUserIndex = 0;\n\n        // handle display issue for both weat/east players\n        let handCopy = hand.map(userHand =>\n          Object.assign({}, userHand)\n        );\n\n        let display = [[], [], [], []];\n        handCopy.map(card =>\n          display[Math.floor(card.value / CARD_NUM.HAND)].push(card)\n        );\n\n        // handle flip down card, group them into n rows base on\n        // how many cards left\n        display = display.filter(item => item.length !== 0);\n\n        // decide to flip down which players card\n        // use playerHandIndex to decide , playerHandIndex 0 means current user\n        // if current user is not a player, show sorted cards and don't flip them\n        if (\n          playerHandIndex !== currentUserIndex &&\n                    playerHandIndex !== flipIndex &&\n                    isCurrentUserPlayer\n        ) {\n          let mapResult = mapFlipDownCards(display);\n          if (mapResult) {\n            display = mapResult;\n          }\n        }\n\n        // handle sort isssue of west player, should sort\n        // from big to small\n        let firstCard = getFirstCard(game);\n\n        let hasFollowSameSuit = hasSameSuitWithFirstCard(\n          firstCard,\n          display.flat()\n        );\n\n        let cardsInHand = display.map((each, index) => {\n          // use playerHandIndex to decide flip up whose cards\n          // playerHandIndex === 0 means current user\n          let declarerIndex = game.bid.declarer;\n\n          let dummyPlayerIndex = (declarerIndex + 2) % 4;\n          let dummyPlayer = players[dummyPlayerIndex];\n\n          let declarerPlayer = players[declarerIndex];\n\n          // if player is nither declarer nor dummy plaer\n          let isValidCard = isFinishAuction && isCurrentUserPlayer;\n          let canBeClick =\n                        isValidCard &&\n                        // current player is equal to south;\n                        currentTurnPlayer === playerHand &&\n                        playerHandIndex === currentUserIndex;\n\n          // current turn is dummay hand, and current login user is declare,\n          // let current user can control dummy hand's card\n          if (\n            isDummyMode &&\n                        isValidCard &&\n                        dummyPlayer === currentTurnPlayer\n          ) {\n            if (\n              currentUser.uid === declarerPlayer &&\n                            playerHandIndex === 2\n            ) {\n              canBeClick = true;\n            }\n            if (\n              currentUser.uid === dummyPlayer &&\n                            playerHandIndex === currentUserIndex\n            ) {\n              canBeClick = false;\n            }\n          }\n\n          let flipUp =\n                        !isCurrentUserPlayer ||\n                        playerHandIndex === currentUserIndex ||\n                        playerHandIndex === flipIndex;\n\n          // if those card has same suit with first player,\n          // users need only to draw those cards\n          // if not, they can draw any cards\n          let allowClickEvt = card => {\n            return (\n              firstCard === null ||\n                            !hasFollowSameSuit ||\n                            Math.floor(card.value / CARD_NUM.HAND) ===\n                                Math.floor(firstCard.value / CARD_NUM.HAND)\n            );\n          };\n\n          return each.map((card, i) => (\n            <Card\n              name={\n                canBeClick && allowClickEvt(card)\n                  ? `click-able l${index} item-${i}`\n                  : `l${index} item-${i}`\n              }\n              flipUp={flipUp}\n              evt={\n                canBeClick && allowClickEvt(card)\n                  ? this.deal\n                  : null\n              }\n              key={`card-random-${i}`}\n              value={card.value}\n            />\n          ));\n        });\n\n        // calculate hand style and card postion\n        let totalCardsInHand = cardsInHand\n          .map(suit => suit.length)\n          .reduce((sum, len) => sum + len, 0);\n        let totalSuitType = cardsInHand.filter(\n          suit => suit.length !== 0\n        ).length;\n\n        // handle resize\n        let sidebarWidth = this.state.windowWidth >= 1200 ? 480 : 400;\n        let horCardOffset = 40;\n        let cardSize = 100;\n\n        // console.log(\"verHandPos\", verHandPos);\n        let horCardStyle =\n                    DIRECTION[index] === \"north\" || DIRECTION[index] === \"south\"\n                      ? {\n                        left:\n                                  (this.state.windowWidth -\n                                      sidebarWidth -\n                                      (horCardOffset * totalCardsInHand +\n                                          horCardOffset)) /\n                                  2\n                      }\n                      : null;\n\n        const getHandHeight = suitNum => {\n          let cardh = 125,\n            shift = 70;\n          return (\n            suitNum * cardh - (cardh - shift) * (suitNum - 1) + 10\n          );\n        };\n\n        // console.log(\"cardsInHand\", cardsInHand);\n        let verTopPos =\n                    DIRECTION[index] === \"west\" || DIRECTION[index] === \"east\"\n                      ? (this.state.windowHeight -\n                              getHandHeight(totalSuitType)) /\n                          2\n                      : null;\n\n        let verEdgePos;\n\n        // let verHandPos = getHandPosByCardNum(\n        //   cardsInHand,\n        //   cardSize,\n        //   horCardOffset,\n        //   this.state.windowWidth\n        // );\n\n        if (verTopPos && DIRECTION[index] === \"west\") {\n          verEdgePos = {top: verTopPos};\n        }\n        if (verTopPos && DIRECTION[index] === \"east\") {\n          verEdgePos = {top: verTopPos};\n        }\n        // console.log(\"verHandPos\", verHandPos);\n        // let verEdgePos = () => {\n        //   if (verTopPos && DIRECTION[index] === \"west\") {\n        //     return Object.assign({}, verTopPos, {left: verHandPos});\n        //   } else if (verTopPos && DIRECTION[index] === \"east\") {\n        //     return Object.assign({}, verTopPos, {\n        //       right: verHandPos\n        //   }\n        // };\n\n        // console.log(\"verEdgePos\", verEdgePos);\n\n        return (\n          <div\n            className={DIRECTION[index]}\n            style={horCardStyle || verEdgePos}\n            key={`player-hand-index-${index}`}>\n            <div className=\"hand-inner\">\n              <div className=\"user-hand\">{cardsInHand}</div>\n              <Player\n                current={\n                  currentTurnPlayer === playerHand &&\n                                    isFinishAuction\n                }\n                name={\n                  (table.playerInfo[playerHand] &&\n                                        table.playerInfo[playerHand]\n                                          .displayName) ||\n                                    \"Anonymous\"\n                }\n              />\n            </div>\n          </div>\n        );\n      });\n    } // end of cards\n    let isAllReady = table.ready.every(player => player === true);\n    console.log(\"isAllReady\", isAllReady);\n\n    // dom elements\n    if (isGameOver) {\n      return (\n        <div className=\"game\">\n          <div>\n            <ScoreBoard\n              startGame={this.suffleCardsWhenReady}\n              currentUser={currentUser}\n              windowWidth={this.state.windowWidth}\n              widnowHeight={this.state.windowHeight}\n              table={table}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    // let startTime = table.linkId;\n    // if (!isAllReady && table.record) {\n    //   startTime = table.createTime;\n    // }\n\n    // console.log(\"table.linkId;\", table.linkId);\n    // console.log(\"startTime\", startTime);\n\n    return (\n      <div className=\"game\">\n        {!isAllReady && (\n          <PlayerReadyList\n            suffleCardsWhenReady={this.suffleCardsWhenReady}\n            currentUser={currentUser}\n            table={this.props.table}\n          />\n        )}\n        {isFinishAuction && (\n          <AuctionResult\n            currentUser={currentUser}\n            windowWidth={this.state.windowWidth}\n            windowHeight={this.state.windowHeight}\n            table={table}\n          />\n        )}\n        <div className=\"auction\">\n          {game.bid &&\n                        game.cards && (\n            <Auction\n              isFinishAuction={isFinishAuction}\n              endAuction={this.endAuction}\n              game={game}\n              table={table}\n              currentUser={currentUser}\n              players={players}\n            />\n          )}\n        </div>\n        <div className=\"arena\">\n          <div className=\"hands\">{hands}</div>\n          <Trick\n            cards={cards}\n            cardsByPlayer={cardsByPlayer}\n            order={game.order}\n            isTrickFinish={isEndOfCurrentTrick}\n          />\n          <TrickScore\n            currentUser={currentUser}\n            resizeRatio={0.15}\n            innerStyle={{\n              bottom: Math.ceil(this.state.windowWidth / 500) * 5,\n              right: Math.ceil(this.state.windowWidth / 500) * 5\n            }}\n            thumbnailSize={30}\n            name=\"right-bottom-pos\"\n            windowWidth={this.state.windowWidth}\n            widnowHeight={this.state.windowHeight}\n            table={this.props.table}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport {dispatch, store} from \"../reducer/reducer.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/signup.scss\";\nimport \"../style/btn.scss\";\nimport \"../style/checkbox.scss\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    let _this = this;\n    app.onAuthChanged(user => {\n      if (user) {\n        _this.setState({redirect: true});\n      }\n    });\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      redirect: false\n    };\n    this.handleName = this.handleName.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n  handleLogin() {\n    let auth = app.auth;\n    let {email, password} = this.state;\n    if (!email || !password) return;\n    let promise = auth.signInWithEmailAndPassword(email, password);\n    promise\n      .then(user => this.setState({redirect: true}))\n      .catch(err => this.setState({error: err.message}));\n  }\n\n  handleName(e) {\n    this.setState({name: e.target.value});\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"singup-wrapper\">\n        <div className=\"signup login\">\n          <h2>登入</h2>\n          <div>\n            <h3>電子信箱</h3>\n            <input\n              type=\"text\"\n              placeholder=\"Email address\"\n              onChange={e => {\n                this.setState({email: e.currentTarget.value});\n              }}\n              value={this.state.email}\n            />\n          </div>\n          <div>\n            <h3>密碼</h3>\n            <input\n              placeholder=\"Enter password\"\n              type=\"password\"\n              onChange={e => {\n                this.setState({\n                  password: e.currentTarget.value\n                });\n              }}\n              value={this.state.password}\n            />\n          </div>\n          <div className=\"error-text\">{this.state.error || \"\"}</div>\n          <div>\n            <div className=\"btn-group\">\n              <button\n                onClick={this.handleLogin}\n                className=\"btn-style-round\">\n                登入\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class CreateTable extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return <div>CreateTable Component section</div>;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE} from \"../constant.js\";\nimport {teamScore} from \"../socre.js\";\n\nexport default class RecordItem extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {index, record, current} = this.props;\n    if (!record) {\n      return (\n        <div className=\"record-item\">\n          <div className=\"empty\" />\n        </div>\n      );\n    }\n    let score = teamScore(record.cards);\n    return (\n      <div\n        onClick={() => this.props.changeRecord(index)}\n        className={\n          current\n            ? \"record-item active current\"\n            : \"record-item active\"\n        }>\n        <div>{index + 1}</div>\n        <div className=\"bid\">\n          <span>{record.bid.trick + 1}</span>\n          {SUIT_SHAPE[record.bid.trump](0.15)}\n        </div>\n        <div>{score.teamA}</div>\n        <div>{score.teamB}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Dot = ({current, page, changePage}) => {\n  return (\n    <div\n      onClick={() => changePage(page)}\n      className={current ? \"dot current\" : \"dot\"}\n    />\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport RecordItem from \"./recordItem.js\";\nimport {ThumbailGroup} from \"../thumbnail.js\";\nimport {Dot} from \"../dotIndicator/dot.js\";\n\nexport default class GameRecord extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0\n    };\n    this.changePage = this.changePage.bind(this);\n  }\n  changePage(page) {\n    this.setState({page: page});\n  }\n  render() {\n    let resultNum = 3;\n    let {record} = this.props;\n    if (!record) {\n      return (\n        <div className=\"record-empty\">No available game records</div>\n      );\n    }\n    let recordList, dots, dotsNum;\n    if (record) {\n      if (record.length <= resultNum) {\n        record = record.concat([null, null, null]).slice(0, resultNum);\n      } else {\n        let start = this.state.page * resultNum;\n        let end =\n                    start + resultNum >= record.length\n                      ? record.length\n                      : start + resultNum;\n        record =\n                    end === start + resultNum\n                      ? record.slice(start, end)\n                      : record.slice(start, end);\n      }\n      recordList = record.map((recordItem, index) => (\n        <RecordItem\n          key={`record-item-${index}`}\n          index={index}\n          changeRecord={this.props.changeRecord}\n          current={this.props.currentRecord === index}\n          record={recordItem}\n        />\n      ));\n\n      dotsNum = Math.ceil(record.length / resultNum);\n      dots =\n                dotsNum <= 1\n                  ? null\n                  : (dots = Array.from({length: dotsNum})\n                    .fill(0)\n                    .map((dotItem, index) => (\n                      <Dot\n                        key={`dot-${index}`}\n                        changePage={this.changePage}\n                        page={index}\n                        current={index === this.state.page}\n                      />\n                    )));\n    }\n\n    return (\n      <div className=\"record-list\">\n        {this.props.record && (\n          <div className=\"record-header\">\n            <div />\n            <div />\n            <ThumbailGroup\n              teamOrder={0}\n              players={this.props.players}\n              size={32}\n            />\n            <ThumbailGroup\n              teamOrder={1}\n              players={this.props.players}\n              size={32}\n            />\n          </div>\n        )}\n        {recordList}\n        <div className=\"dots-holder\">\n          <div className=\"dots-holder-inner\">{dots}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"../thumbnail.js\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"../constant.js\";\n\nexport const Hand = ({player, cards, direction}) => {\n  let display = [[], [], [], []];\n  cards.map(card => display[Math.floor(card.value / 13)].push(card));\n  let displaySuit = display.map((suit, index) => (\n    <div className=\"hand\" key={`suit-${index}`}>\n      <div>{SUIT_SHAPE[index](0.15)}</div>\n      <div className=\"card-value\">\n        {suit.map((card, index) => (\n          <div key={`suit-${index}`}>\n            {CARD_RANK[card.value % CARD_NUM.HAND]}\n          </div>\n        ))}\n      </div>\n    </div>\n  ));\n  return (\n    <div className={`rewind-player ${direction}`}>\n      <div>\n        <Thumbnail name={player} size={26} />\n      </div>\n      <div className=\"hand-wrapper\">{displaySuit}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"../thumbnail.js\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"../constant.js\";\n\nexport const RewindAuction = ({players, bid}) => {\n  let {declarer, trump, trick} = bid;\n  return (\n    <div className=\"rewind-auction\">\n      <h3>Auction</h3>\n      <div>\n        <Thumbnail name={players[declarer]} size={26} />\n      </div>\n      <div>\n        {trick + 1} {SUIT_SHAPE[trump](0.15)}\n      </div>\n    </div>\n  );\n};\n\n\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ThumbailGroup} from \"../thumbnail.js\";\nimport {teamScore} from \"../socre.js\";\n\nexport const RewindResult = ({players, cards}) => {\n  let score = teamScore(cards);\n  return (\n    <div className=\"rewind-result\">\n      <h3>Result</h3>\n      <div>\n        <ThumbailGroup teamOrder={0} players={players} size={20} />\n        <div>{score.teamA}</div>\n      </div>\n      <div>\n        <ThumbailGroup teamOrder={1} players={players} size={20} />\n        <div>{score.teamB}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Hand} from \"./hand.js\";\nimport {mapToFourHands} from \"../examineCards.js\";\nimport {DIRECTION} from \"../constant.js\";\nimport {RewindAuction} from \"./rewindAuction.js\";\nimport {RewindResult} from \"./rewindResult.js\";\n\nexport default class GameRewind extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if (!this.props.record) {\n      return null;\n    }\n    let {cards, bid} = this.props.record;\n    let fourHandCards = mapToFourHands(cards);\n    let fourHands = fourHandCards.map((cards, index) => (\n      <Hand\n        direction={DIRECTION[index]}\n        key={`hand-${index}`}\n        cards={cards}\n        player={this.props.players[index]}\n      />\n    ));\n    return (\n      <div className=\"rewind\">\n        {fourHands}\n        <RewindAuction players={this.props.players} bid={bid} />\n        <RewindResult players={this.props.players} cards={cards} />\n        <div />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport reactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {app} from \"../firebase/firebase.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport randomColor from \"randomcolor\";\nimport {SUIT_SHAPE, Emoji} from \"./constant.js\";\n\nexport default class Chatroom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\"\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.addEmoji = this.addEmoji.bind(this);\n    this.msgEnd;\n    this.emoji = Emoji;\n  }\n  handleKeyPress(e) {\n    // && this.state.message.length\n    if (e.key === \"Enter\") {\n      console.log(\"has enter\");\n      this.sendMessage();\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  componentDidUpdate() {\n    console.log(\"did update\");\n    this.scrollToBottom();\n  }\n  addEmoji(emoji) {\n    this.setState({message: this.state.message + emoji});\n  }\n  sendMessage(e) {\n    dispatchToDatabase(\"SEND_MESSAGE_TO_CHATROOM\", {\n      message: this.state.message,\n      currentUser: this.props.currentUser,\n      table: this.props.table\n    });\n    this.setState({\n      message: \"\"\n    });\n    // this.scrollToBottom();\n  }\n  handleChange(e) {\n    this.setState({message: e.currentTarget.value});\n  }\n  scrollToBottom() {\n    // fixed when typing, message won't scroll to bottom \n    setTimeout(() => {\n      this.msgEnd.scrollIntoView({behavior: \"smooth\", block: \"end\"});\n    }, 10);\n  }\n  render() {\n    let {currentUser, table, chatroom} = this.props;\n    if (!table || !currentUser) {\n      console.log(\"no current table data\");\n    }\n    let {players} = table;\n    let messageList;\n    let emojiList = this.emoji.map((emj, i) => (\n      <a\n        key={`emj-${i}`}\n        className=\"emjbtn\"\n        onClick={() => this.addEmoji(emj)}>\n        {emj}\n      </a>\n    ));\n\n    if (chatroom && chatroom.message && table && table.viewers) {\n      let end = Object.keys(chatroom.message).length;\n      let chatStart = 0; //end - chatLen >= 0 ? end - chatLen : 0;\n      let isCurrentUserAPlayer = players.some(\n        player => player === currentUser.uid\n      );\n      let msgMapList;\n      if (isCurrentUserAPlayer) {\n        msgMapList = Object.keys(chatroom.message)\n          .sort((a, b) => +a - +b)\n          .filter(key => chatroom.message[key].isPlayer);\n      } else {\n        msgMapList = Object.keys(chatroom.message).sort(\n          (a, b) => +a - +b\n        );\n      }\n\n      messageList = msgMapList.map((id, index) => {\n        let color = table.viewers[chatroom.message[id].uid];\n        let symbol = null;\n        let playerIndex = players.findIndex(\n          player => player === chatroom.message[id].uid\n        );\n        if (playerIndex > -1) {\n          symbol = (\n            <div\n              style={{backgroundColor: color}}\n              className=\"symbol\">\n              {SUIT_SHAPE[playerIndex](0.1, \"#ffffff\")}\n            </div>\n          );\n        }\n        let msg = chatroom.message[id].content;\n        return (\n          <div className=\"msg\" key={`message-${index}`}>\n            <a>\n              {symbol}\n              <b style={{color: color}}>\n                {chatroom.message[id].displayName}{\" \"}\n                <b className=\"comma\">:</b>\n              </b>\n              {msg}\n            </a>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"chatroom\">\n        <div className=\"msg-wrapper\">\n          {messageList}\n\n          <div\n            ref={el => {\n              this.msgEnd = el;\n            }}\n            style={{float: \"left\", clear: \"both\"}}>\n            <i />\n          </div>\n        </div>\n        <div className=\"typing-area\">\n          <textarea\n            placeholder=\"type something...\"\n            rows=\"10\"\n            col=\"50\"\n            value={this.state.message}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n          />\n          <div className=\"emoji\">{emojiList}</div>\n          <button onClick={this.sendMessage}>送出</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport GameRecord from \"./gameRecord.js\";\nimport GameRewind from \"./gameRewind.js\";\nimport {TAB_OPTION} from \"../constant.js\";\nimport Chatroom from \"../chatroom.js\";\n\nexport default class Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    let {record} = this.props.table;\n    this.state = {\n      tab: 0,\n      currentRecord: record ? record.length - 1 : null\n    };\n    this.changeRecord = this.changeRecord.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n  }\n  changeRecord(index) {\n    this.setState({currentRecord: index});\n  }\n  handleTab(index) {\n    this.setState({tab: index});\n  }\n  render() {\n    if (!this.props.table) return null;\n    // let options = TAB_OPTION.map((opt, i) => (\n    //   <div\n    //     onClick={() => this.handleTab(i)}\n    //     className={this.state.tab === i ? `current ${opt}` : `${opt}`}\n    //     key={`opt-${i}`}>\n    //     <span />\n    //     <b>{opt}</b>\n    //   </div>\n    // ));\n    // let currentRecord = null;\n    // if (this.props.table.record) {\n    //   currentRecord =\n    //             this.state.currentRecord >= 0 &&\n    //             this.props.table.record[this.state.currentRecord];\n    // }\n\n    // let domRecord = (\n    //   <div>\n    //     <GameRecord\n    //       players={this.props.table.players}\n    //       record={this.props.table.record || null}\n    //       changeRecord={this.changeRecord}\n    //       currentRecord={this.state.currentRecord}\n    //     />\n    //     <GameRewind\n    //       players={this.props.table.players}\n    //       record={currentRecord}\n    //     />\n    //   </div>\n    // );\n    // let domChatroom = (\n    //   <Chatroom\n    //     currentUser={this.props.currentUser}\n    //     chatroom={this.props.chatroom}\n    //     table={this.props.table}\n    //   />\n    // );\n\n    // let currentTabContent = this.state.tab === 0 ? domChatroom : domRecord;\n\n    return (\n      <div className=\"sidebar\">\n        <div className=\"tabs\" style={{marginLeft: 30}}>\n          <div className={\"current chatroom\"}>\n            <span />\n            <b>chatroom</b>\n          </div>\n        </div>\n        <div className=\"tab-wrapper\" />\n        <div>\n          <Chatroom\n            currentUser={this.props.currentUser}\n            chatroom={this.props.chatroom}\n            table={this.props.table}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// <div>{currentTabContent}</div>\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nexport default class Loading extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"main-loading\">\n        <h2>Loading ...</h2>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./game.js\";\nimport {getRandomInt, getObjSortKey, getRandomKey} from \"../helper/helper.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport Sidebar from \"./sidebar/sidebar.js\";\nimport {GAME_STATE} from \"./constant.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport randomColor from \"randomcolor\";\nimport {EMPTY_SEAT} from \"./constant.js\";\nimport Loading from \"./loading.js\";\nimport \"../style/table.scss\";\nimport \"../style/sidebar.scss\";\nimport \"../style/record-item.scss\";\nimport \"../style/record.scss\";\nimport \"../style/dot.scss\";\nimport \"../style/rewind.scss\";\n\nexport default class Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateTableData = this.updateTableData.bind(this);\n    this.linkId =\n            this.props.match.params.id || window.location.hash.slice(8);\n\n    if (!this.props.currentUser) {\n      this.props\n        .getUserAuthInfo()\n        .then(user => {\n          console.log(\"user.displayName\");\n          console.log(user.displayName);\n          app.getDataByPathOnce(\n            `tableList/${this.linkId}`,\n            snapshot => {\n              if (!snapshot.val()) {\n                return null;\n              }\n              let tableKey = snapshot.val().id;\n              console.log(\"tableKey----------\", tableKey);\n              dispatchToDatabase(\"UPDATE_TABLE_TIMESTAMP\", {\n                id: tableKey\n              });\n              app.getDataByPathOnce(\n                `tables/${tableKey}/`,\n                snapshot => {\n                  this.updateTableData(tableKey, this.linkId)\n                    .then(msg =>\n                      this.setState({isLoad: true})\n                    )\n                    .catch(err => console.log(err));\n                }\n              );\n            }\n          );\n        })\n        .catch(err => this.setState({redirectToLogin: true}));\n    } else {\n      this.linkId = this.props.match.params.id;\n      this.tableKey = this.props.tableList[this.linkId].id;\n      this.updateTableData()\n        .then(msg => this.setState({isLoad: true}))\n        .catch(err => console.log(err));\n    }\n\n    this.state = {\n      isLoad: false,\n      redirectToLogin: false\n    };\n\n    // only fetch data\n\n    this.addPlayerToTable = this.addPlayerToTable.bind(this);\n    this.color = randomColor(\"dark\");\n  }\n  closeTable(tableKey = this.tableKey, linkId = this.linkId) {\n    return new Promise((resolve, reject) => {\n      app.setNodeByPath(\n        `tables/${tableKey}/gameState/${GAME_STATE.gameover}`,\n        GAME_STATE.gameover\n      );\n    });\n  }\n  updateTableData(tableKey = this.tableKey, linkId = this.linkId) {\n    return new Promise((resolve, reject) => {\n      app.getNodeByPath(`tables/${tableKey}`, value => {\n        resolve(value.val());\n        return dispatch(\"UPDATE_TABLE_DATA\", {\n          table: value.val(),\n          id: tableKey\n        });\n      });\n      app.getNodeByPath(`chatroom/${tableKey}`, value => {\n        resolve(\"successfulyy\");\n        return dispatch(\"UPDATE_CHAT_ROOM\", {\n          chatroom: value.val()\n        });\n      });\n    });\n  }\n  componentDidMount() {\n    // fetch data again\n    let _this = this;\n    this.updateTableData().then(data => _this.setState({isLoad: true}));\n  }\n\n  addPlayerToTable(table) {\n    if (!table) return;\n    let {players, viewers} = table;\n    let emptySeatIndex = players.findIndex(seat => seat === EMPTY_SEAT);\n    let alreadyAPlayer = players.some(\n      seat => seat === this.props.currentUser.uid\n    );\n    let alreadyAViewer = Boolean(\n      viewers && viewers[this.props.currentUser.uid]\n    );\n    if (emptySeatIndex > -1 && !alreadyAPlayer) {\n      dispatchToDatabase(\"ADD_PLAYER_TO_TABLE\", {\n        currentUser: this.props.currentUser,\n        table: table,\n        emptySeatIndex: emptySeatIndex,\n        color: this.color\n      });\n    } else if (!alreadyAViewer) {\n      dispatchToDatabase(\"ADD_VIEWER_TO_TABLE\", {\n        currentUser: this.props.currentUser,\n        table: table,\n        color: this.color\n      });\n    }\n  }\n  componentDidUpdate(prevProps) {\n    // if this is a different table\n    if (!this.props.tableList) return;\n    if (this.props.currentTableId !== prevProps.currentTableId) {\n      this.setState({isLoad: false});\n      this.updateTableData().then(data => this.setState({isLoad: true}));\n    }\n\n    let {tableKey, linkId} = this;\n    if (this.props.tableList[this.linkId].id) {\n      if (this.props.tables[tableKey] !== prevProps.tables[tableKey]) {\n        this.addPlayerToTable(this.props.tables[tableKey]);\n        dispatch(\"SET_CURRENT_HEADER\", {isInTablePage: true});\n      }\n    }\n  }\n  render() {\n    if (this.state.redirectToLogin) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    if (!this.state.isLoad) {\n      return <Loading />;\n    }\n\n    let {tables, currentUser} = this.props;\n    let linkId = this.props.match.params.id;\n    let tableKey = this.props.tableList[linkId].id;\n    if (!tables || !tables[tableKey]) {\n      return null;\n    }\n    let targetTable = tables[tableKey];\n    if (\n      targetTable.gameState &&\n            targetTable.gameState === GAME_STATE.close\n    ) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"table\">\n        <Game\n          currentUser={currentUser}\n          currentTableId={this.props.currentTableId}\n          table={targetTable}\n        />\n        <Sidebar\n          currentUser={currentUser}\n          chatroom={this.props.chatroom}\n          table={targetTable}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"./thumbnail.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport {Link} from \"react-router-dom\";\nimport {dispatch} from \"../reducer/reducer.js\";\nimport \"../style/user-state.scss\";\n\nexport default class UserState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.closePanel = this.closePanel.bind(this);\n  }\n  handleSignOut() {\n    this.closePanel();\n    this.props.updateHeader();\n    app.auth.signOut();\n  }\n  closePanel() {\n    this.setState({isOpen: false});\n  }\n\n  render() {\n    let {currentUser, userList} = this.props;\n    if (userList && userList[currentUser.uid]) {\n      name = userList[currentUser.uid].displayName;\n    }\n    if (!name) {\n      name === \"\";\n    }\n    return (\n      <div className=\"user-state-panel\">\n        <div\n          className={\n            this.state.isOpen\n              ? \"Login-state-btn open-btn\"\n              : \"Login-state-btn\"\n          }\n          onClick={() => this.setState({isOpen: !this.state.isOpen})}>\n          <Thumbnail size={40} offset={5} name={name} />\n          <div>\n            <h6>{this.props.currentUser.displayName}</h6>\n            <span>online</span>\n          </div>\n        </div>\n        <div className={this.state.isOpen ? \"options open\" : \"options\"}>\n          <Link onClick={this.handleSignOut} to=\"/\">\n                        Sign out\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport \"../style/header.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport logoImg from \"../images/logo.svg\";\nimport {dispatch} from \"../reducer/reducer.js\";\nimport UserState from \"./userState.js\";\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateHeader = this.updateHeader.bind(this);\n    let _this = this;\n    if (!this.props.currentUser) {\n      this.props.getUserAuthInfo().then(user => {\n        console.log(\"in fetched\");\n        console.log(_this.props.currentUser);\n        _this.setState({isLoad: true});\n      });\n    }\n  }\n  updateHeader() {\n    dispatch(\"SET_CURRENT_HEADER\", {isInTablePage: false});\n  }\n  render() {\n    let userProfile = (\n      <UserState\n        updateHeader={this.updateHeader}\n        uid={this.props.uid}\n        currentUser={this.props.currentUser}\n        userList={this.props.userList}\n      />\n    );\n    let rightTopCorner;\n    let registerBtns = (\n      <div className=\"register-btn-groups\">\n        <Link onClick={this.updateHeader} to=\"/signup\">\n          註冊\n        </Link>\n        <Link onClick={this.updateHeader} to=\"/login\">\n          登入\n        </Link>\n      </div>\n    );\n    rightTopCorner = this.props.uid ? userProfile : registerBtns;\n    return (\n      <header className={this.props.isInTablePage ? \"table-header\" : \"\"}>\n        <div>\n          <Link to=\"/\" onClick={this.updateHeader}>\n            <img src={logoImg} />\n            <h1>Wow Bridge</h1>\n          </Link>\n        </div>\n        <div>\n          <div>{rightTopCorner}</div>\n        </div>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {GAME_STATE, TIMER} from \"./constant.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {EMPTY_SEAT} from \"../components/constant.js\";\nimport {getObj, getObjSortKey} from \"../helper/helper.js\";\nimport {app} from \"../firebase/firebase.js\";\n\nimport \"../style/table-list.scss\";\n\nexport default class OpenTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createTable = this.createTable.bind(this);\n    this.updateHeader = this.updateHeader.bind(this);\n    this.setCurrentTable = this.setCurrentTable.bind(this);\n    this.state = {};\n  }\n  createTable(tableRef) {\n    if (!this.props.currentUser) {\n      return;\n    }\n    dispatchToDatabase(\"CREATE_TABLE\", {\n      tableRef: tableRef,\n      currentUser: this.props.currentUser\n    });\n\n    this.updateHeader();\n    this.setCurrentTable(tableRef);\n  }\n  setCurrentTable(id) {\n    if (this.props.currentUser) {\n      dispatch(\"UPDATE_CURRENT_TABLE_ID\", {currentTableId: id});\n    }\n    this.updateHeader();\n  }\n  updateHeader() {\n    let val = true;\n    if (!this.props.currentUser) {\n      val = false;\n    }\n    dispatch(\"SET_CURRENT_HEADER\", {isInTablePage: val});\n  }\n  render() {\n    let tableList = this.props.tableList;\n    // let closeTables = this.props.closeTables;\n    let tableLinks;\n\n    if (tableList) {\n      let tableListKey = Object.keys(tableList);\n      let filteredList = tableListKey.filter(key => {\n        if (\n          tableList[key].players &&\n                    new Date().getTime() - +key <= 15000\n        ) {\n          return tableList[key].players.some(\n            seat => seat === EMPTY_SEAT\n          );\n        } else {\n          return !tableList[key].players;\n        }\n      });\n      tableLinks = filteredList.map((key, index) => {\n        let players = this.props.tableList[key].players;\n        let emptySeats = players\n          ? players.filter(player => player === EMPTY_SEAT).length\n          : 4;\n        let owner = \"\";\n        return (\n          <div\n            className=\"table-list-item\"\n            key={`tablelist-item-${index}}`}>\n            <div className=\"room-number\"><span>{key.slice(key.length-3, key.length)}</span></div>\n            <div>{owner}</div>\n            <div className=\"empty-seats\">{emptySeats} </div>\n            <div>\n              <Link\n                className=\"btn-style-border\"\n                onClick={() => this.setCurrentTable(key)}\n                key={key}\n                to={\n                  this.props.currentUser\n                    ? `/table/${key}`\n                    : \"/login\"\n                }>\n                                加入\n              </Link>\n            </div>\n          </div>\n        );\n      });\n    }\n\n    let tableRef = new Date().getTime();\n    let openBtn = this.props.currentUser &&\n            this.props.openBtn && (\n      <Link\n        className=\"btn-style-border\"\n        onClick={() => this.createTable(tableRef)}\n        to={\n          this.props.currentUser ? `/table/${tableRef}` : \"/login\"\n        }>\n        我要開桌\n      </Link>\n    );\n\n    return (\n      <div className=\"table-list\">\n        {this.props.title && <h4>{this.props.title}</h4>}\n        <div className=\"table-list-header\">\n          <div>房號</div>\n          <div>桌長</div>\n          <div>空位</div>\n          <div className=\"open-table-section\">{openBtn}</div>\n        </div>\n        <div className=\"table-list-item-group\">{tableLinks}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {EMPTY_SEAT} from \"../components/constant.js\";\nimport {getObj, getObjSortKey} from \"../helper/helper.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/table-list.scss\";\n\nexport default class OpenTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createTable = this.createTable.bind(this);\n    this.updateHeader = this.updateHeader.bind(this);\n    this.setCurrentTable = this.setCurrentTable.bind(this);\n  }\n  updateHeader() {\n    let val = false;\n    if (this.props.currentUser) {\n      val = true;\n    }\n    dispatch(\"SET_CURRENT_HEADER\", {isInTablePage: val});\n  }\n  createTable(tableRef) {\n    dispatchToDatabase(\"CREATE_TABLE\", {\n      tableRef: tableRef,\n      currentUser: this.props.currentUser\n    });\n  }\n  setCurrentTable(id) {\n    this.updateHeader();\n    if (this.props.currentUser) {\n      dispatch(\"UPDATE_CURRENT_TABLE_ID\", {currentTableId: id});\n    }\n  }\n  render() {\n    let {tableList} = this.props;\n    let tableLinks;\n    if (tableList) {\n      let tableListKey = Object.keys(tableList);\n      let playingTables = tableListKey.filter(\n        key =>\n          tableList[key].players &&\n                    !tableList[key].players.some(\n                      player => player === EMPTY_SEAT\n                    )\n      );\n      tableLinks = playingTables.map((key, index) => {\n        let {players, playerInfo} = this.props.tableList[key];\n        let playerList = players.map((playerKey, index) => (\n          <div key={`playerSeat-${index}`}>\n            {playerInfo[playerKey]\n              ? playerInfo[playerKey].displayName\n              : \"Anonymous\"}\n          </div>\n        ));\n        return (\n          <div\n            className=\"playing-table\"\n            key={`playing-table-item-${index}}`}>\n            <div className=\"room-number\"><span>{key.slice(key.length-3, key.length)}</span></div>\n            {playerList}\n            <div>\n              <Link\n                onClick={() => this.setCurrentTable(key)}\n                className=\"btn-style-border\"\n                to={\n                  this.props.currentUser\n                    ? `/table/${key}`\n                    : \"/login\"\n                }>\n                                View\n              </Link>\n            </div>\n          </div>\n        );\n      });\n    }\n    return (\n      <div className=\"table-list\">\n        <h4>{this.props.title}</h4>\n        <div className=\"table-list-header playing-table-header\">\n          <div>房號</div>\n          <div>南</div>\n          <div>西</div>\n          <div>北</div>\n          <div>東</div>\n          <div />\n        </div>\n        <div className=\"table-list-item-group\">{tableLinks}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  IndexRoute,\n  BrowserRouter,\n  Router,\n  Route,\n  Switch,\n  Link\n} from \"react-router-dom\";\nimport {EMPTY_SEAT} from \"./constant.js\";\nimport OpenTables from \"./openTables.js\";\nimport PlayingTables from \"./playingTables.js\";\nimport \"../style/lobby.scss\";\nimport openImg from \"../images/open.svg\";\nimport playImg from \"../images/play.svg\";\n\nexport default class Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let open = 0,\n      playing = 0;\n    return (\n      <div className=\"lobby\">\n        <div className=\"lobby-title\">\n          <h2>Welcome to Wow Bridge</h2>\n        </div>\n        <div className=\"table-lists\">\n          <div className=\"table-list-wrapper\">\n            <div className=\"table-num\" />\n            <div className=\"table-list-inner\">\n              <img src={openImg} />\n              <OpenTables\n                title={\"揪咖打牌\"}\n                openBtn={true}\n                tables={this.props.tables}\n                currentUser={this.props.currentUser}\n                open={true}\n                tableList={this.props.tableList}\n              />\n            </div>\n          </div>\n          <div className=\"table-list-wrapper\">\n            <div className=\"table-num\" />\n            <div className=\"table-list-inner\">\n              <img src={playImg} />\n              <PlayingTables\n                tables={this.props.tables}\n                title={\"熱門牌桌\"}\n                openBtn={true}\n                open={false}\n                currentUser={this.props.currentUser}\n                tableList={this.props.tableList}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/signup.scss\";\nimport \"../style/btn.scss\";\nimport \"../style/checkbox.scss\";\nimport {Redirect} from \"react-router-dom\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\n\nconst error = {\n  \"no-error\": \"\"\n};\n\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm: \"\",\n      agreement: false,\n      message: \"\",\n      redirect: false\n    };\n    this.handleSignUp = this.handleSignUp.bind(this);\n  }\n  handleSignUp() {\n    let auth = app.auth;\n    let {email, password, name} = this.state;\n    if (!email || !password || !confirm) return;\n    let promise = auth.createUserWithEmailAndPassword(email, password);\n    promise\n      .then(user => {\n        let randomIcon = Math.floor(Math.random() * 20);\n        this.props.updateUserInfo(user, {\n          name: name,\n          email: email\n        });\n        return auth.onAuthStateChanged(user => {\n          if (user) {\n            let userInfo = {\n              displayName: name,\n              email: email\n            };\n            user.updateProfile(userInfo);\n            app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n              if (!snapshot.val()) {\n                dispatchToDatabase(\"CREATE_USER\", {\n                  uid: user.uid,\n                  userInfo: userInfo\n                });\n              }\n            });\n          } else {\n            console.log(\"no user uid\");\n          }\n        });\n      })\n      .then(user => this.setState({redirect: true}))\n      .catch(error => this.setState({message: error.message}));\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"singup-wrapper\">\n        <div className=\"signup\">\n          <h2>註冊</h2>\n          <div>\n            <h3>玩家名稱</h3>\n            <input\n              placeholder=\"請輸入玩家名稱\"\n              type=\"text\"\n              onChange={e => {\n                this.setState({\n                  name: e.currentTarget.value,\n                  message: \"\"\n                });\n              }}\n              value={this.state.name}\n            />\n          </div>\n          <div>\n            <h3>密碼</h3>\n            <input\n              placeholder=\"請輸入至少 6 位數\"\n              type=\"password\"\n              onChange={e => {\n                this.setState({\n                  password: e.currentTarget.value,\n                  message: \"\"\n                });\n              }}\n              value={this.state.password}\n            />\n          </div>\n          <div>\n            <h3>確認密碼</h3>\n            <input\n              placeholder=\"請輸入至少 6 位數\"\n              type=\"password\"\n              onChange={e => {\n                this.setState({\n                  confirm: e.currentTarget.value,\n                  message: \"\"\n                });\n              }}\n              value={this.state.confirm}\n            />\n          </div>\n          <div>\n            <h3>電子信箱</h3>\n            <input\n              type=\"email\"\n              placeholder=\"john@bridge.com\"\n              onChange={e => {\n                this.setState({\n                  email: e.currentTarget.value,\n                  message: \"\"\n                });\n              }}\n              value={this.state.email}\n            />\n          </div>\n          <div>\n            <div className=\"error-text error-text-panel\">\n              {this.state.message}\n            </div>\n            <div className=\"btn-group\">\n              <button\n                onClick={this.handleSignUp}\n                className=\"btn-style-round\">\n                      註冊\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n            // <label className=\"checkbox-lable\">\n            //   <input id=\"agreement\" type=\"checkbox\" />\n            //   <div\n            //     className={\n            //       this.state.agreement ? \"checked\" : \"\"\n            //     }\n            //     onClick={() =>\n            //       this.setState({\n            //         agreement: !this.state.agreement\n            //       })\n            //     }\n            //   />\n            // </label>\n\n              // <span\n              //   onClick={() =>\n              //     this.setState({\n              //       agreement: !this.state.agreement\n              //     })\n              //   }>\n              //                   I allow the use of collected data about my study\n              //                   behavior for research purposes. The data\n              //                   contains information from game playing and\n              //                   chatting messages. No individuals can be\n              //                   identified from publications.\n              // </span>\n","import \"./style/main.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Game from \"./components/game.js\";\nimport Login from \"./components/login.js\";\nimport CreateTable from \"./components/createTable.js\";\nimport Table from \"./components/table.js\";\nimport Header from \"./components/header.js\";\nimport Lobby from \"./components/lobby.js\";\nimport Loading from \"./components/loading.js\";\nimport SignUp from \"./components/signUp.js\";\nimport {app} from \"./firebase/firebase.js\";\nimport {\n  IndexRoute,\n  BrowserRouter,\n  Router,\n  Route,\n  Switch,\n  Redirect,\n  Link,\n  withrouter,\n  HashRouter\n} from \"react-router-dom\";\nimport {dispatch, store} from \"./reducer/reducer.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = store.getState();\n    this.update = this.update.bind(this);\n    this.stopLoading = this.stopLoading.bind(this);\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n    this.getUserAuthInfo = this.getUserAuthInfo.bind(this);\n    // this.updateCloseTable = this.updateCloseTable.bind(this);\n  }\n  update() {\n    this.setState(store.getState());\n  }\n  componentDidUnMount() {\n    this.unSubscribe();\n  }\n  componentDidMount() {\n    this.unSubscribe = store.subscribe(this.update.bind(this));\n    this.stopLoading();\n  }\n  updateUserInfo(user, userInfo) {\n    dispatch(\"UPDATE_USER_INFO\", {\n      user: user,\n      uid: user.uid,\n      userInfo: userInfo\n    });\n  }\n  getUserAuthInfo() {\n    return new Promise((resolve, reject) => {\n      app.auth.onAuthStateChanged(user => {\n        if (user) {\n          app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n            let userInfo = snapshot.val();\n            resolve(userInfo);\n            dispatch(\"UPDATE_USER_INFO\", {\n              user: user,\n              uid: user.uid,\n              userInfo: snapshot.val()\n            });\n          });\n        } else {\n          reject(true);\n          return dispatch(\"UPDATE_USER_INFO\", {\n            uid: null,\n            userInfo: null,\n            user: null\n          });\n        }\n      });\n    });\n  }\n  stopLoading() {\n    dispatch(\"STOP_LOADING\", {isLoad: true});\n  }\n  render() {\n    console.log(\"in APP\", this.state);\n    let pathName = window.location.pathname;\n    if (!this.state.isLoad) {\n      return <Loading />;\n    }\n    let currentUser = this.state.user;\n    return (\n      <div>\n        <HashRouter>\n          <div>\n            <Header\n              getUserAuthInfo={this.getUserAuthInfo}\n              userList={this.state.userList}\n              isInTablePage={this.state.isInTablePage}\n              updateUserInfo={this.updateUserInfo}\n              isLogin={this.state.isLogin || false}\n              path={pathName}\n              userInfo={this.state.userInfo}\n              uid={this.state.uid}\n              currentUser={this.state.user}\n            />\n            <div>\n              <Route\n                path=\"/login\"\n                exact\n                render={props => <Login />}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={props => (\n                  <SignUp\n                    updateUserInfo={this.updateUserInfo}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                path=\"/table/:id\"\n                render={props => (\n                  <Table\n                    currentTableId={\n                      this.state.currentTableId\n                    }\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    userInfo={this.state.userInfo}\n                    chatroom={this.state.chatroom}\n                    tables={this.state.tables}\n                    tableList={this.state.tableList}\n                    currentUser={this.state.user}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Lobby\n                    tables={this.state.tables || null}\n                    currentUser={this.state.user}\n                    tableList={this.state.tableList}\n                  />\n                )}\n              />\n            </div>\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n"],"sourceRoot":""}
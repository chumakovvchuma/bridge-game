{"version":3,"sources":["webpack:///./src/images/logo.svg","webpack:///./src/images/open.svg","webpack:///./src/images/play.svg","webpack:///./src/images/avatar/0.svg","webpack:///./src/images/avatar/1.svg","webpack:///./src/images/avatar/2.svg","webpack:///./src/images/avatar/3.svg","webpack:///./src/images/avatar/4.svg","webpack:///./src/images/avatar/5.svg","webpack:///./src/images/avatar/6.svg","webpack:///./src/images/avatar/7.svg","webpack:///./src/images/avatar/8.svg","webpack:///./src/images/avatar/9.svg","webpack:///./src/images/avatar/10.svg","webpack:///./src/images/avatar/11.svg","webpack:///./src/images/avatar/12.svg","webpack:///./src/images/avatar/13.svg","webpack:///./src/images/avatar/14.svg","webpack:///./src/images/avatar/15.svg","webpack:///./src/images/avatar/16.svg","webpack:///./src/images/avatar/17.svg","webpack:///./src/images/avatar/18.svg","webpack:///./src/images/avatar/19.svg","webpack:///./src/images/avatar/20.svg","webpack:///./src/images/avatar/robot.svg","webpack:///./src/images/avatar/avatar_slot.svg","webpack:///./src/images/avatar/21.svg","webpack:///./src/firebase/firebase.js","webpack:///./src/firebase/config.js","webpack:///./src/helper/helper.js","webpack:///./src/components/shape/shape.js","webpack:///./src/components/constant.js","webpack:///./src/reducer/reducer.js","webpack:///./src/components/thumbnail.js","webpack:///./src/components/userState.js","webpack:///./src/components/header.js","webpack:///./src/components/login.js","webpack:///./src/components/card.js","webpack:///./src/components/getCurrentMaxTrick.js","webpack:///./src/components/trick.js","webpack:///./src/components/socre.js","webpack:///./src/components/trickScore.js","webpack:///./src/components/scoreBoard.js","webpack:///./src/components/auctionList.js","webpack:///./src/components/auction.js","webpack:///./src/components/player.js","webpack:///./src/components/auctionResult.js","webpack:///./src/components/examineCards.js","webpack:///./src/components/getWinnerCard.js","webpack:///./src/components/progress.js","webpack:///./src/components/playerReadyList.js","webpack:///./src/components/game.js","webpack:///./src/components/sidebar/recordItem.js","webpack:///./src/components/dotIndicator/dot.js","webpack:///./src/components/sidebar/gameRecord.js","webpack:///./src/components/sidebar/hand.js","webpack:///./src/components/sidebar/rewindAuction.js","webpack:///./src/components/sidebar/rewindResult.js","webpack:///./src/components/sidebar/gameRewind.js","webpack:///./src/components/chatroom.js","webpack:///./src/components/sidebar/sidebar.js","webpack:///./src/components/loading.js","webpack:///./src/components/table.js","webpack:///./src/components/openTables.js","webpack:///./src/components/playingTables.js","webpack:///./src/components/lobby.js","webpack:///./src/components/signUp.js","webpack:///./src/index.js","webpack:///./src/images/loading.svg"],"names":["module","exports","__webpack_require__","p","firebaseApp","a","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","app","db","database","auth","onAuthChanged","callback","onAuthStateChanged","user","console","log","getNodeByPathOnce","path","action","ref","on","getNodeByPath","pushDataByPath","data","push","cancelListenDataChange","off","listenPathChildren","setNodeByPath","set","getDataByPathOnce","once","getNewChildKey","node","child","key","updateTableDataByID","id","updateTableGameDataByPath","game","setTableListData","getRandomKey","n","arguments","length","undefined","letter","Array","from","fill","map","w","Math","floor","random","join","getRandomInt","min","max","shape_Heart","_ref","scale","_ref$fill","react_default","createElement","shape_SvgContainer","ratio","d","shape_Spade","_ref2","_ref2$fill","shape_Diamond","_ref3","_ref3$fill","points","shape_Club","_ref4","_ref4$fill","_ref5","children","width","height","viewBox","transform","CARD_NUM","TIMER","RESULT","SUIT_SHAPE","0","1","2","3","4","CARD_RANK","DEFAULT_GAME","deal","bid","isDb","isRdb","trick","trump","order","isGameOver","PLAYERS","GAME_STATE","DIRECTION","Emoji","dispatch","type","store","Object","assign","reducer_dispatchToDatabase","uid","userInfo","currentUser","timeStamp","Date","getTime","players","slice","newPlayerInfo","uidKey","displayName","tableKey","linkId","tableRef","newTable","createTime","gameState","playerInfo","C1-robot","C2-robot","C3-robot","-1","ready","isOpen","table","tableData","record","playerIndex","updateTable","every","state","cards","newGame","targetCardIndex","findIndex","card","value","winnerCard","winner","isWin","player","targetCardInex","currentCard","maxTrick","color","emptySeatIndex","updatePlayers","message","time","newMessage","isPlayer","some","content","tableList","val","userList","redux","isLoad","tables","chatroom","updatedTables","currentTableId","closeTables","es","snapshot","Avatar","_0_default","_1_default","_2_default","_3_default","_4_default","5","_5_default","6","_6_default","7","_7_default","8","_8_default","9","_9_default","10","_10_default","11","_11_default","12","_12_default","13","_13_default","14","_14_default","15","_15_default","16","_16_default","17","_17_default","18","_18_default","19","_19_default","20","_20_default","avatarNum","keys","thumbnail_Thumbnail","_ref$name","name","_ref$size","size","_ref$disabled","disabled","_ref$offset","offset","_ref$border","border","_ref$styleName","isCurrentUser","styleName","_ref$robotMargin","robotMargin","_ref$robotOffset","robotOffset","shiftAvatar","split","str","charCodeAt","reduce","sum","num","source","includes","robot_default","className","style","borderRadius","marginTop","src","thumbnail_ThumbnailWithTag","_ref2$name","_ref2$size","_ref2$disabled","_ref2$offset","_ref2$border","_ref2$isCurrentUser","_ref2$styleName","thumbnail_ThumbailGroup","teamOrder","members","filter","index","thumbnail_ThumbailGroupWithTag","styleObj","styleOb","thumbnail_WaitingThumbnail","_React$Component","WaitingThumbnail","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","posY","position","stop","isGoingUp","changeImg","bind","timer","setInterval","_inherits","Component","_createClass","mount","setState","dy","prevProps","clearInterval","img","avatar_slot_default","userState","UserState","userState_classCallCheck","userState_possibleConstructorReturn","handleSignOut","closePanel","signOut","_this2","onClick","Link","to","components_header","Header","header_classCallCheck","header_possibleConstructorReturn","getUserAuthInfo","then","rightTopCorner","userProfile","registerBtns","roomNum","roomInfo","isTableColor","logo_default","login","Login","login_classCallCheck","login_possibleConstructorReturn","email","password","redirect","redirectToLobbyIfLogin","handleLogin","isMount","Promise","resolve","reject","Error","catch","error","_this3","_state","signInWithEmailAndPassword","err","_this4","Redirect","placeholder","onChange","e","currentTarget","card_TrickCard","card_Card","flipUp","_ref2$evt","evt","kind","wrapperName","getCurrentMaxTrick","apply","_toConsumableArray","components_trick","Trick","trick_classCallCheck","trick_possibleConstructorReturn","fadeOutCards","setTimeout","direction","_props","cardsByPlayer","isTrickFinish","currentTrick","hand","trickCards","sort","cardA","cardB","userHand","i","teamScore","teamA","teamB","winningScore","trickScore","TrickScore","trickScore_classCallCheck","trickScore_possibleConstructorReturn","windowWidth","windowHeight","score","playerList","innerStyle","resizeRatio","thumbnailSize","minWidth","scoreBoard","ScoreBoard","scoreBoard_classCallCheck","scoreBoard_possibleConstructorReturn","recordGame","_props$table","indexOf","playerTeamScore","winScore","resultWords","_game$bid","declarer","isCurrentUserAPlayer","isUserWin","resultAction","widnowHeight","auctionList_AuctionList","result","resultsNum","ceil","res","re","j","resultItem","opt","components_auction","Auction","auction_classCallCheck","auction_possibleConstructorReturn","visibility","current","updateBid","validateUserTurnAndsetTrump","newBid","isAllPass","hasValidTrump","_props2","trickOpt","trumpOpt","allTrickOpt","selectedTrump","DoubleBtn","ReDoubleBtn","playerThumbnails","isFinishAuction","player_Player","_ref$current","auctionResult_AuctionResult","AuctionResult","auctionResult_classCallCheck","auctionResult_possibleConstructorReturn","auctionResult_inherits","auctionResult_createClass","top","right","mapToFourHands","userIndex","examineCards_getRandomCards","randomIndex","validateShuffle","examineCards_fourHands","getWinnerCard_findMaxValueByTrump","arr","list","item","getWinnerCard_getWinnerCard","cardValue","cardsMatchCurrentTrick","noTrumpCards","first","getWinnerCard_toConsumableArray","_cardsMatchCurrentTri","firstHand","_slicedToArray","tmp","trumpRef","progress_Progress","totalWidth","currentWidth","_ref$height","_ref$fg","fg","_ref$bg","bg","total","fillRule","x","y","rx","playerReadyList","PlayerReadyList","playerReadyList_classCallCheck","playerReadyList_possibleConstructorReturn","timeInterval","frequency","progress","setReadyState","countDownTimer","checkReadyState","diffRange","timesUp","_props3","isAnyEmptySeat","seat","isAllPlayerReady","playBtns","currentVal","isTimesUp","totolProgress","thumbnails","playerName","currentUserCanPlay","zIndex","progressState","roomId","components_game","Game","game_classCallCheck","game_possibleConstructorReturn","endAuction","window","innerWidth","innerHeight","getNextMaxTrick","shuffle","suffleCardsWhenReady","handleResize","getAuctionStatus","addEventListener","removeEventListener","game_toConsumableArray","maxTrickNum","shuffleCards","isEndOfCurrentTrick","isDummyMode","hands","offsetIndex","examineCards_toConsumableArray","offsetPlayers","getOffsetDatabyCurrentUser","flipIndex","currentTurnPlayer","isCurrentUserPlayer","playerHand","playerHandIndex","b","display","mapResult","dislayList","flat","totalLen","mid","threeRow","mapFlipDownCards","firstCard","constant_PLAYER_NUM","examineCards_getFirstCard","hasFollowSameSuit","examineCards_hasSameSuitWithFirstCard","cardsInHand","each","declarerIndex","dummyPlayer","declarerPlayer","isValidCard","canBeClick","allowClickEvt","totalCardsInHand","suit","len","totalSuitType","sidebarWidth","horCardStyle","left","verTopPos","suitNum","getHandHeight","verEdgePos","isAllReady","startGame","bottom","sidebar_recordItem","RecordItem","recordItem_classCallCheck","recordItem_possibleConstructorReturn","changeRecord","dot_Dot","page","changePage","GameRecord","gameRecord_classCallCheck","gameRecord_possibleConstructorReturn","recordList","dots","dotsNum","concat","start","end","recordItem","currentRecord","dotItem","hand_Hand","displaySuit","rewindAuction_RewindAuction","rewindResult_RewindResult","GameRewind","gameRewind_classCallCheck","gameRewind_possibleConstructorReturn","_props$record","fourHands","components_chatroom","Chatroom","chatroom_classCallCheck","chatroom_possibleConstructorReturn","sendMessage","handleChange","handleKeyPress","addEmoji","msgEnd","emoji","scrollToBottom","scrollIntoView","behavior","block","messageList","emojiList","emj","viewers","symbol","backgroundColor","msg","el","float","clear","rows","col","onKeyPress","sidebar","Sidebar","sidebar_classCallCheck","sidebar_possibleConstructorReturn","tab","handleTab","marginLeft","components_loading","Loading","loading_classCallCheck","loading_possibleConstructorReturn","loading_default","components_table","Table","table_classCallCheck","table_possibleConstructorReturn","updateTableData","match","params","location","hash","redirectToLogin","isClosed","addPlayerToTable","randomColor_default","alreadyAPlayer","alreadyAViewer","Boolean","targetTable","openTables","OpenTables","openTables_classCallCheck","openTables_possibleConstructorReturn","createTable","setCurrentTable","tableLinks","tableCreateTime","emptySeats","PLAYER_NUM","owner","openBtn","title","components_playingTables","playingTables_classCallCheck","playingTables_possibleConstructorReturn","_props$tableList$key","playerKey","components_lobby","Lobby","lobby_classCallCheck","lobby_possibleConstructorReturn","open_default","open","play_default","signUp","SignUp","signUp_classCallCheck","signUp_possibleConstructorReturn","confirm","agreement","handleSignUp","createUserWithEmailAndPassword","updateUserInfo","updateProfile","src_App","App","src_classCallCheck","src_possibleConstructorReturn","getState","update","stopLoading","unSubscribe","subscribe","HashRouter","Route","exact","render","_extends","react_dom_default","document","getElementById"],"mappings":"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","file":"main.56bb.js","sourcesContent":["module.exports = __webpack_public_path__ + \"a9a323fd5ae656a5e7131b60e27fe204.svg\";","module.exports = __webpack_public_path__ + \"67ce7d5a833d9fc83f623c431a6760ce.svg\";","module.exports = __webpack_public_path__ + \"7df62acafa694b8c1a4a0528fb6546cc.svg\";","module.exports = __webpack_public_path__ + \"f576168014a0a063e9a9067746d52afe.svg\";","module.exports = __webpack_public_path__ + \"faf9092c22feba281cd0b857153cf2ac.svg\";","module.exports = __webpack_public_path__ + \"d192d5a8c77493a9b9a15e4bad4856b1.svg\";","module.exports = __webpack_public_path__ + \"abc73620aa65da15acbe08e163313e69.svg\";","module.exports = __webpack_public_path__ + \"7b537845db343dc95978342656f3dc31.svg\";","module.exports = __webpack_public_path__ + \"2d2ff47c522a67f3797a22229173805c.svg\";","module.exports = __webpack_public_path__ + \"d6a663b6ce16afbdddedd183bfc0b95a.svg\";","module.exports = __webpack_public_path__ + \"698ae12ca4406b41dd2c2b5f4188f232.svg\";","module.exports = __webpack_public_path__ + \"11177e33f8a5453cc4a2af006bf9f0cc.svg\";","module.exports = __webpack_public_path__ + \"7eeb4128a906d97fc444f2ec6f7f2a1e.svg\";","module.exports = __webpack_public_path__ + \"2b61df562f9ceba376a217086ea0a4b8.svg\";","module.exports = __webpack_public_path__ + \"7613d518f4a31149fa31d1ef8fa9c9c8.svg\";","module.exports = __webpack_public_path__ + \"ab790a27815c6aedaebbd55078126d7a.svg\";","module.exports = __webpack_public_path__ + \"8046cef8ebd3096cc0a092095a911f45.svg\";","module.exports = __webpack_public_path__ + \"374c11fb9598eacab7db87323f15d7d7.svg\";","module.exports = __webpack_public_path__ + \"eec13f2e2f2341c89b52487b6c6f5531.svg\";","module.exports = __webpack_public_path__ + \"9da5b3a25ce2afe1ff9a69a9a480b099.svg\";","module.exports = __webpack_public_path__ + \"7b799210bff006a8a7cdc13de038aa1c.svg\";","module.exports = __webpack_public_path__ + \"fa7e619e21d79bd64b2932efa099a21a.svg\";","module.exports = __webpack_public_path__ + \"29fd5a207752c8fb18bdeffe7c7f8c24.svg\";","module.exports = __webpack_public_path__ + \"addf317cff816fe4d291212403763c59.svg\";","module.exports = __webpack_public_path__ + \"85cd94bb43adfe2943685ae19c1ae96e.svg\";","module.exports = __webpack_public_path__ + \"86e690f3ad2e18fae51f04c2e64f688d.svg\";","module.exports = __webpack_public_path__ + \"8ca025b877e870030ea3af1681978e68.svg\";","import firebase from \"firebase\";\nimport {config} from \"./config.js\";\n\nexport const firebaseApp = firebase.initializeApp(config);\n\nexport const app = {\n  db: firebaseApp.database(),\n  auth: firebaseApp.auth(),\n  onAuthChanged: callback => {\n    firebaseApp.auth().onAuthStateChanged(user => {\n      if (user) {\n        callback(user);\n      } else {\n        console.log(\"no one login\");\n      }\n    });\n  },\n  getNodeByPathOnce: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .on(\"value\", action);\n  },\n  getNodeByPath: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .on(\"value\", action);\n  },\n  pushDataByPath: (path, data) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .push(data);\n  },\n  cancelListenDataChange: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .off(\"value\", action);\n  },\n  listenPathChildren: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .off(\"value\");\n  },\n  setNodeByPath: (path, data) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .set(data);\n  },\n  getDataByPathOnce: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .once(\"value\", action);\n  },\n  getNewChildKey: node => {\n    return firebaseApp\n      .database()\n      .ref()\n      .child(node)\n      .push().key;\n  },\n  updateTableDataByID: (id, data) => {\n    firebaseApp\n      .database()\n      .ref(`tables/${id}/`)\n      .set(data);\n  },\n  updateTableGameDataByPath: (path, game) => {\n    firebaseApp\n      .database()\n      .ref(\"tables/\" + path)\n      .set(game);\n  },\n  setTableListData: (id, data) => {\n    firebaseApp\n      .database()\n      .ref(`tableList/${id}/`)\n      .set(data);\n  }\n};\n","export const config = {\n  apiKey: \"AIzaSyDsmWxFexrd890dUvpA313qvxvcjDRp1Ok\",\n  authDomain: \"wowbridge88.firebaseapp.com\",\n  databaseURL: \"https://wowbridge88.firebaseio.com\",\n  projectId: \"wowbridge88\",\n  storageBucket: \"wowbridge88.appspot.com\",\n  messagingSenderId: \"862342003288\"\n};\n","export const getKeywordFromURL = () => {\n  let urlLocation = window.location.search,\n    index = urlLocation.search(/=/g);\n  if (!urlLocation) return \"\";\n  return urlLocation.slice(index + 1, urlLocation.length);\n};\n\nexport const getKeywordObjFromURL = () => {\n  let keyword = getKeywordFromURL();\n  let urlLocation = window.location.search,\n    index = urlLocation.search(/=/g);\n  return {\n    key: urlLocation.slice(1, index),\n    value: getKeywordFromURL()\n  };\n};\n\nexport const getRandomKey = (n = 8) => {\n  let letter = \"abcdefghijklmnopqrstuvxyzABCDEFGHIJKLMNOPQRSTUVXYZ\";\n  return Array.from({length: n})\n    .fill(0)\n    .map(w => letter[Math.floor(Math.random() * (letter.length - 1))])\n    .join(\"\");\n};\n\nexport const getObj = (key, value) => {\n  let newObj = {};\n  newObj[key] = value;\n  return Object.assign({}, newObj);\n};\n\nexport const getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getObjSortKey = obj => {\n  if (!obj) {\n    return null;\n  }\n  return Object.keys(obj).sort((a, b) => a < b);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet redColor = \"#FF525D\";\nlet blackColor = \"#222222\";\n\nexport const Heart = ({scale, fill = \"#FF525D\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={0.89} fill={fill}>\n      <path d=\"M70.9643211,0 C59.2565148,0 53.056072,5.64335169 49.9709368,10.1546618 C46.889795,5.64335169 40.6986702,0 29.0152682,0 C15.0405332,0 0,9.29808951 0,29.7129874 C0,37.7588224 1.74734105,44.1438566 5.84192287,51.0638602 C9.82779506,57.7993304 18.2685439,66.1002296 30.9298889,75.7372219 C35.8715185,79.4984213 40.4235682,82.6625486 43.3724836,84.6547112 C49.0391399,88.4833363 49.2609963,88.5228158 49.9456452,88.5232594 C49.9802548,88.5241466 50.0135332,88.5245902 50.0468117,88.5245902 C50.6941887,88.5245902 51.1401201,88.3183208 56.5574098,84.6764471 C59.5081,82.6922691 64.0641431,79.5401188 69.0102098,75.7873476 C81.6870849,66.1698733 90.1513504,57.851674 94.1682825,51.0643038 C98.2557649,44.1571643 100,37.7712429 100,29.713431 C100,9.29808951 84.9488177,0 70.9643211,0 Z\" />\n    </SvgContainer>\n  );\n};\n\nexport const Spade = ({scale, fill = \"#222\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={1} fill={fill}>\n      <path\n        d=\"M88.5085925,35.4545714 C84.7618726,29.0791639 76.8279859,21.2225289 64.9275728,12.1017285 C60.2811897,8.54098888 56.0030971,5.54662558 53.2315338,3.66150342 C47.8489868,0 47.6921609,0 47.0310732,0 C46.3716539,0 46.2152451,0 40.8347835,3.64219036 C38.0615518,5.52017509 33.7788713,8.50362231 29.1295686,12.0555451 C17.2145573,21.1574523 9.25814768,29.0300415 5.48264861,35.4541516 C1.63958096,41.9928804 0,48.0361874 0,55.6623252 C0,74.9846174 14.1481113,83.785073 27.2935382,83.785073 C33.059808,83.785073 37.4025496,82.3177007 40.6500126,80.3074635 L37.0551136,94 L56.8014075,94 L53.1693874,80.1668141 C56.4343682,82.2488454 60.8367536,83.785073 66.7252308,83.785073 C79.8614817,83.785073 94,74.9846174 94,55.6623252 C94,48.0475233 92.3579165,42.0042164 88.5085925,35.4545714 Z\"\n        fill={fill}\n      />\n    </SvgContainer>\n  );\n};\n\nexport const Diamond = ({scale, fill = \"#FF525D\"}) => {\n  let w = 93,\n    h = 100;\n  return (\n    <SvgContainer scale={scale} ratio={1} fill={fill}>\n      <polygon\n        points={`${w / 2} 0 0 ${h / 2} ${w / 2} ${h} ${w} ${h / 2}`}\n      />\n    </SvgContainer>\n  );\n};\n\nexport const Club = ({scale, fill = \"#222\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={0.98} fill={fill}>\n      <path\n        d=\"M70.3555185,31.9345189 C71.174537,29.4903991 71.587963,26.9404062 71.587963,24.3163882 C71.587963,10.9083748 60.5577593,0 47,0 C33.4422407,0 22.412037,10.9083748 22.412037,24.3163882 C22.412037,26.9404062 22.825463,29.4903991 23.6444815,31.9345189 C10.5223426,32.426872 0,43.137703 0,56.2332616 C0,69.641275 11.0302037,80.5496498 24.587963,80.5496498 C30.872037,80.5496498 36.6116944,78.2040867 40.9631111,74.3539201 L35.6686481,92.1010101 L58.1820833,92.1010101 L52.8323519,74.1692877 C57.2077037,78.12834 63.0287407,80.5496498 69.412037,80.5496498 C82.9697963,80.5496498 94,69.641275 94,56.2332616 C94,43.137703 83.4776574,32.426872 70.3555185,31.9345189 Z\"\n        fill={fill}\n      />\n    </SvgContainer>\n  );\n};\n\nconst SvgContainer = ({children, ratio, scale, fill}) => {\n  let width = scale * 100,\n    height = Math.floor(width * ratio);\n  return (\n    <div>\n      <svg\n        width={`${width}px`}\n        height={`${height}px`}\n        viewBox={`0 0 ${width} ${height}`}>\n        <g fill={fill} transform={`scale(${scale})`}>\n          {children}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {Heart, Spade, Diamond, Club} from \"./shape/shape.js\";\nexport const CARD_NUM = {\n  TOTAL: 52,\n  SUITS: 4,\n  HAND: 13\n};\n\nexport const TIMER = {\n  join: 15000,\n\n}\nexport const ROBOT_NAME = \"-robot\" ;\n\nexport const RESULT = {\n  win: \"YOU WIN\",\n  lose: \"YOU LOSE\"\n};\n\nexport const PLAYER_NUM = 4;\nexport const EMPTY_SEAT = -1;\nexport const NO_TRUMP = 4;\nexport const BID_NUM = [1, 2, 3, 4, 5, 6, 7];\n\nexport const SUIT_SHAPE = {\n  0: (scale, fill) => <Club scale={scale} fill={fill} />,\n  1: (scale, fill) => <Diamond scale={scale} fill={fill} />,\n  2: (scale, fill) => <Heart scale={scale} fill={fill} />,\n  3: (scale, fill) => <Spade scale={scale} fill={fill} />,\n  4: scale => <div>NT</div>\n};\n\nexport const CARD_RANK = [2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"A\"];\n\nexport const DEFAULT_GAME = {\n  deal: 0,\n  bid: {\n    isDb: false,\n    isRdb: false,\n    trick: 0,\n    trump: -1\n  },\n  order: -1,\n  isGameOver: false\n};\n\nexport const PLAYERS = [EMPTY_SEAT, EMPTY_SEAT, EMPTY_SEAT, EMPTY_SEAT];\nexport const GAME_STATE = {\n  join: \"join\",\n  auction: \"auction\",\n  playing: \"playing\",\n  gameover: \"gameover\",\n  close: \"close\"\n};\n\nexport const TAB_OPTION = [\"Chat\", \"Result\"];\n\nexport const DIRECTION = [\"south\", \"west\", \"north\", \"east\"];\n\nexport const Emoji = [\n  \"🤔\",\n  \"🤣\",\n  \"🤩\",\n  \"😝\",\n  \"😍\",\n  \"😵\",\n  \"🙄\",\n  \"🤭\",\n  \"😱\",\n  \"🤷\",\n  \"👍\",\n  \"👎\",\n  \"👯\",\n  \"👀\",\n  \"🐷\",\n  \"🎉\",\n  \"🎃\",\n  \"🍺\",\n  \"🔥\",\n  \"🛁\"\n];\n","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {app, firebaseApp} from \"../firebase/firebase.js\";\nimport {getObj} from \"../helper/helper.js\";\nimport {\n  GAME_STATE,\n  EMPTY_SEAT,\n  DEFAULT_GAME,\n  PLAYERS\n} from \"../components/constant.js\";\n\nexport const dispatch = (type, action) =>\n  store.dispatch(Object.assign({}, {type: type}, action));\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_USER_INFO\": {\n      return Object.assign({}, state, {\n        user: action.user,\n        uid: action.uid,\n        userInfo: action.userInfo\n      });\n    }\n    case \"UPDATE_USER_LIST\": {\n      return Object.assign({}, state, {\n        userList: action.userList\n      });\n    }\n    case \"UPDATE_LOADING_STATE\": {\n      return Object.assign({}, state, {isLoad: action.isLoad});\n    }\n    case \"FETCH_TABLE_DATA\": {\n      // tables is an array, query table by index\n      return Object.assign({}, state, {tables: action.tables});\n    }\n    case \"UPDATE_CHAT_ROOM\": {\n      return Object.assign({}, state, {chatroom: action.chatroom});\n    }\n    case \"UPDATE_TABLE_DATA\": {\n      let {id, table} = action;\n      let tables = state.tables;\n      let updatedTables = Object.assign({}, tables);\n      updatedTables[id] = table;\n      return Object.assign({}, state, {tables: updatedTables});\n    }\n    case \"UPDATE_CURRENT_TABLE_ID\": {\n      return Object.assign({}, state, {\n        currentTableId: action.currentTableId\n      });\n    }\n    case \"FETCH_TABLE_LIST\": {\n      // tables is an array, query table by index\n      return Object.assign({}, state, {tableList: action.tableList});\n    }\n    default:\n      return state;\n  }\n};\n\nexport const dispatchToDatabase = (type, action) => {\n  switch (type) {\n    case \"CREATE_USER\": {\n      app.setNodeByPath(`/users/${action.uid}`, action.userInfo);\n      break;\n    }\n\n    case \"CREATE_TABLE\": {\n      let {currentUser} = action;\n      if (!action.currentUser.uid) {\n        console.log(\"user is not login\");\n        return;\n      }\n      let timeStamp = new Date().getTime();\n      let players = PLAYERS.slice(0);\n      let newPlayerInfo = {};\n      let uidKey = `${currentUser.uid}`;\n      newPlayerInfo[uidKey] = {displayName: currentUser.displayName};\n      players[0] = action.currentUser.uid;\n      let tableKey = app.getNewChildKey(\"tables\");\n      let linkId = action.tableRef || timeStamp;\n      let newTable = {\n        timeStamp: linkId,\n        createTime: linkId,\n        gameState: GAME_STATE.join,\n        id: tableKey,\n        linkId: linkId,\n        game: DEFAULT_GAME,\n        playerInfo: Object.assign(\n          {},\n          {\n            \"C1-robot\": {displayName: \"C1-robot\"},\n            \"C2-robot\": {displayName: \"C2-robot\"},\n            \"C3-robot\": {displayName: \"C3-robot\"},\n            \"-1\": {displayName: \"\"}\n          },\n          newPlayerInfo\n        ),\n        players: players,\n        ready: [false, false, false, false]\n      };\n      app.setNodeByPath(`tables/${tableKey}`, newTable);\n      app.setTableListData(linkId, {\n        id: tableKey,\n        isOpen: true,\n        players: players,\n        playerInfo: Object.assign(\n          {},\n          {\n            \"C1-robot\": {displayName: \"C1-robot\"},\n            \"C2-robot\": {displayName: \"C2-robot\"},\n            \"C3-robot\": {displayName: \"C3-robot\"},\n            \"-1\": {displayName: \"\"}\n          },\n          newPlayerInfo\n        )\n      });\n      break;\n    }\n\n    case \"CREATE_NEW_GAME\": {\n      let {table} = action;\n      let tableData = Object.assign({}, table);\n      let {record, game} = tableData;\n      if (record) {\n        record.push(game);\n      } else {\n        record = [game];\n      }\n      // reset table\n      let timeStamp = new Date().getTime();\n      tableData.record = record;\n      tableData.createTime = timeStamp;\n      tableData.game = Object.assign({}, DEFAULT_GAME);\n      tableData.ready = [false, false, false, false];\n      tableData.timeStamp = timeStamp;\n      tableData.gameState = GAME_STATE.join;\n      app.setNodeByPath(`tables/${tableData.id}`, tableData);\n      break;\n    }\n    case \"READY_A_PLAYER\": {\n      let {table, playerIndex} = action;\n      let updateTable = Object.assign({}, table);\n      updateTable.ready[playerIndex] = true;\n\n\n      // batch update table, for client side usage\n      if (updateTable.ready.every(state => state === true)) {\n        updateTable.gameState = GAME_STATE.auction;\n      }\n\n      app.setNodeByPath(`tables/${table.id}`, updateTable);\n      break;\n    }\n    case \"UPDATE_TABLE_TIMESTAMP\": {\n      app.setNodeByPath(\n        `tables/${action.id}/timeStamp/`,\n        new Date().getTime()\n      );\n      break;\n    }\n    case \"ADD_NEW_DECK_TO_TABLE\": {\n      // todo, use high order function to wrap this\n      // create a game\n      let {cards, table} = action;\n      let newGame = Object.assign({}, table.game, {\n        cards: cards\n      });\n      app.updateTableDataByID(`${table.id}/game/`, newGame);\n      break;\n    }\n    case \"UPDATE_WINNER_CARD\": {\n      // todo, use high order function to wrap this\n      let {table} = action;\n      let game = Object.assign({}, table.game);\n\n      let cards = game.cards;\n      game.order = action.order;\n\n      // update which player will draw first\n      let targetCardIndex = cards.findIndex(\n        card => card.value === action.winnerCard.value\n      );\n      let winner = action.winnerCard;\n      winner.isWin = true;\n      game.deal = winner.player;\n      cards[targetCardIndex] = winner;\n      // 51 means the index in the card array , the n-52 cards is given\n      if (action.order === 51) {\n        game.isGameOver = true;\n      }\n      app.updateTableDataByID(`${table.id}/game/`, game);\n      break;\n    }\n    case \"UPDATE_CURRENT_TRICK\": {\n      // update this is how many trick players have been draw\n\n      let {table, order, deal} = action;\n      let {game} = table;\n      app.updateTableGameDataByPath(`${table.id}/game/order/`, order);\n\n      let cards = game.cards;\n\n      let targetCardInex = cards.findIndex(\n        card => card.value === action.value\n      );\n\n      let currentCard = cards[targetCardInex];\n      currentCard.order = order;\n\n      // update deal order, who can draw card next\n      app.updateTableGameDataByPath(`${table.id}/game/deal/`, deal);\n      app.updateTableGameDataByPath(\n        `${table.id}/timeStamp/`,\n        new Date().getTime()\n      );\n\n      // this card has been draw in nth trick\n      // set current trick number to this card\n      if (currentCard.trick === 0) {\n        // update trick to current nth trick, e.g. players have play 4 tricks\n        // so far, the maxTrick will be 5\n        currentCard.trick = action.maxTrick;\n        // record who has this card\n        currentCard.player = (deal + 4 - 1) % 4;\n\n        app.updateTableGameDataByPath(\n          `${table.id}/game/cards/${targetCardInex}`,\n          currentCard\n        );\n      }\n      break;\n    }\n    case \"ADD_VIEWER_TO_TABLE\": {\n      let {currentUser, table, color} = action;\n      let {linkId, id} = table;\n      app.setNodeByPath(`tables/${id}/viewers/${currentUser.uid}`, color);\n      app.updateTableGameDataByPath(\n        `${id}/timeStamp/`,\n        new Date().getTime()\n      );\n      // if anyone join this table, update data to table list\n      break;\n    }\n    case \"ADD_PLAYER_TO_TABLE\": {\n      let {currentUser, table, emptySeatIndex, color} = action;\n      let {linkId, id, players} = table;\n\n      app.setNodeByPath(\n        `tables/${id}/players/${emptySeatIndex}`,\n        currentUser.uid\n      );\n      app.setNodeByPath(`tables/${id}/playerInfo/${currentUser.uid}`, {\n        displayName: currentUser.displayName\n      });\n      app.setNodeByPath(`tables/${id}/viewers/${currentUser.uid}`, color);\n      // if anyone join this table, update data to table list\n      let updatePlayers = players.slice(0);\n      updatePlayers[emptySeatIndex] = currentUser.uid;\n      app.setNodeByPath(`tableList/${linkId}/players`, updatePlayers);\n      app.setNodeByPath(\n        `tableList/${linkId}/playerInfo/${currentUser.uid}`,\n        {displayName: currentUser.displayName}\n      );\n      app.updateTableGameDataByPath(\n        `${id}/timeStamp/`,\n        new Date().getTime()\n      );\n\n      break;\n    }\n    case \"UPDATE_AUCTION\": {\n      // in order to detect if some user isn't online anymore\n      // record current to database when a current user is deal\n      app.updateTableGameDataByPath(\n        `${action.table.id}/game/`,\n        action.game\n      );\n      app.updateTableGameDataByPath(\n        `${action.table.id}/timeStamp/`,\n        new Date().getTime()\n      );\n      break;\n    }\n    case \"SEND_MESSAGE_TO_CHATROOM\": {\n      let {message, currentUser, table} = action;\n      let time = new Date().getTime();\n      let newMessage = {};\n      newMessage.isPlayer = table.players.some(\n        player => player === currentUser.uid\n      );\n      newMessage.content = action.message;\n      newMessage.uid = currentUser.uid;\n      newMessage.displayName = currentUser.displayName;\n      app.setNodeByPath(\n        `chatroom/${table.id}/message/${time}/`,\n        newMessage\n      );\n    }\n    default:\n      return null;\n  }\n};\n\n// app.getNodeByPathOnce(\"tables\", value => {\n//   return dispatch(\"FETCH_TABLE_DATA\", {tables: value.val()});\n// });\n\napp.getNodeByPath(\"tableList\", value => {\n  return dispatch(\"FETCH_TABLE_LIST\", {tableList: value.val()});\n});\n\napp.getNodeByPath(\"users\", value => {\n  return dispatch(\"UPDATE_USER_LIST\", {userList: value.val()});\n});\n\nexport const store = createStore(\n  appReducer,\n  {\n    currentUser: null,\n    isLoad: false,\n    tables: {},\n    currentTableId: null,\n    closeTables: {}\n  },\n  applyMiddleware(thunk)\n);\n\napp.auth.onAuthStateChanged(user => {\n  if (user) {\n    dispatch(\"UPDATE_LOADING_STATE\", {isLoad: true});\n    app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n      let userInfo = snapshot.val();\n      dispatch(\"UPDATE_USER_INFO\", {\n        user: user,\n        uid: user.uid,\n        userInfo: snapshot.val()\n      });\n    });\n    // }\n  } else {\n    return dispatch(\"UPDATE_USER_INFO\", {\n      uid: null,\n      userInfo: null,\n      user: null\n    });\n  }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/thumbnail.scss\";\nimport {ROBOT_NAME} from \"./constant.js\";\n// import ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport avatar0 from \"../images/avatar/0.svg\";\nimport avatar1 from \"../images/avatar/1.svg\";\nimport avatar2 from \"../images/avatar/2.svg\";\nimport avatar3 from \"../images/avatar/3.svg\";\nimport avatar4 from \"../images/avatar/4.svg\";\nimport avatar5 from \"../images/avatar/5.svg\";\nimport avatar6 from \"../images/avatar/6.svg\";\nimport avatar7 from \"../images/avatar/7.svg\";\nimport avatar8 from \"../images/avatar/8.svg\";\nimport avatar9 from \"../images/avatar/9.svg\";\nimport avatar10 from \"../images/avatar/10.svg\";\nimport avatar11 from \"../images/avatar/11.svg\";\nimport avatar12 from \"../images/avatar/12.svg\";\nimport avatar13 from \"../images/avatar/13.svg\";\nimport avatar14 from \"../images/avatar/14.svg\";\nimport avatar15 from \"../images/avatar/15.svg\";\nimport avatar16 from \"../images/avatar/16.svg\";\nimport avatar17 from \"../images/avatar/17.svg\";\nimport avatar18 from \"../images/avatar/18.svg\";\nimport avatar19 from \"../images/avatar/19.svg\";\nimport avatar20 from \"../images/avatar/20.svg\";\nimport avatar21 from \"../images/avatar/21.svg\";\nimport robot from \"../images/avatar/robot.svg\";\nimport avatarSlot from \"../images/avatar/avatar_slot.svg\";\n\nconst Avatar = {\n  0: avatar0,\n  1: avatar1,\n  2: avatar2,\n  3: avatar3,\n  4: avatar4,\n  5: avatar5,\n  6: avatar6,\n  7: avatar7,\n  8: avatar8,\n  9: avatar9,\n  10: avatar10,\n  11: avatar11,\n  12: avatar12,\n  13: avatar13,\n  14: avatar14,\n  15: avatar15,\n  16: avatar16,\n  17: avatar17,\n  18: avatar18,\n  19: avatar19,\n  20: avatar20\n};\n\nconst avatarNum = Object.keys(Avatar).length;\nexport const Thumbnail = ({\n  name = \"\",\n  size = 40,\n  disabled = false,\n  offset = 16,\n  border = false,\n  isCurrentUser = false,\n  styleName = null,\n  robotMargin = 0,\n  robotOffset = -5\n}) => {\n  let shiftAvatar = avatarNum;\n  if (name.length) {\n    shiftAvatar =\n            name\n              .split(\"\")\n              .map(str => str.charCodeAt(str) || +str)\n              .reduce((sum, num) => sum + num, 0) % avatarNum;\n  }\n  let source = Avatar[shiftAvatar];\n  if (name.includes(ROBOT_NAME)) {\n    source = robot;\n  }\n  return (\n    <div\n      className={`thumbnail disabled ${styleName}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size\n      }}>\n      <div\n        className={\n          border\n            ? \"thumbnail-inner thumbnail-outline\"\n            : \"thumbnail-inner\"\n        }>\n        <div className=\"border-style\">\n          <img\n            className={disabled ? \"disabled\" : \"\"}\n            style={{marginTop: robotMargin}}\n            width={\n              border\n                ? size - offset + 5 + robotOffset\n                : size - offset + robotOffset\n            }\n            src={source}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const ThumbnailWithTag = ({\n  name = \"\",\n  size = 40,\n  disabled = false,\n  offset = 16,\n  border = false,\n  isCurrentUser = false,\n  styleName = null\n}) => {\n  return (\n    <div className=\"thumbnail-with-tag\">\n      <div className=\"tag\" />\n      <Thumbnail\n        name={name}\n        size={size}\n        disabled={disabled}\n        offset={offset}\n        border={border}\n        isCurrentUser={isCurrentUser}\n        styleName={styleName}\n      />\n    </div>\n  );\n};\n\nexport const ThumbailGroup = ({players, size, teamOrder}) => {\n  let team = players.filter((player, index) => index % 2 === teamOrder);\n  let members = team.map((player, index) => (\n    <Thumbnail key={`member-${index}`} name={player} size={size} />\n  ));\n  return <div className=\"thumbnail-group\">{members}</div>;\n};\n\nexport const ThumbailGroupWithTag = ({\n  players,\n  currentUser,\n  size,\n  styleObj,\n  teamOrder,\n  styleOb,\n  offset\n}) => {\n  let team = players.filter((player, index) => index % 2 === teamOrder);\n  let members = team.map((player, index) => {\n    if (player === currentUser.displayName) {\n      return (\n        <ThumbnailWithTag\n          key={`member-${index}`}\n          offset={offset}\n          name={player}\n          size={size}\n        />\n      );\n    } else {\n      return (\n        <Thumbnail\n          offset={offset}\n          key={`member-${index}`}\n          name={player}\n          size={size}\n        />\n      );\n    }\n  });\n  return (\n    <div className=\"thumbnail-group\" style={styleObj}>\n      {members}\n    </div>\n  );\n};\n\nexport class WaitingThumbnail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posY: Math.floor(Math.random() * 40),\n      position: 0,\n      stop: false,\n      isGoingUp: true,\n      name: \"enter\"\n    };\n    this.changeImg = this.changeImg.bind(this);\n    this.timer = setInterval(this.changeImg, 20);\n  }\n  componentDidMount() {\n    this.mount = true;\n  }\n  componentWillUnmount() {\n    this.mount = false;\n  }\n  changeImg() {\n    if (!this.mount) return;\n    let {posY} = this.state;\n    if (this.state.posY > 50) {\n      this.setState({isGoingUp: false});\n    } else if (this.state.posY < -50) {\n      this.setState({isGoingUp: true});\n    }\n    let dy;\n    if (this.state.isGoingUp) {\n      dy = Math.floor(Math.random() * 2);\n    } else if (this.state.isGoingUp === false) {\n      dy = Math.floor(Math.random() * -3);\n    }\n\n    this.setState({posY: posY + dy});\n  }\n  componentDidUpdate(prevProps) {\n    if (!this.mount) return;\n    if (this.props.stop !== prevProps.stop && this.props.stop === true) {\n      this.setState({stop: true, posY: 40});\n      clearInterval(this.timer);\n    }\n  }\n  render() {\n    let size = this.props.size || 30;\n    let disabled = this.props.disabled || false;\n    let pos = this.state.position;\n    let name = disabled ? `disabled ${this.state.name}` : this.state.name;\n    let img = (\n      <img\n        className={name}\n        style={{\n          transform: `translateY(${this.state.posY}%) scale(1.07)`\n        }}\n        width={size - 16}\n        src={avatarSlot}\n      />\n    );\n    return (\n      <div\n        className=\"waiting-thumbnail disabled\"\n        style={{\n          width: size,\n          height: size,\n          borderRadius: size\n        }}>\n        {img}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {ThumbnailWithTag} from \"./thumbnail.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport {Link} from \"react-router-dom\";\nimport {dispatch} from \"../reducer/reducer.js\";\nimport \"../style/user-state.scss\";\n\nexport default class UserState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.closePanel = this.closePanel.bind(this);\n  }\n  handleSignOut() {\n    this.closePanel();\n    app.auth.signOut();\n  }\n  closePanel() {\n    this.setState({isOpen: false});\n  }\n  render() {\n    let {currentUser} = this.props;\n    return (\n      <div className=\"user-state-panel\">\n        <div\n          className={\n            this.state.isOpen\n              ? \"Login-state-btn open-btn\"\n              : \"Login-state-btn\"\n          }\n          onClick={() => this.setState({isOpen: !this.state.isOpen})}>\n          <ThumbnailWithTag\n            isCurrentUser={true}\n            size={40}\n            offset={5}\n            name={(currentUser && currentUser.displayName) || \"\"}\n          />\n          <div>\n            <h6>{currentUser.displayName}</h6>\n            <span>線上</span>\n          </div>\n        </div>\n        <div className={this.state.isOpen ? \"options open\" : \"options\"}>\n          <Link onClick={this.handleSignOut} to=\"/\">\n                登出\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport \"../style/header.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport logoImg from \"../images/logo.svg\";\nimport {dispatch} from \"../reducer/reducer.js\";\nimport UserState from \"./userState.js\";\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!this.props.currentUser) {\n      this.props.getUserAuthInfo().then(user => {\n        console.log(\"user login\");\n      });\n    }\n  }\n  render() {\n    let userProfile = <UserState currentUser={this.props.currentUser} />;\n    let rightTopCorner;\n    let registerBtns = (\n      <div className=\"register-btn-groups\">\n        <Link to=\"/signup\">註冊</Link>\n        <Link to=\"/login\">登入</Link>\n      </div>\n    );\n    rightTopCorner =\n            this.props.currentUser && this.props.currentUser.uid\n              ? userProfile\n              : registerBtns;\n    let {roomNum} = this.props;\n    let roomInfo = null;\n    if (roomNum) {\n      roomNum = `${roomNum}`;\n      roomInfo =\n                \"桌號 \" + roomNum.slice(roomNum.length - 3, roomNum.length);\n    }\n    return (\n      <header className={this.props.isTableColor ? \"table-header\" : \"\"}>\n        <div>\n          <Link to=\"/\">\n            <img src={logoImg} />\n            <h1>Wow Bridge</h1>\n          </Link>\n        </div>\n        <div>\n          <h3>{roomInfo}</h3>\n        </div>\n        <div>\n          <div>{rightTopCorner}</div>\n        </div>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport {dispatch, store} from \"../reducer/reducer.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/signup.scss\";\nimport \"../style/btn.scss\";\nimport \"../style/checkbox.scss\";\nimport Header from \"./header.js\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      redirect: false\n    };\n    this.redirectToLobbyIfLogin();\n    this.redirectToLobbyIfLogin = this.redirectToLobbyIfLogin.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n  componentDidMount() {\n    this.isMount = true;\n  }\n  componentWillUnmountMount() {\n    this.isMount = false;\n  }\n  redirectToLobbyIfLogin() {\n    // todo\n    let promise = new Promise((resolve, reject) => {\n      app.onAuthChanged(user => {\n        if (user && this.isMount) {\n          resolve(user);\n          this.setState({redirect: true});\n        } else {\n          throw new Error(\"cancel redirect behavior\");\n        }\n      });\n    }).catch(error => console.log(error.message));\n  }\n  handleLogin() {\n    let auth = app.auth;\n    let {email, password} = this.state;\n    if (!email || !password) return;\n    let promise = auth.signInWithEmailAndPassword(email, password);\n    promise\n      .then(user => this.setState({redirect: true}))\n      .catch(err => this.setState({error: err.message}));\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"singup-wrapper\">\n          <div className=\"signup login\">\n            <h2>登入</h2>\n            <div>\n              <h3>電子信箱</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Email address\"\n                onChange={e => {\n                  this.setState({\n                    email: e.currentTarget.value\n                  });\n                }}\n                value={this.state.email}\n              />\n            </div>\n            <div>\n              <h3>密碼</h3>\n              <input\n                placeholder=\"Enter password\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    password: e.currentTarget.value\n                  });\n                }}\n                value={this.state.password}\n              />\n            </div>\n            <div className=\"error-text\">\n              {this.state.error || \"\"}\n            </div>\n            <div>\n              <div className=\"btn-group\">\n                <button\n                  onClick={this.handleLogin}\n                  className=\"btn-style-round\">\n                                    登入\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"./constant.js\";\nimport \"../style/reset.scss\";\nimport \"../style/card.scss\";\n\nexport const TrickCard = ({value}) => {\n  return (\n    <div className=\"abbbbbbbbbbbbb\">\n      <Card flipUp={true} value={value} />\n    </div>\n  );\n};\n\nexport const Card = ({value, evt = null, flipUp, name = null}) => {\n  let kind = Math.floor(value / CARD_NUM.HAND);\n  let wrapperName = name ? `card-wrapper ${name}` : \"card-wrapper\";\n  if (flipUp) {\n    return (\n      <div\n        className={wrapperName}\n        onClick={() => {\n          if (evt) {\n            evt(value);\n          }\n        }}>\n        <div className=\"card flip-up\">\n          <div className=\"card-inner\">\n            <div\n              className={\n                kind === 1 || kind === 2\n                  ? \"red value\"\n                  : \"black value\"\n              }>\n              {CARD_RANK[value % CARD_NUM.HAND]}\n            </div>\n            {SUIT_SHAPE[kind](0.235)}\n            <div className=\"large-shape\">\n              {SUIT_SHAPE[kind](0.5)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={wrapperName}>\n        <div className=\"card flip-down\">\n          <div className=\"card-inner\" />\n        </div>\n      </div>\n    );\n  }\n};\n","export const getCurrentMaxTrick = cards => {\n  if (!cards) return null;\n  return Math.max(...cards.map(card => card.trick));\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {Card, TrickCard} from \"./card.js\";\nimport {getCurrentMaxTrick} from \"./getCurrentMaxTrick.js\";\nimport \"../style/game.scss\";\n\nexport default class Trick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeOutCards: false\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.order !== prevProps.order) {\n      if (this.props.order % 4 === 3) {\n        setTimeout(() => this.setState({fadeOutCards: true}), 2000);\n      } else {\n        this.setState({fadeOutCards: false});\n      }\n    }\n  }\n  render() {\n    let direction = [\"south-card\", \"west-card\", \"north-card\", \"east-card\"];\n    let {order, cards, cardsByPlayer, isTrickFinish} = this.props;\n    if (!cards) {\n      return null;\n    }\n\n    let currentTrick = null,\n      maxTrick = getCurrentMaxTrick(cards);\n\n    // cause maxTrick will increase if there are already four cards\n    if (maxTrick === 0) {\n      maxTrick = 1;\n    }\n\n    // show cards sequence by player order\n    if (cardsByPlayer && !this.state.fadeOutCards) {\n      // sorting tricks by player index, and filter cards by max trick\n      currentTrick = cardsByPlayer.map((hand, index) => {\n        hand = hand.sort((cardA, cardB) => cardA.value - cardB.value);\n        let trickCards = hand.map( (userHand, i) => {\n          if (userHand.trick === maxTrick) {\n            return (\n              <TrickCard\n                key={`trick-card-x-index-${index}-${i}-${userHand.trick}`}\n                value={userHand.value}\n              />\n            );\n          }\n        });\n\n        let hasTrickCards =\n                    trickCards.filter(\n                      card => card !== null && card !== undefined\n                    ).length > 0;\n        if (hasTrickCards) {\n          return (\n            <div\n              className={`trick-card-wrapper ${direction[index]}`}\n              key={`trick-card-${index}`}>\n              {trickCards}\n            </div>\n          );\n        } else {\n          return null;\n        }\n      });\n    }\n\n    if (currentTrick) {\n      currentTrick = currentTrick.filter(\n        card => card !== null && card !== undefined\n      );\n    }\n\n    return (\n      <div className={\"trick-area\"}>\n        <div className=\"trick-area-inner\">{currentTrick}</div>\n      </div>\n    );\n  }\n}\n","export const teamScore = cards => {\n  let teamA = 0,\n    teamB = 0;\n  cards.map((card, index) => {\n    let winningScore = card.isWin ? 1 : 0;\n    if ((index % 4) % 2 === 0) {\n      teamA += winningScore;\n    } else {\n      teamB += winningScore;\n    }\n  });\n  return {teamA: teamA, teamB: teamB};\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/trick-score.scss\";\nimport {teamScore} from \"./socre.js\";\nimport {\n  Thumbnail,\n  ThumbnailWithTag,\n  ThumbailGroupWithTag\n} from \"./thumbnail.js\";\n\nexport default class TrickScore extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {table, windowWidth, windowHeight, currentUser} = this.props;\n    let {game, players} = table;\n    if (!table || !table.game.cards) {\n      return null;\n    }\n    let {playerInfo} = table;\n    let score = teamScore(game.cards);\n    let playerList = players.map(key => playerInfo[key].displayName);\n    let innerStyle = this.props.innerStyle;\n    let resizeRatio = this.props.ratio || 0.15;\n    let thumbnailStyle = {\n      width: this.props.thumbnailSize,\n      height: this.props.thumbnailSize\n    };\n    let offset = 3;\n    let thumbnailSize = this.props.thumbnailSize * 1.2;\n    return (\n      <div\n        className={\n          this.props.name\n            ? `trick-score ${this.props.name}`\n            : \"trick-score\"\n        }\n        style={innerStyle}>\n        <div\n          className=\"trick-score-inner\"\n          style={{\n            width: windowWidth * resizeRatio\n          }}>\n          <div className=\"group-wrapper\">\n            <div className=\"group\">\n              <ThumbailGroupWithTag\n                styleObj={{\n                  minWidth: thumbnailSize * 2\n                }}\n                teamOrder={0}\n                players={playerList}\n                size={thumbnailSize}\n                offset={offset}\n                currentUser={currentUser}\n              />\n              <div className=\"score\">{score.teamA}</div>\n            </div>\n            <div className=\"group\">\n              <ThumbailGroupWithTag\n                styleObj={{\n                  minWidth: thumbnailSize * 2\n                }}\n                teamOrder={1}\n                players={playerList}\n                size={thumbnailSize}\n                offset={offset}\n                currentUser={currentUser}\n              />\n              <div className=\"score\">{score.teamB}</div>\n            </div>\n          </div>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport TrickScore from \"./trickScore.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {RESULT} from \"./constant.js\";\nimport \"../style/btn.scss\";\n\nexport default class ScoreBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recordGame = this.recordGame.bind(this);\n  }\n  recordGame() {\n    let {table} = this.props;\n    let {game} = table;\n    if (!table || game.order !== 51) {\n      return;\n    }\n\n    dispatchToDatabase(\"CREATE_NEW_GAME\", {\n      table: table\n    });\n  }\n  render() {\n    let {windowWidth, table, windowHeight, currentUser} = this.props;\n    let {game, players} = this.props.table;\n    if (!game || !game.cards) {\n      return null;\n    }\n    let scoreTeamOne = 0,\n      scoreTeamTwo = 0;\n    let playerIndex = players.indexOf(currentUser.uid);\n    let playerTeamScore = 0,\n      opponentScore = 0;\n    game.cards.map((card, index) => {\n      let winScore = card.isWin ? 1 : 0;\n      if (card.player % 2 === playerIndex % 2) {\n        playerTeamScore += winScore;\n      } else {\n        opponentScore += winScore;\n      }\n    });\n\n    let resultWords = null;\n    let {declarer, trick} = game.bid;\n\n    // trick start from 0, 0 means one trick... \n    let targetTrick = 6 + (trick + 1);\n    let isPlayerInDeclarerTeam = playerIndex % 2 === declarer % 2;\n    let isCurrentUserAPlayer = playerIndex >= 0;\n    let isUserWin = false;\n\n    if (isPlayerInDeclarerTeam && playerTeamScore >= targetTrick) {\n      resultWords = RESULT.win;\n      isUserWin = true;\n    } else if (isCurrentUserAPlayer) {\n      resultWords = RESULT.lose;\n    } else {\n      resultWords = \"\";\n    }\n\n    let resultAction = isCurrentUserAPlayer ? (\n      <button onClick={this.recordGame} className=\"btn\">\n                再來一局\n      </button>\n    ) : (\n      \"比賽結束\"\n    );\n\n    return (\n      <div\n        className={\n          isUserWin ? \"game-over-board win\" : \"game-over-board lose\"\n        }>\n        <TrickScore\n          currentUser={this.props.currentUser}\n          ratio={0.5}\n          thumbnailSize={46}\n          windowWidth={this.props.windowWidth}\n          widnowHeight={this.props.windowHeight}\n          table={this.props.table}>\n          <div className=\"game-over-board-inner\">\n            <div className=\"result\">\n              <div className=\"words\">{resultWords}</div>\n            </div>\n            <div className=\"btn-wrapper\">{resultAction}</div>\n          </div>\n        </TrickScore>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\n\nexport const AuctionList = ({result, scale}) => {\n  if (!result) {\n    return null;\n  }\n  let resultsNum = result.length;\n\n  return (\n    <div className=\"record\">\n      {Array.from({length: Math.ceil(resultsNum / 4)})\n        .fill(0)\n        .map((res, index) => (\n          <div key={getRandomKey()} className=\"row\">\n            {Array.from({length: 4})\n              .fill(0)\n              .map((re, j) => {\n                let resultItem = result[index * 4 + j];\n                if (resultItem && resultItem.opt) {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      {resultItem.opt}\n                    </div>\n                  );\n                } else if (\n                  resultItem &&\n                                    resultItem.trick >= 0\n                ) {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      <div>{resultItem.trick + 1}</div>\n                      {SUIT_SHAPE[resultItem.trump](\n                        scale,\n                      )}\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      {null}\n                    </div>\n                  );\n                }\n              })}\n          </div>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE, BID_NUM} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {AuctionList} from \"./auctionList.js\";\nimport {Thumbnail} from \"./thumbnail.js\";\nimport \"../style/auction.scss\";\n\nexport default class Auction extends React.Component {\n  constructor(props) {\n    super(props);\n    let {game} = this.props;\n    this.state = {\n      currentTrick: game.bid.trick,\n      visibility: false,\n      current: null\n    };\n    this.updateBid = this.updateBid.bind(this);\n    this.validateUserTurnAndsetTrump = this.validateUserTurnAndsetTrump.bind(\n      this\n    );\n  }\n  validateUserTurnAndsetTrump(index) {\n    // check if already current user's turn to give his bid\n    let {game, currentUser, players} = this.props;\n    if (!currentUser || !game) return;\n    if (players && currentUser) {\n      // if currentUser's Index is same as game deal, let him give bid\n\n      let currentUserIndex = players.findIndex(\n        player => player === this.props.currentUser.uid\n      );\n      if (currentUserIndex === game.deal) {\n        this.setState({\n          currentTrick: index,\n          current: index,\n          visibility: true\n        });\n      }\n    }\n  }\n  updateBid(trump, opt = null) {\n    let newBid,\n      isFinishAuction = false,\n      declarer = this.props.game.bid.declarer;\n\n    let result = this.props.game.bid.result || [];\n    if (trump > -1 && trump !== null) {\n      let bid = {\n        trick: this.state.currentTrick,\n        trump: trump\n      };\n      // udpate result\n      result.push(Object.assign({}, bid));\n\n      // update bid taker, when give a trump bid,\n      // record who is the last bid giver;\n      declarer = this.props.game.deal;\n\n      newBid = Object.assign(\n        {},\n        this.props.game.bid,\n        bid,\n        {declarer: declarer},\n        {result: result}\n      );\n    } else {\n      result.push({opt: opt});\n      // is game start\n      if (result.length >= 4) {\n        let isAllPass = result\n          .slice(result.length - 4, result.length)\n          .every(res => res.opt === \"Pass\");\n\n        //\n        let hasValidTrump = result.some(bid => bid.trump >= 0);\n        isFinishAuction = isAllPass && hasValidTrump;\n      }\n\n      // update bid\n      newBid = Object.assign({}, this.props.game.bid, {\n        result: result\n      });\n    }\n\n    let deal = this.props.game.deal;\n\n    // if (isFinishAuction) {\n    //   deal = (declarer + 1) % 4;\n    // } else {\n    //   deal = (deal + 1) % 4;\n    // }\n\n    let newGame = Object.assign(\n      {},\n      this.props.game,\n      {bid: newBid},\n      {deal: (deal + 1) % 4}\n    );\n\n    dispatchToDatabase(\"UPDATE_AUCTION\", {\n      table: this.props.table,\n      game: newGame\n    });\n    this.setState({visibility: false, current: null});\n  }\n  render() {\n    let {game, players} = this.props;\n    let {playerInfo} = this.props.table;\n    let isCurrentUser =\n            players && players[game.deal] === this.props.currentUser.uid;\n\n    let value = game.bid.trick * 5 + game.bid.trump;\n\n    // todo: refactor\n    let trickOpt, trumpOpt;\n    if (value < 0) {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index);\n    } else if (value === 34) {\n      trickOpt = [];\n      trumpOpt = [];\n    } else if (value % 5 === 4 && value !== 0) {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt > game.bid.trick);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index);\n    } else {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt >= game.bid.trick);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt > game.bid.trump);\n    }\n\n    let allTrickOpt = trickOpt.map((opt, index) => (\n      <button\n        className={opt === this.state.current ? \"current\" : null}\n        onClick={() => {\n          this.validateUserTurnAndsetTrump(opt);\n        }}\n        key={getRandomKey()}>\n        {opt + 1}\n      </button>\n    ));\n\n    let selectedTrump =\n            this.state.currentTrick === trickOpt[0]\n              ? trumpOpt\n              : [0, 1, 2, 3, 4];\n\n    if (value === 34) {\n      selectedTrump = [];\n    }\n    selectedTrump = selectedTrump.map(opt => (\n      <div onClick={() => this.updateBid(opt, null)} key={getRandomKey()}>\n        {SUIT_SHAPE[opt](0.25)}\n      </div>\n    ));\n\n    let result = game.bid.result;\n\n    let DoubleBtn = result &&\n            !result[result.length - 1].opt && (\n      <button\n        className=\"d-btn\"\n        onClick={() => this.updateBid(-1, \"Double\")}>\n                    Dboule\n      </button>\n    );\n\n    let ReDoubleBtn = result &&\n            result[result.length - 1].opt === \"Double\" && (\n      <button\n        className=\"d-btn\"\n        onClick={() => this.updateBid(-1, \"ReDouble\")}>\n                    ReDouble\n      </button>\n    );\n\n    let playerThumbnails = players.map((player, index) => (\n      <div\n        key={`auction-thumbnail-${index}`}\n        className={\n          index === this.props.game.deal\n            ? \"default-thumbnail current\"\n            : \"default-thumbnail\"\n        }>\n        <div className=\"default-thumbnail-inner\">\n          <div className=\"default-thumbnail-inner-outline-wrapper\">\n            <div className=\"default-thumbnail-inner-outline\">\n              <Thumbnail\n                size={53}\n                current={index === this.props.game.deal}\n                name={playerInfo[player].displayName}\n              />\n            </div>\n          </div>\n          <span>{playerInfo[player].displayName}</span>\n        </div>\n      </div>\n    ));\n    if (this.props.isFinishAuction) {\n      return null;\n    }\n\n    return (\n      <div className=\"auction-inner\">\n        <div className=\"thumbnail-group\">{playerThumbnails}</div>\n        {!game.bid.result && (\n          <div className=\"notes\"> Start Auction </div>\n        )}\n        <AuctionList scale={0.2} result={game.bid.result} />\n        <div className=\"option-wrapper\">\n          {isCurrentUser && (\n            <div className=\"other-btns\">\n              <button\n                className=\"pass\"\n                onClick={() => this.updateBid(null, \"Pass\")}>\n                                Pass\n              </button>\n              {DoubleBtn}\n              {ReDoubleBtn}\n            </div>\n          )}\n          <div className=\"tricks\">{allTrickOpt}</div>\n          {this.state.visibility && (\n            <div className=\"trumps\">{selectedTrump}</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport {Thumbnail} from \"./thumbnail.js\";\nimport \"../style/thumbnail.scss\";\nimport \"../style/player.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nexport const Player = ({name, current = null}) => {\n  return (\n    <div className={current ? \"player current\" : \"player\"}>\n      <div className=\"player-inner\">\n        <Thumbnail robotOffset={-7} styleName=\"border-thumbnail\" size={current ? 40 : 50} offset={5} name={name} border={current} />\n      </div>\n      <div className=\"name\">{name}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {Thumbnail, ThumbnailWithTag} from \"./thumbnail.js\";\nimport {AuctionList} from \"./auctionList.js\";\nimport \"../style/auction.scss\";\n\nexport class AuctionResult extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n\n    let {table, windowWidth, currentUser, windowHeight} = this.props;\n\n    let {game, playerInfo, players} = table;\n    if (!game || !game.bid.result) {\n      return null;\n    }\n    let playerThumbnails = players.map((player, index) => {\n      if (currentUser.uid === player) {\n        return (\n          <ThumbnailWithTag\n            key={`resultThumbnail-${index}`}\n            name={playerInfo[player].displayName}\n            size={30}\n            isCurrentUser={true}\n            offset={5}\n          />\n        );\n      } else {\n        return (\n          <Thumbnail\n            key={`resultThumbnail-${index}`}\n            name={playerInfo[player].displayName}\n            size={30}\n            offset={5}\n          />\n        );\n      }\n    });\n    return (\n      <div\n        className=\"auction-result\"\n        style={{\n          top: Math.ceil(windowWidth / 500) * 5,\n          right: Math.ceil(windowWidth / 500) * 5\n        }}>\n        <div className=\"auction-result-inner\">\n          <div className=\"thumbnail-group\">{playerThumbnails}</div>\n          <AuctionList scale={0.15} result={game.bid.result} />\n        </div>\n      </div>\n    );\n  }\n}\n","import {\n  PLAYER_NUM,\n  CARD_NUM,\n  EMPTY_SEAT,\n  NO_TRUMP,\n  DEFAULT_GAME\n} from \"./constant.js\";\nimport {getRandomInt} from \"../helper/helper.js\";\n\nexport const hasSameSuitWithFirstCard = (firstCard, cards) => {\n  if (!cards) {\n    return false;\n  }\n  return (\n    firstCard &&\n        cards.filter(card => {\n          return (\n            Math.floor(card.value / CARD_NUM.HAND) ===\n                Math.floor(firstCard.value / CARD_NUM.HAND)\n          );\n        }).length > 0\n  );\n};\n\n// get porker card detail information offset by current login user\nexport const getOffsetDatabyCurrentUser = (players, game, currentUser) => {\n  if (!game || !game.cards) return;\n\n  let {cards} = game;\n\n  // default don't offset\n  let cardsByPlayer = players\n    .map((userIndex, index) => {\n      return cards.filter((card, i) => i % players.length === index);\n    })\n    .slice(0);\n\n  let offsetIndex = players.findIndex(user => user === currentUser);\n\n  let isCurrentUserAPlayer = offsetIndex !== -1;\n\n  // user is curretn user\n  if (isCurrentUserAPlayer) {\n    return {\n      cardsByPlayer: [\n        ...cardsByPlayer.slice(offsetIndex),\n        ...cardsByPlayer.slice(0, offsetIndex)\n      ],\n      offsetPlayers: [\n        ...players.slice(offsetIndex),\n        ...players.slice(0, offsetIndex)\n      ],\n      offsetIndex: offsetIndex\n    };\n  }\n\n  return {\n    cardsByPlayer: cardsByPlayer,\n    offsetPlayers: players.slice(0),\n    offsetIndex: offsetIndex\n  };\n};\n\nexport const mapFlipDownCards = dislayList => {\n  if (!dislayList) return;\n  let flat = dislayList.flat();\n  let cardsNumberOnHand = 5;\n  let totalLen = flat.length;\n  // if cards number is under n, split flipdown card into two row;\n  if (totalLen <= cardsNumberOnHand) {\n    let mid = Math.floor(totalLen / 2);\n    return [flat.slice(0, mid), flat.slice(mid, totalLen)];\n  } else {\n    let threeRow = [[], [], []];\n    flat.map((card, index) => threeRow[index % 3].push(card));\n    return threeRow;\n  }\n};\n\nexport const getFirstCard = game => {\n  if (!game) {\n    return null;\n  }\n  // what is the first card of current trick\n  // in order to let players only can draw card as the same suit\n  if (\n    game.cards &&\n        game.cards.length >= PLAYER_NUM &&\n        game.order % PLAYER_NUM !== PLAYER_NUM - 1\n  ) {\n    return game.cards\n      .filter(card => card.order % PLAYER_NUM === 0)\n      .sort((cardA, cardB) => cardB.order - cardA.order)[0];\n  }\n  return null;\n};\n\nexport const shuffleCards = () => {\n  let cards = getRandomCards();\n  while (!validateShuffle(cards)) {\n    cards = getRandomCards();\n  }\n  return cards;\n};\n\nexport const mapToFourHands = cards => {\n  if (!cards) return;\n  return [0, 0, 0, 0]\n    .map((userIndex, index) => {\n      return cards.filter((card, i) => i % 4 === index);\n    })\n    .slice(0);\n};\n\nexport const fourHands = cards => {\n  return mapToFourHands(cards).map(hand =>\n    hand.map(value => (value % 13 > 8 ? (value % 13) - 8 : 0))\n  );\n};\n\nconst getRandomCards = () => {\n  let cards = Array.from({length: CARD_NUM.TOTAL})\n    .fill(0)\n    .map((card, i) => i);\n\n  // shuffle array algorithm\n  for (let i = cards.length - 1; i > 0; i--) {\n    let randomIndex = getRandomInt(0, CARD_NUM.TOTAL - 1);\n    [cards[i], cards[randomIndex]] = [cards[randomIndex], cards[i]];\n  }\n\n  return cards;\n};\n\nconst validateShuffle = cards => {\n  return fourHands(cards).every(\n    hand => hand.reduce((sum, value) => value + sum, 0) >= 7\n  );\n};\n\nexport const getMaxCardNumPerSuit = cardsForPlayerHand => {\n  console.log(\"max card num\");\n  return Math.max(...cardsForPlayerHand.map(suit => suit.length));\n};\n\nexport const getHandPosByCardNum = (cardsForPlayerHand, cardSize, offset) => {\n  let maxCardNum = getMaxCardNumPerSuit(cardsForPlayerHand);\n  if (maxCardNum === 0) {\n    return 0;\n  }\n  console.log(\"maxCardNum\", maxCardNum);\n  return (maxCardNum - 1) * offset + cardSize;\n};\n","import {CARD_NUM, NO_TRUMP} from \"./constant.js\";\nimport {getCurrentMaxTrick} from \"./getCurrentMaxTrick.js\";\n\n// which card has max value by the bid trump\nconst findMaxValueByTrump = (arr, trump) => {\n  if (!arr || trump === null || trump === undefined) {\n    return;\n  }\n  let list = arr\n    .filter(item => Math.floor(item.value / CARD_NUM.HAND) === trump)\n    .sort((cardA, cardB) => cardB.value - cardA.value);\n  return list.length ? list[0] : null;\n};\n\n// handle winner card logic\n// if there are any cards with same rank as trump, compare their face value\n// else follow first card's rank to compare value;\nexport const getWinnerCard = (game, cardValue) => {\n  if (!game) return;\n  let cards = game.cards,\n    maxTrick = getCurrentMaxTrick(cards);\n\n  let {trump} = game.bid;\n  let cardsMatchCurrentTrick = cards\n    .map((card, index) => Object.assign({}, card, {index: index}))\n    .filter(\n      card =>\n        (card.trick === maxTrick && card.trick > 0) ||\n                card.value === cardValue,\n    );\n  let winnerCard,\n    noTrumpCards = false;\n\n  if (cardsMatchCurrentTrick.length === 4) {\n    // which card is first been played\n    let first = Math.min(...cardsMatchCurrentTrick.map(card => card.order));\n    let [firstHand] = cardsMatchCurrentTrick.filter(\n      card => card.order === first,\n    );\n    // trump matters most, else, decide by what first hand has draw\n    if (trump !== NO_TRUMP) {\n      // filter trump cards, and compare their face value\n      let tmp = findMaxValueByTrump(cardsMatchCurrentTrick, trump);\n\n      if (tmp !== null) {\n        winnerCard = tmp;\n      } else {\n        noTrumpCards = true;\n      }\n    }\n\n    if (trump === NO_TRUMP || noTrumpCards) {\n      // if their quotient are the same, compare their value, else, let first win\n      let trumpRef = Math.floor(firstHand.value / CARD_NUM.HAND);\n      winnerCard = findMaxValueByTrump(cardsMatchCurrentTrick, trumpRef);\n    } // end of no trump\n  }\n\n  return winnerCard || null;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/progress.scss\";\n\nexport const Progress = ({\n  totalWidth,\n  currentWidth,\n  height = 10,\n  fg = \"#4A90E2\",\n  bg = \"#EAE7DF\"\n}) => {\n  let viewBox = `0 0 200 ${height}`;\n  let heightValue = `${height}px`;\n  let total = `${totalWidth}`;\n  return (\n    <div className=\"\">\n      <svg width={total} height={height} viewBox={viewBox}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <rect\n            fill={bg}\n            x=\"0\"\n            y=\"0\"\n            width={total}\n            height={height}\n            rx=\"5\"\n          />\n          <rect\n            fill={fg}\n            x=\"0\"\n            y=\"0\"\n            width={currentWidth}\n            height={height}\n            rx=\"5\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {EMPTY_SEAT, TIMER} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport \"../style/ready-list.scss\";\nimport {ThumbnailWithTag, WaitingThumbnail} from \"./thumbnail.js\";\nimport {Progress} from \"./progress.js\";\nexport default class PlayerReadyList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timeInterval = 15000;\n    this.frequency = 10; // update frequency per sec;\n    // let timeStamp = new Date().getTime();\n    this.state = {\n      progress: new Date().getTime() - this.props.table.createTime\n    };\n    this.setReadyState = this.setReadyState.bind(this);\n    this.countDownTimer = this.countDownTimer.bind(this);\n    this.checkReadyState = this.checkReadyState.bind(this);\n    this.timer = setInterval(this.countDownTimer, this.frequency);\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n    let diffRange = new Date().getTime() - this.props.createTime;\n\n    if (this.isMount && diffRange >= this.timeInterval) {\n      this.setState({\n         progress: this.props.progress\n        // progress: new Date().getTime() - this.props.table.createTime\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.isMount = false;\n    // this.setState({progress: this.props.progress})\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.createTime !== prevProps.createTime) {\n      this.state.progress = this.props.progress;\n      // new Date().getTime() - this.props.table.createTime;\n    }\n  }\n  countDownTimer() {\n    let createTime = this.props.table.createTime;\n    let diffRange = new Date().getTime() - this.props.table.createTime;\n    if (this.isMount && diffRange < this.timeInterval) {\n      this.setState({\n        progress: diffRange\n      });\n    } else {\n      new Promise((resolve, reject) => {\n        clearInterval(this.timer);\n        resolve(\"cleard\");\n      }).then(val => {\n        if (\n          this.isMount &&\n                    this.props.table.createTime !== createTime\n        ) {\n          this.setState({timesUp: true});\n        }\n      });\n    }\n  }\n  checkReadyState() {\n    let {table, currentUser} = this.props;\n    let {game, ready, players, playerInfo} = table;\n    return ready.every(player => player === false);\n  }\n  setReadyState(playerIndex) {\n    let {currentUser, table} = this.props;\n    if (!table) return;\n    let {game, gameState} = table;\n    let players = table.players.slice(0);\n    dispatchToDatabase(\"READY_A_PLAYER\", {\n      playerIndex: playerIndex,\n      table: table\n    });\n  }\n  render() {\n    let {table, currentUser} = this.props;\n    let {game, ready, players, playerInfo} = table;\n\n    if (!game) {\n      return <div> No game data </div>;\n    }\n\n    let {isGameOver, order} = game;\n    let isAnyEmptySeat = players.some(seat => seat === EMPTY_SEAT);\n    let isAllPlayerReady = ready.every(player => player === true);\n\n    // if need to sho playerReadylist\n    let showPlayerReadyList =\n            (isAnyEmptySeat && order < 0) || !isAllPlayerReady;\n\n    if (!showPlayerReadyList) {\n      return null;\n    }\n    let playBtns = null;\n\n    let totolProgress = 200;\n\n    let currentVal = Math.floor(\n      (this.state.progress / this.timeInterval) * totolProgress\n    );\n\n    let isTimesUp = currentVal >= totolProgress - 1;\n\n    let thumbnails = players.map((player, index) => {\n      let playerName;\n      let size = 70;\n      let offset = 0;\n\n      if (playerInfo[player]) {\n        playerName = playerInfo[player].displayName;\n      }\n\n      if (!playerName) {\n        return (\n          <WaitingThumbnail\n            stop={isTimesUp}\n            key={`join-plyaer-${index}`}\n            size={size}\n          />\n        );\n      }\n\n      return (\n        <div\n          key={`join-player-${index}`}\n          className=\"player-ready-wrapper\">\n          <ThumbnailWithTag\n            isCurrentUser={players[index] === currentUser.uid}\n            size={size}\n            offset={offset}\n            disabled={!ready[index]}\n            name={playerName}\n          />\n          <span>{playerName}</span>\n        </div>\n      );\n    });\n\n    let currentUserCanPlay;\n\n    if (players.includes(currentUser.uid)) {\n      currentUserCanPlay = players.some(\n        (player, index) => player === currentUser.uid && !ready[index]\n      );\n      playBtns = players.map((player, index) => {\n        if (player === currentUser.uid && !ready[index]) {\n          return (\n            <div key={`playBtn-${index}`}>\n              <button\n                style={{zIndex: 5}}\n                onClick={() => this.setReadyState(index)}\n                className=\"btn\">\n                                加入牌局\n              </button>\n            </div>\n          );\n        } else {\n          return <div key={`playBtn-${index}`} />;\n        }\n      });\n    }\n\n    let progressState = (\n      <Progress totalWidth={totolProgress} currentWidth={currentVal} />\n    );\n    if (isTimesUp) {\n      if (ready.some(player => player === true)) {\n        progressState = <div>牌桌準備中...</div>;\n      } else {\n        progressState = <div>沒人加入，即將返回大廳...</div>;\n      }\n    }\n    let roomId = `${table.linkId}`;\n    let roomNum = \"桌號 \" + roomId.slice(roomId.length - 3, roomId.length);\n\n    return (\n      <div className=\"player-ready-list\">\n        <div className=\"player-ready-list-inner\">\n          <h3>\n            <span>{roomNum}</span>\n          </h3>\n          <div className=\"row\"> {thumbnails}</div>\n          {!isTimesUp &&\n                        currentUserCanPlay && (\n            <div className=\"btn-wrapper\">{playBtns}</div>\n          )}\n          <div className=\"progress-panel\">{progressState}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport \"../style/game.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getRandomInt, getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {Card} from \"./card.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {GAME_STATE} from \"./constant.js\";\nimport Trick from \"./trick.js\";\nimport {\n  CARD_NUM,\n  DIRECTION,\n  EMPTY_SEAT,\n  NO_TRUMP,\n  DEFAULT_GAME\n} from \"./constant.js\";\nimport TrickScore from \"./trickScore.js\";\nimport ScoreBoard from \"./scoreBoard.js\";\nimport Auction from \"./auction.js\";\nimport {Player} from \"./player.js\";\nimport {AuctionResult} from \"./auctionResult.js\";\nimport {\n  hasSameSuitWithFirstCard,\n  getOffsetDatabyCurrentUser,\n  mapFlipDownCards,\n  getFirstCard,\n  shuffleCards,\n  getHandPosByCardNum\n} from \"./examineCards.js\";\nimport {getWinnerCard} from \"./getWinnerCard.js\";\nimport PlayerReadyList from \"./playerReadyList.js\";\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let {game} = this.props.table;\n    this.state = {\n      endAuction: game && game.order >= 0,\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    };\n    this.deal = this.deal.bind(this);\n    this.getNextMaxTrick = this.getNextMaxTrick.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.suffleCardsWhenReady = this.suffleCardsWhenReady.bind(this);\n    this.endAuction = this.endAuction.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.getAuctionStatus = this.getAuctionStatus.bind(this);\n  }\n  handleResize() {\n    this.setState({\n      windowWidth: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n  componentDidUpdate(prevProps) {\n    let newTable = this.props.table;\n    let oldTable = prevProps.table;\n\n    // todo, using a promise to do this task\n    this.suffleCardsWhenReady();\n  }\n\n  suffleCardsWhenReady() {\n    // when seats is full and has no cards on databse\n    let {players, game, gameState} = this.props.table;\n    if (players) {\n      let isAnyEmptySeat = players.some(seat => seat === EMPTY_SEAT);\n      if (\n        !isAnyEmptySeat &&\n                !game.cards &&\n                gameState === GAME_STATE.auction\n      ) {\n        this.shuffle();\n      }\n    }\n  }\n  // so far, how many tricks have been played ?\n  getNextMaxTrick() {\n    // if (!this.props.table || this.props.table.game) return;\n    let {game} = this.props.table;\n    if (!game) {\n      return;\n    }\n    let cards = game.cards,\n      maxTrick = Math.max(...cards.map(card => card.trick)),\n      maxTrickNum = cards.filter(card => card.trick === maxTrick).length;\n    if (maxTrick === 0 || maxTrickNum >= 4) {\n      return maxTrick + 1;\n    }\n    return maxTrick;\n  }\n  endAuction() {\n    this.setState({endAuction: true});\n  }\n  deal(value) {\n    console.log(\"value\", value);\n    let {table} = this.props;\n    let {game} = this.props.table;\n    if (!game) {\n      return;\n    }\n    let currentPlayer = game.deal;\n    let order = game.order + 1;\n\n    dispatchToDatabase(\n      \"UPDATE_CURRENT_TRICK\",\n      Object.assign(\n        {},\n        {\n          table: table,\n          value: value,\n          time: new Date().getTime(),\n          maxTrick: this.getNextMaxTrick(),\n          order: order,\n          deal: (game.deal + 1) % 4\n        }\n      )\n    );\n\n    let winnerCard = getWinnerCard(game, value);\n\n    // make sure winnerCard exists, and write winner to database\n    if (winnerCard) {\n      // remove index data while dispatch to database\n      let card = Object.assign({}, winnerCard);\n      delete card.index;\n\n      dispatchToDatabase(\n        \"UPDATE_WINNER_CARD\",\n        Object.assign({}, this.props, {\n          table: table,\n          winnerCard: card,\n          order: order,\n          deal: card.player\n        })\n      );\n    }\n  }\n  shuffle() {\n    let cards = shuffleCards();\n    // get new cards\n    cards = cards.map(card => ({\n      value: card,\n      trick: 0\n    }));\n    // todo bid\n    dispatchToDatabase(\"ADD_NEW_DECK_TO_TABLE\", {\n      table: this.props.table,\n      cards: cards\n    });\n  }\n  getAuctionStatus(game) {\n    // check if fishish auction\n    let result = game.bid.result;\n\n    if (!game || !result) {\n      return false;\n    }\n\n    return (\n      result.length >= 4 &&\n            game.bid.trump >= 0 &&\n            result\n              .slice(result.length - 4, result.length)\n              .every(res => res.opt === \"Pass\")\n    );\n  }\n  render() {\n    let {table, currentUser} = this.props;\n\n    console.log(\"in game table\", table);\n\n    let {game, players, ready} = table;\n\n    let {cards, isGameOver} = game;\n\n    let isEndOfCurrentTrick = game.order % 4 === 3;\n    let isFinishAuction = this.getAuctionStatus(game);\n    // set true to give dummy's card to declarer\n    let isDummyMode = isFinishAuction && true;\n\n    // class name for each hand\n    let hands;\n    let {cardsByPlayer, offsetPlayers, offsetIndex} =\n            getOffsetDatabyCurrentUser(players, game, currentUser.uid) || {};\n\n    // turn cards to 4 hands\n    if (cards && cards.length === CARD_NUM.TOTAL) {\n      let currentUserIndex = players.findIndex(\n        user => user === currentUser.uid\n      );\n\n      // if dummy mode, let it be dummy's index, esle let it be something larger\n      let flipIndex = isDummyMode ? (game.bid.declarer + 2) % 4 : 6;\n      let isValidFlipIndex = flipIndex < 4;\n\n      if (isValidFlipIndex) {\n        // udpate dummy hand's index in offset player list\n        flipIndex = offsetPlayers.findIndex(\n          player => player === players[flipIndex]\n        );\n      }\n\n      let currentTurnPlayer = players[game.deal];\n      let isCurrentUserPlayer = players.includes(currentUser.uid);\n\n      // cardsByPlayer already offset by current login user's index\n      hands = cardsByPlayer.map((hand, index) => {\n        let playerHand = offsetPlayers[index];\n        let playerHandIndex = index; // zero will alwasy be current login user\n\n        // makesure dummy hand can view declarer's card\n        if (flipIndex === 0) {\n          flipIndex = 2;\n        }\n\n        // only show cards didn't played\n        hand = hand\n          .sort((a, b) => a.value - b.value)\n          .filter(card => card.trick === 0);\n\n        if (playerHandIndex === 1 && flipIndex !== 1) {\n          hand = hand.sort((a, b) => b.value - a.value);\n        }\n\n        let currentUserIndex = 0;\n\n        // handle display issue for both weat/east players\n        let handCopy = hand.map(userHand =>\n          Object.assign({}, userHand)\n        );\n\n        let display = [[], [], [], []];\n        handCopy.map(card =>\n          display[Math.floor(card.value / CARD_NUM.HAND)].push(card)\n        );\n\n        // handle flip down card, group them into n rows base on\n        // how many cards left\n        display = display.filter(item => item.length !== 0);\n\n        // decide to flip down which players card\n        // use playerHandIndex to decide , playerHandIndex 0 means current user\n        // if current user is not a player, show sorted cards and don't flip them\n        if (\n          playerHandIndex !== currentUserIndex &&\n                    playerHandIndex !== flipIndex &&\n                    isCurrentUserPlayer\n        ) {\n          let mapResult = mapFlipDownCards(display);\n          if (mapResult) {\n            display = mapResult;\n          }\n        }\n\n        // handle sort isssue of west player, should sort\n        // from big to small\n        let firstCard = getFirstCard(game);\n\n        let hasFollowSameSuit = hasSameSuitWithFirstCard(\n          firstCard,\n          display.flat()\n        );\n\n        let cardsInHand = display.map((each, index) => {\n          // use playerHandIndex to decide flip up whose cards\n          // playerHandIndex === 0 means current user\n          let declarerIndex = game.bid.declarer;\n\n          let dummyPlayerIndex = (declarerIndex + 2) % 4;\n          let dummyPlayer = players[dummyPlayerIndex];\n\n          let declarerPlayer = players[declarerIndex];\n\n          // if player is nither declarer nor dummy plaer\n          let isValidCard = isFinishAuction && isCurrentUserPlayer;\n          let canBeClick =\n                        isValidCard &&\n                        // current player is equal to south;\n                        currentTurnPlayer === playerHand &&\n                        playerHandIndex === currentUserIndex;\n\n          // current turn is dummay hand, and current login user is declare,\n          // let current user can control dummy hand's card\n          if (\n            isDummyMode &&\n                        isValidCard &&\n                        dummyPlayer === currentTurnPlayer\n          ) {\n            if (\n              currentUser.uid === declarerPlayer &&\n                            playerHandIndex === 2\n            ) {\n              canBeClick = true;\n            }\n            if (\n              currentUser.uid === dummyPlayer &&\n                            playerHandIndex === currentUserIndex\n            ) {\n              canBeClick = false;\n            }\n          }\n\n          let flipUp =\n                        !isCurrentUserPlayer ||\n                        playerHandIndex === currentUserIndex ||\n                        playerHandIndex === flipIndex;\n\n          // if those card has same suit with first player,\n          // users need only to draw those cards\n          // if not, they can draw any cards\n          let allowClickEvt = card => {\n            return (\n              firstCard === null ||\n                            !hasFollowSameSuit ||\n                            Math.floor(card.value / CARD_NUM.HAND) ===\n                                Math.floor(firstCard.value / CARD_NUM.HAND)\n            );\n          };\n\n          return each.map((card, i) => (\n            <Card\n              name={\n                canBeClick && allowClickEvt(card)\n                  ? `click-able l${index} item-${i}`\n                  : `l${index} item-${i}`\n              }\n              flipUp={flipUp}\n              evt={\n                canBeClick && allowClickEvt(card)\n                  ? this.deal\n                  : null\n              }\n              key={`card-random-${i}`}\n              value={card.value}\n            />\n          ));\n        });\n\n        // calculate hand style and card postion\n        let totalCardsInHand = cardsInHand\n          .map(suit => suit.length)\n          .reduce((sum, len) => sum + len, 0);\n        let totalSuitType = cardsInHand.filter(\n          suit => suit.length !== 0\n        ).length;\n\n        // handle resize\n        let sidebarWidth = this.state.windowWidth >= 1200 ? 380 : 300;\n        let horCardOffset = 40;\n        let cardSize = 100;\n\n        let horCardStyle =\n                    DIRECTION[index] === \"north\" || DIRECTION[index] === \"south\"\n                      ? {\n                        left:\n                                  (this.state.windowWidth -\n                                      sidebarWidth -\n                                      (horCardOffset * totalCardsInHand +\n                                          horCardOffset)) /\n                                  2\n                      }\n                      : null;\n\n        const getHandHeight = suitNum => {\n          let cardh = 125,\n            shift = 70;\n          return (\n            suitNum * cardh - (cardh - shift) * (suitNum - 1) + 10\n          );\n        };\n\n        let verTopPos =\n                    DIRECTION[index] === \"west\" || DIRECTION[index] === \"east\"\n                      ? (this.state.windowHeight -\n                              getHandHeight(totalSuitType)) /\n                          2\n                      : null;\n\n        let verEdgePos;\n\n        // let verHandPos = getHandPosByCardNum(\n        //   cardsInHand,\n        //   cardSize,\n        //   horCardOffset,\n        //   this.state.windowWidth\n        // );\n\n        if (verTopPos && DIRECTION[index] === \"west\") {\n          verEdgePos = {top: verTopPos};\n        }\n        if (verTopPos && DIRECTION[index] === \"east\") {\n          verEdgePos = {top: verTopPos};\n        }\n\n        // console.log(\"verHandPos\", verHandPos);\n        // let verEdgePos = () => {\n        //   if (verTopPos && DIRECTION[index] === \"west\") {\n        //     return Object.assign({}, verTopPos, {left: verHandPos});\n        //   } else if (verTopPos && DIRECTION[index] === \"east\") {\n        //     return Object.assign({}, verTopPos, {\n        //       right: verHandPos\n        //   }\n        // };\n\n        // console.log(\"verEdgePos\", verEdgePos);\n\n        return (\n          <div\n            className={DIRECTION[index]}\n            style={horCardStyle || verEdgePos}\n            key={`player-hand-index-${index}`}>\n            <div className=\"hand-inner\">\n              <div className=\"user-hand\">{cardsInHand}</div>\n              <Player\n                current={\n                  currentTurnPlayer === playerHand &&\n                                    isFinishAuction\n                }\n                name={\n                  (table.playerInfo[playerHand] &&\n                                        table.playerInfo[playerHand]\n                                          .displayName) ||\n                                    \"Anonymous\"\n                }\n              />\n            </div>\n          </div>\n        );\n      });\n    } // end of cards\n    let isAllReady = table.ready.every(player => player === true);\n\n    // dom elements\n    if (isGameOver) {\n      return (\n        <div className=\"game\">\n          <div>\n            <ScoreBoard\n              startGame={this.suffleCardsWhenReady}\n              currentUser={currentUser}\n              windowWidth={this.state.windowWidth}\n              widnowHeight={this.state.windowHeight}\n              table={table}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"game\">\n        {!isAllReady && (\n          <PlayerReadyList\n            progress={this.props.progress}\n            suffleCardsWhenReady={this.suffleCardsWhenReady}\n            currentUser={currentUser}\n            table={this.props.table}\n          />\n        )}\n        {isFinishAuction && (\n          <AuctionResult\n            currentUser={currentUser}\n            windowWidth={this.state.windowWidth}\n            windowHeight={this.state.windowHeight}\n            table={table}\n          />\n        )}\n        <div className=\"auction\">\n          {game.bid &&\n                        game.cards && (\n            <Auction\n              isFinishAuction={isFinishAuction}\n              endAuction={this.endAuction}\n              game={game}\n              table={table}\n              currentUser={currentUser}\n              players={players}\n            />\n          )}\n        </div>\n        <div className=\"arena\">\n          <div className=\"hands\">{hands}</div>\n          <Trick\n            cards={cards}\n            cardsByPlayer={cardsByPlayer}\n            order={game.order}\n            isTrickFinish={isEndOfCurrentTrick}\n          />\n          <TrickScore\n            currentUser={currentUser}\n            resizeRatio={0.15}\n            innerStyle={{\n              bottom: Math.ceil(this.state.windowWidth / 500) * 5,\n              right: Math.ceil(this.state.windowWidth / 500) * 5\n            }}\n            thumbnailSize={30}\n            name=\"right-bottom-pos\"\n            windowWidth={this.state.windowWidth}\n            widnowHeight={this.state.windowHeight}\n            table={this.props.table}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE} from \"../constant.js\";\nimport {teamScore} from \"../socre.js\";\n\nexport default class RecordItem extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {index, record, current} = this.props;\n    if (!record) {\n      return (\n        <div className=\"record-item\">\n          <div className=\"empty\" />\n        </div>\n      );\n    }\n    let score = teamScore(record.cards);\n    return (\n      <div\n        onClick={() => this.props.changeRecord(index)}\n        className={\n          current\n            ? \"record-item active current\"\n            : \"record-item active\"\n        }>\n        <div>{index + 1}</div>\n        <div className=\"bid\">\n          <span>{record.bid.trick + 1}</span>\n          {SUIT_SHAPE[record.bid.trump](0.15)}\n        </div>\n        <div>{score.teamA}</div>\n        <div>{score.teamB}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Dot = ({current, page, changePage}) => {\n  return (\n    <div\n      onClick={() => changePage(page)}\n      className={current ? \"dot current\" : \"dot\"}\n    />\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport RecordItem from \"./recordItem.js\";\nimport {ThumbailGroup} from \"../thumbnail.js\";\nimport {Dot} from \"../dotIndicator/dot.js\";\n\nexport default class GameRecord extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0\n    };\n    this.changePage = this.changePage.bind(this);\n  }\n  changePage(page) {\n    this.setState({page: page});\n  }\n  render() {\n    let resultNum = 3;\n    let {record} = this.props;\n    if (!record) {\n      return (\n        <div className=\"record-empty\">No available game records</div>\n      );\n    }\n    let recordList, dots, dotsNum;\n    if (record) {\n      if (record.length <= resultNum) {\n        record = record.concat([null, null, null]).slice(0, resultNum);\n      } else {\n        let start = this.state.page * resultNum;\n        let end =\n                    start + resultNum >= record.length\n                      ? record.length\n                      : start + resultNum;\n        record =\n                    end === start + resultNum\n                      ? record.slice(start, end)\n                      : record.slice(start, end);\n      }\n      recordList = record.map((recordItem, index) => (\n        <RecordItem\n          key={`record-item-${index}`}\n          index={index}\n          changeRecord={this.props.changeRecord}\n          current={this.props.currentRecord === index}\n          record={recordItem}\n        />\n      ));\n\n      dotsNum = Math.ceil(record.length / resultNum);\n      dots =\n                dotsNum <= 1\n                  ? null\n                  : (dots = Array.from({length: dotsNum})\n                    .fill(0)\n                    .map((dotItem, index) => (\n                      <Dot\n                        key={`dot-${index}`}\n                        changePage={this.changePage}\n                        page={index}\n                        current={index === this.state.page}\n                      />\n                    )));\n    }\n\n    return (\n      <div className=\"record-list\">\n        {this.props.record && (\n          <div className=\"record-header\">\n            <div />\n            <div />\n            <ThumbailGroup\n              teamOrder={0}\n              players={this.props.players}\n              size={32}\n            />\n            <ThumbailGroup\n              teamOrder={1}\n              players={this.props.players}\n              size={32}\n            />\n          </div>\n        )}\n        {recordList}\n        <div className=\"dots-holder\">\n          <div className=\"dots-holder-inner\">{dots}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"../thumbnail.js\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"../constant.js\";\n\nexport const Hand = ({player, cards, direction}) => {\n  let display = [[], [], [], []];\n  cards.map(card => display[Math.floor(card.value / 13)].push(card));\n  let displaySuit = display.map((suit, index) => (\n    <div className=\"hand\" key={`suit-${index}`}>\n      <div>{SUIT_SHAPE[index](0.15)}</div>\n      <div className=\"card-value\">\n        {suit.map((card, index) => (\n          <div key={`suit-${index}`}>\n            {CARD_RANK[card.value % CARD_NUM.HAND]}\n          </div>\n        ))}\n      </div>\n    </div>\n  ));\n  return (\n    <div className={`rewind-player ${direction}`}>\n      <div>\n        <Thumbnail name={player} size={26} />\n      </div>\n      <div className=\"hand-wrapper\">{displaySuit}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"../thumbnail.js\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"../constant.js\";\n\nexport const RewindAuction = ({players, bid}) => {\n  let {declarer, trump, trick} = bid;\n  return (\n    <div className=\"rewind-auction\">\n      <h3>Auction</h3>\n      <div>\n        <Thumbnail name={players[declarer]} size={26} />\n      </div>\n      <div>\n        {trick + 1} {SUIT_SHAPE[trump](0.15)}\n      </div>\n    </div>\n  );\n};\n\n\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ThumbailGroup} from \"../thumbnail.js\";\nimport {teamScore} from \"../socre.js\";\n\nexport const RewindResult = ({players, cards}) => {\n  let score = teamScore(cards);\n  return (\n    <div className=\"rewind-result\">\n      <h3>Result</h3>\n      <div>\n        <ThumbailGroup teamOrder={0} players={players} size={20} />\n        <div>{score.teamA}</div>\n      </div>\n      <div>\n        <ThumbailGroup teamOrder={1} players={players} size={20} />\n        <div>{score.teamB}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Hand} from \"./hand.js\";\nimport {mapToFourHands} from \"../examineCards.js\";\nimport {DIRECTION} from \"../constant.js\";\nimport {RewindAuction} from \"./rewindAuction.js\";\nimport {RewindResult} from \"./rewindResult.js\";\n\nexport default class GameRewind extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if (!this.props.record) {\n      return null;\n    }\n    let {cards, bid} = this.props.record;\n    let fourHandCards = mapToFourHands(cards);\n    let fourHands = fourHandCards.map((cards, index) => (\n      <Hand\n        direction={DIRECTION[index]}\n        key={`hand-${index}`}\n        cards={cards}\n        player={this.props.players[index]}\n      />\n    ));\n    return (\n      <div className=\"rewind\">\n        {fourHands}\n        <RewindAuction players={this.props.players} bid={bid} />\n        <RewindResult players={this.props.players} cards={cards} />\n        <div />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport reactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {app} from \"../firebase/firebase.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport randomColor from \"randomcolor\";\nimport {SUIT_SHAPE, Emoji} from \"./constant.js\";\n\nexport default class Chatroom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\"\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.addEmoji = this.addEmoji.bind(this);\n    this.msgEnd;\n    this.emoji = Emoji;\n  }\n  handleKeyPress(e) {\n    // && this.state.message.length\n    if (e.key === \"Enter\") {\n      console.log(\"has enter\");\n      this.sendMessage();\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  componentDidUpdate() {\n    console.log(\"did update\");\n    this.scrollToBottom();\n  }\n  addEmoji(emoji) {\n    this.setState({message: this.state.message + emoji});\n  }\n  sendMessage(e) {\n    dispatchToDatabase(\"SEND_MESSAGE_TO_CHATROOM\", {\n      message: this.state.message,\n      currentUser: this.props.currentUser,\n      table: this.props.table\n    });\n    this.setState({\n      message: \"\"\n    });\n    // this.scrollToBottom();\n  }\n  handleChange(e) {\n    this.setState({message: e.currentTarget.value});\n  }\n  scrollToBottom() {\n    // fixed when typing, message won't scroll to bottom \n    setTimeout(() => {\n      this.msgEnd.scrollIntoView({behavior: \"smooth\", block: \"end\"});\n    }, 10);\n  }\n  render() {\n    let {currentUser, table, chatroom} = this.props;\n    if (!table || !currentUser) {\n      console.log(\"no current table data\");\n    }\n    let {players} = table;\n    let messageList;\n    let emojiList = this.emoji.map((emj, i) => (\n      <a\n        key={`emj-${i}`}\n        className=\"emjbtn\"\n        onClick={() => this.addEmoji(emj)}>\n        {emj}\n      </a>\n    ));\n\n    if (chatroom && chatroom.message && table && table.viewers) {\n      let end = Object.keys(chatroom.message).length;\n      let chatStart = 0; //end - chatLen >= 0 ? end - chatLen : 0;\n      let isCurrentUserAPlayer = players.some(\n        player => player === currentUser.uid\n      );\n      let msgMapList;\n      if (isCurrentUserAPlayer) {\n        msgMapList = Object.keys(chatroom.message)\n          .sort((a, b) => +a - +b)\n          .filter(key => chatroom.message[key].isPlayer);\n      } else {\n        msgMapList = Object.keys(chatroom.message).sort(\n          (a, b) => +a - +b\n        );\n      }\n\n      messageList = msgMapList.map((id, index) => {\n        let color = table.viewers[chatroom.message[id].uid];\n        let symbol = null;\n        let playerIndex = players.findIndex(\n          player => player === chatroom.message[id].uid\n        );\n        if (playerIndex > -1) {\n          symbol = (\n            <div\n              style={{backgroundColor: color}}\n              className=\"symbol\">\n              {SUIT_SHAPE[playerIndex](0.1, \"#ffffff\")}\n            </div>\n          );\n        }\n        let msg = chatroom.message[id].content;\n        return (\n          <div className=\"msg\" key={`message-${index}`}>\n            <a>\n              {symbol}\n              <b style={{color: color}}>\n                {chatroom.message[id].displayName}{\" \"}\n                <b className=\"comma\">:</b>\n              </b>\n              {msg}\n            </a>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"chatroom\">\n        <div className=\"msg-wrapper\">\n          {messageList}\n\n          <div\n            ref={el => {\n              this.msgEnd = el;\n            }}\n            style={{float: \"left\", clear: \"both\"}}>\n            <i />\n          </div>\n        </div>\n        <div className=\"typing-area\">\n          <textarea\n            placeholder=\"type something...\"\n            rows=\"10\"\n            col=\"50\"\n            value={this.state.message}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n          />\n          <div className=\"emoji\">{emojiList}</div>\n          <button onClick={this.sendMessage}>送出</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport GameRecord from \"./gameRecord.js\";\nimport GameRewind from \"./gameRewind.js\";\nimport {TAB_OPTION} from \"../constant.js\";\nimport Chatroom from \"../chatroom.js\";\n\nexport default class Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    let {record} = this.props.table;\n    this.state = {\n      tab: 0,\n      currentRecord: record ? record.length - 1 : null\n    };\n    this.changeRecord = this.changeRecord.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n  }\n  changeRecord(index) {\n    this.setState({currentRecord: index});\n  }\n  handleTab(index) {\n    this.setState({tab: index});\n  }\n  render() {\n    if (!this.props.table) return null;\n    // let options = TAB_OPTION.map((opt, i) => (\n    //   <div\n    //     onClick={() => this.handleTab(i)}\n    //     className={this.state.tab === i ? `current ${opt}` : `${opt}`}\n    //     key={`opt-${i}`}>\n    //     <span />\n    //     <b>{opt}</b>\n    //   </div>\n    // ));\n    // let currentRecord = null;\n    // if (this.props.table.record) {\n    //   currentRecord =\n    //             this.state.currentRecord >= 0 &&\n    //             this.props.table.record[this.state.currentRecord];\n    // }\n\n    // let domRecord = (\n    //   <div>\n    //     <GameRecord\n    //       players={this.props.table.players}\n    //       record={this.props.table.record || null}\n    //       changeRecord={this.changeRecord}\n    //       currentRecord={this.state.currentRecord}\n    //     />\n    //     <GameRewind\n    //       players={this.props.table.players}\n    //       record={currentRecord}\n    //     />\n    //   </div>\n    // );\n    // let domChatroom = (\n    //   <Chatroom\n    //     currentUser={this.props.currentUser}\n    //     chatroom={this.props.chatroom}\n    //     table={this.props.table}\n    //   />\n    // );\n\n    // let currentTabContent = this.state.tab === 0 ? domChatroom : domRecord;\n\n    return (\n      <div className=\"sidebar\">\n        <div className=\"tabs\" style={{marginLeft: 30}}>\n          <div className={\"current chatroom\"}>\n            <span />\n            <b>chatroom</b>\n          </div>\n        </div>\n        <div className=\"tab-wrapper\" />\n        <div>\n          <Chatroom\n            currentUser={this.props.currentUser}\n            chatroom={this.props.chatroom}\n            table={this.props.table}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// <div>{currentTabContent}</div>\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport loadingImg from \"../images/loading.svg\";\n\nimport \"../style/loading.scss\";\n\nexport default class Loading extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"main-loading\">\n        <div className=\"loading-anim\">\n          <img src={loadingImg} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./game.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport Sidebar from \"./sidebar/sidebar.js\";\nimport {GAME_STATE} from \"./constant.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport randomColor from \"randomcolor\";\nimport {EMPTY_SEAT} from \"./constant.js\";\nimport Header from \"./header.js\";\nimport Loading from \"./loading.js\";\nimport \"../style/table.scss\";\nimport \"../style/sidebar.scss\";\nimport \"../style/record-item.scss\";\nimport \"../style/record.scss\";\nimport \"../style/dot.scss\";\nimport \"../style/rewind.scss\";\n\nexport default class Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateTableData = this.updateTableData.bind(this);\n    this.linkId =\n            this.props.match.params.id || window.location.hash.slice(8);\n    if (!this.props.currentUser) {\n      this.props\n        .getUserAuthInfo()\n        .then(user => {\n          app.getDataByPathOnce(\n            `tableList/${this.linkId}`,\n            snapshot => {\n              if (!snapshot.val()) {\n                // this.setState({closed: true});\n                return null;\n              }\n              let tableKey = snapshot.val().id;\n              dispatchToDatabase(\"UPDATE_TABLE_TIMESTAMP\", {\n                id: tableKey\n              });\n              app.getDataByPathOnce(\n                `tables/${tableKey}/`,\n                snapshot => {\n                  this.updateTableData(tableKey, this.linkId)\n                    .then(msg =>\n                      this.setState({\n                        isLoad: true\n                      })\n                    )\n                    .catch(err => console.log(err));\n                }\n              );\n            }\n          );\n        })\n        .catch(err => this.setState({redirectToLogin: true}));\n    } else {\n      this.linkId = this.props.match.params.id;\n      this.tableKey = this.props.tableList[this.linkId].id;\n      this.updateTableData()\n        .then(msg =>\n          this.setState({\n            isLoad: true\n          })\n        )\n        .catch(err => console.log(err));\n    }\n\n    this.state = {\n      isLoad: false,\n      redirectToLogin: false,\n      isClosed: false\n    };\n\n    // only fetch data\n\n    this.addPlayerToTable = this.addPlayerToTable.bind(this);\n    this.color = randomColor(\"dark\");\n  }\n  closeTable(tableKey = this.tableKey, linkId = this.linkId) {\n    return new Promise((resolve, reject) => {\n      app.setNodeByPath(\n        `tables/${tableKey}/gameState/${GAME_STATE.gameover}`,\n        GAME_STATE.gameover\n      );\n    })//.then(table => this.setState({closed: true}));\n  }\n  updateTableData(tableKey = this.tableKey, linkId = this.linkId) {\n    return new Promise((resolve, reject) => {\n      app.getNodeByPath(`tables/${tableKey}`, value => {\n        resolve(value.val());\n        // if (!value.val()) {\n        //   // this.setState({closed: true});\n        // } else {\n        //   // this.setState({\n        //   //   progress: new Date().getTime() - value.val().createTime\n        //   // });\n        // }\n        return dispatch(\"UPDATE_TABLE_DATA\", {\n          table: value.val(),\n          id: tableKey\n        });\n      });\n      app.getNodeByPath(`chatroom/${tableKey}`, value => {\n        resolve(\"successfulyy\");\n        return dispatch(\"UPDATE_CHAT_ROOM\", {\n          chatroom: value.val()\n        });\n      });\n    });\n  }\n  componentDidMount() {\n    // fetch data again\n    this.updateTableData().then(data =>\n      this.setState({\n        isLoad: true,\n        isClosed: false\n      })\n    );\n  }\n  addPlayerToTable(table) {\n    if (!table) return;\n    let {players, viewers} = table;\n    let emptySeatIndex = players.findIndex(seat => seat === EMPTY_SEAT);\n    let alreadyAPlayer = players.some(\n      seat => seat === this.props.currentUser.uid\n    );\n    let alreadyAViewer = Boolean(\n      viewers && viewers[this.props.currentUser.uid]\n    );\n    if (emptySeatIndex > -1 && !alreadyAPlayer) {\n      dispatchToDatabase(\"ADD_PLAYER_TO_TABLE\", {\n        currentUser: this.props.currentUser,\n        table: table,\n        emptySeatIndex: emptySeatIndex,\n        color: this.color\n      });\n    } else if (!alreadyAViewer) {\n      dispatchToDatabase(\"ADD_VIEWER_TO_TABLE\", {\n        currentUser: this.props.currentUser,\n        table: table,\n        color: this.color\n      });\n    }\n  }\n  componentDidUpdate(prevProps) {\n    // if this is a different table\n    if (!this.props.tableList) return;\n    if (this.props.currentTableId !== prevProps.currentTableId) {\n      this.setState({isLoad: false});\n      this.updateTableData().then(data => this.setState({isLoad: true}));\n    }\n    let {tableKey, linkId} = this;\n    if (\n      this.props.tableList[this.linkId] &&\n            this.props.tableList[this.linkId].id\n    ) {\n      if (this.props.tables[tableKey] !== prevProps.tables[tableKey]) {\n        this.addPlayerToTable(this.props.tables[tableKey]);\n      }\n    }\n  }\n  render() {\n    if (this.state.redirectToLogin) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    if (!this.state.isLoad) {\n      return <Loading />;\n    }\n\n    let {tables, currentUser} = this.props;\n\n    let linkId = this.props.match.params.id;\n\n    let tableKey;\n\n    if (tables && this.props.tableList) {\n      if (this.props.tableList[linkId]) {\n        tableKey = this.props.tableList[linkId].id;\n      }\n    }\n\n    if (!tables || !tables[tableKey] || !tableKey) {\n      console.log(\" no table data\");\n      return null;\n    }\n\n    // if (this.state.isClosed) {\n    //   return (\n    //     <div>\n    //       <Header\n    //         roomNum={this.linkId || null}\n    //         getUserAuthInfo={this.props.getUserAuthInfo}\n    //         currentUser={this.props.currentUser}\n    //       />\n    //       <div className=\"table-notes\">\n    //         <span>牌局已結束</span>\n    //       </div>\n    //     </div>\n    //   );\n    // }\n\n    let targetTable = tables[tableKey];\n    if (\n      targetTable.gameState &&\n            targetTable.gameState === GAME_STATE.close\n    ) {\n      // console.log(\"check this table\");\n      // console.log(\"targetTable\", targetTable);\n      // console.log(window.location);\n      // console.log(\"in redirect\");\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Header\n          roomNum={this.linkId || null}\n          isTableColor={true}\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"table\">\n          <Game\n            progress={this.state.progress}\n            currentUser={currentUser}\n            currentTableId={this.props.currentTableId}\n            table={targetTable}\n          />\n          <Sidebar\n            currentUser={currentUser}\n            chatroom={this.props.chatroom}\n            table={targetTable}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {GAME_STATE, TIMER} from \"./constant.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {EMPTY_SEAT} from \"../components/constant.js\";\nimport {getObj, getObjSortKey} from \"../helper/helper.js\";\nimport {app} from \"../firebase/firebase.js\";\n\nimport \"../style/table-list.scss\";\n\nexport default class OpenTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createTable = this.createTable.bind(this);\n    this.setCurrentTable = this.setCurrentTable.bind(this);\n  }\n  createTable(tableRef) {\n    if (!this.props.currentUser) {\n      return;\n    }\n    dispatchToDatabase(\"CREATE_TABLE\", {\n      tableRef: tableRef,\n      currentUser: this.props.currentUser\n    });\n    this.setCurrentTable(tableRef);\n  }\n  setCurrentTable(id) {\n    if (this.props.currentUser) {\n      dispatch(\"UPDATE_CURRENT_TABLE_ID\", {currentTableId: id});\n    }\n  }\n  render() {\n    let tableList = this.props.tableList;\n\n    let tableLinks;\n\n    if (tableList) {\n      let tableListKey = Object.keys(tableList);\n\n      let openTableList = tableListKey.filter(key => {\n        let tableCreateTime = +key;\n\n        if (\n          tableList[key].players &&\n                    new Date().getTime() - tableCreateTime <= TIMER.join\n        ) {\n          return tableList[key].players.some(\n            seat => seat === EMPTY_SEAT\n          );\n        } else {\n          return !tableList[key].players;\n        }\n      });\n\n      let PLAYER_NUM = 4;\n      let ROOM_NUM_LEN = 3;\n\n      tableLinks = openTableList.map((key, index) => {\n        let roomNum = key.slice(key.length - ROOM_NUM_LEN, key.length);\n        let players = this.props.tableList[key].players;\n        let playerInfo = this.props.tableList[key].playerInfo;\n        let emptySeats = players\n          ? players.filter(player => player === EMPTY_SEAT).length\n          : PLAYER_NUM - 1;\n\n        let owner = playerInfo[players[0]].displayName;\n        return (\n          <div\n            className=\"table-list-item\"\n            key={`tablelist-item-${index}}`}>\n            <div className=\"room-number\">\n              <span>{roomNum}</span>\n            </div>\n            <div>{owner}</div>\n            <div className=\"empty-seats\">{emptySeats} </div>\n            <div>\n              <Link\n                className=\"btn-style-border\"\n                onClick={() => this.setCurrentTable(key)}\n                key={key}\n                to={\n                  this.props.currentUser\n                    ? `/table/${key}`\n                    : \"/login\"\n                }>\n                                加入\n              </Link>\n            </div>\n          </div>\n        );\n      });\n    }\n\n    let tableRef = new Date().getTime();\n    let openBtn = this.props.currentUser &&\n            this.props.openBtn && (\n      <Link\n        className=\"btn-style-border\"\n        onClick={() => this.createTable(tableRef)}\n        to={\n          this.props.currentUser ? `/table/${tableRef}` : \"/login\"\n        }>\n                    我要開桌\n      </Link>\n    );\n\n    return (\n      <div className=\"table-list\">\n        {this.props.title && <h4>{this.props.title}</h4>}\n        <div className=\"table-list-header\">\n          <div>房號</div>\n          <div>桌長</div>\n          <div>空位</div>\n          <div className=\"open-table-section\">{openBtn}</div>\n        </div>\n        <div className=\"table-list-item-group\">{tableLinks}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {EMPTY_SEAT} from \"../components/constant.js\";\nimport {getObj, getObjSortKey} from \"../helper/helper.js\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/table-list.scss\";\n\nexport default class OpenTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createTable = this.createTable.bind(this);\n    this.setCurrentTable = this.setCurrentTable.bind(this);\n  }\n  createTable(tableRef) {\n    dispatchToDatabase(\"CREATE_TABLE\", {\n      tableRef: tableRef,\n      currentUser: this.props.currentUser\n    });\n  }\n  setCurrentTable(id) {\n    if (this.props.currentUser) {\n      dispatch(\"UPDATE_CURRENT_TABLE_ID\", {currentTableId: id});\n    }\n  }\n  render() {\n    let {tableList} = this.props;\n    let tableLinks;\n    if (tableList) {\n      let tableListKey = Object.keys(tableList);\n      let playingTables = tableListKey.filter(\n        key =>\n          tableList[key].players &&\n                    !tableList[key].players.some(\n                      player => player === EMPTY_SEAT\n                    )\n      );\n      tableLinks = playingTables.map((key, index) => {\n        let {players, playerInfo} = this.props.tableList[key];\n        let playerList = players.map((playerKey, index) => (\n          <div key={`playerSeat-${index}`}>\n            {playerInfo[playerKey]\n              ? playerInfo[playerKey].displayName\n              : \"Anonymous\"}\n          </div>\n        ));\n        return (\n          <div\n            className=\"playing-table\"\n            key={`playing-table-item-${index}}`}>\n            <div className=\"room-number\"><span>{key.slice(key.length-3, key.length)}</span></div>\n            {playerList}\n            <div>\n              <Link\n                onClick={() => this.setCurrentTable(key)}\n                className=\"btn-style-border\"\n                to={\n                  this.props.currentUser\n                    ? `/table/${key}`\n                    : \"/login\"\n                }>\n                 觀賞 \n              </Link>\n            </div>\n          </div>\n        );\n      });\n    }\n    return (\n      <div className=\"table-list\">\n        <h4>{this.props.title}</h4>\n        <div className=\"table-list-header playing-table-header\">\n          <div>房號</div>\n          <div>南</div>\n          <div>西</div>\n          <div>北</div>\n          <div>東</div>\n          <div />\n        </div>\n        <div className=\"table-list-item-group\">{tableLinks}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  IndexRoute,\n  BrowserRouter,\n  Router,\n  Route,\n  Switch,\n  Link\n} from \"react-router-dom\";\nimport {EMPTY_SEAT} from \"./constant.js\";\nimport OpenTables from \"./openTables.js\";\nimport PlayingTables from \"./playingTables.js\";\nimport \"../style/lobby.scss\";\nimport openImg from \"../images/open.svg\";\nimport playImg from \"../images/play.svg\";\nimport Header from \"./header.js\";\nimport Loading from \"./loading.js\";\n\nexport default class Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let open = 0,\n      playing = 0;\n    if (!this.props.isLoad) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"lobby\">\n          <div className=\"lobby-title\">\n            <h2> 鍛鍊腦力的最佳活動 <br /> <span>支援多人連線，單機版電腦對戰模式</span>\n            </h2>\n          </div>\n          <div className=\"table-lists\">\n            <div className=\"table-list-wrapper\">\n              <div className=\"table-num\" />\n              <div className=\"table-list-inner\">\n                <img src={openImg} />\n                <OpenTables\n                  title={\"揪咖打牌\"}\n                  openBtn={true}\n                  tables={this.props.tables}\n                  currentUser={this.props.currentUser}\n                  open={true}\n                  tableList={this.props.tableList}\n                />\n              </div>\n            </div>\n            <div className=\"table-list-wrapper\">\n              <div className=\"table-num\" />\n              <div className=\"table-list-inner\">\n                <img src={playImg} />\n                <PlayingTables\n                  tables={this.props.tables}\n                  title={\"熱門牌桌\"}\n                  openBtn={true}\n                  open={false}\n                  currentUser={this.props.currentUser}\n                  tableList={this.props.tableList}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {app} from \"../firebase/firebase.js\";\nimport \"../style/signup.scss\";\nimport \"../style/btn.scss\";\nimport \"../style/checkbox.scss\";\nimport {Redirect} from \"react-router-dom\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport Header from \"./header.js\";\n\n\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm: \"\",\n      agreement: false,\n      message: \"\",\n      redirect: false\n    };\n    this.handleSignUp = this.handleSignUp.bind(this);\n  }\n  handleSignUp() {\n    let auth = app.auth;\n    let {email, password, name} = this.state;\n    if (!email || !password || !confirm) return;\n    let promise = auth.createUserWithEmailAndPassword(email, password);\n    promise\n      .then(user => {\n        let randomIcon = Math.floor(Math.random() * 20);\n        this.props.updateUserInfo(user, {\n          name: name,\n          email: email\n        });\n        return auth.onAuthStateChanged(user => {\n          if (user) {\n            let userInfo = {\n              displayName: name,\n              email: email\n            };\n            user.updateProfile(userInfo);\n            app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n              if (!snapshot.val()) {\n                dispatchToDatabase(\"CREATE_USER\", {\n                  uid: user.uid,\n                  userInfo: userInfo\n                });\n              }\n            });\n          } else {\n            console.log(\"no user uid\");\n          }\n        });\n      })\n      .then(user => this.setState({redirect: true}))\n      .catch(error => this.setState({message: error.message}));\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"singup-wrapper\">\n          <div className=\"signup\">\n            <h2>註冊</h2>\n            <div>\n              <h3>玩家名稱</h3>\n              <input\n                placeholder=\"請輸入玩家名稱\"\n                type=\"text\"\n                onChange={e => {\n                  this.setState({\n                    name: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.name}\n              />\n            </div>\n            <div>\n              <h3>密碼</h3>\n              <input\n                placeholder=\"請輸入至少 6 位數\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    password: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.password}\n              />\n            </div>\n            <div>\n              <h3>確認密碼</h3>\n              <input\n                placeholder=\"請輸入至少 6 位數\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    confirm: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.confirm}\n              />\n            </div>\n            <div>\n              <h3>電子信箱</h3>\n              <input\n                type=\"email\"\n                placeholder=\"john@bridge.com\"\n                onChange={e => {\n                  this.setState({\n                    email: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.email}\n              />\n            </div>\n            <div>\n              <div className=\"error-text error-text-panel\">\n                {this.state.message}\n              </div>\n              <div className=\"btn-group\">\n                <button\n                  onClick={this.handleSignUp}\n                  className=\"btn-style-round\">\n                                    註冊\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// <label className=\"checkbox-lable\">\n//   <input id=\"agreement\" type=\"checkbox\" />\n//   <div\n//     className={\n//       this.state.agreement ? \"checked\" : \"\"\n//     }\n//     onClick={() =>\n//       this.setState({\n//         agreement: !this.state.agreement\n//       })\n//     }\n//   />\n// </label>\n\n// <span\n//   onClick={() =>\n//     this.setState({\n//       agreement: !this.state.agreement\n//     })\n//   }>\n//                   I allow the use of collected data about my study\n//                   behavior for research purposes. The data\n//                   contains information from game playing and\n//                   chatting messages. No individuals can be\n//                   identified from publications.\n// </span>\n","import \"./style/main.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Login from \"./components/login.js\";\nimport Table from \"./components/table.js\";\nimport Lobby from \"./components/lobby.js\";\nimport Loading from \"./components/loading.js\";\nimport SignUp from \"./components/signUp.js\";\nimport {app} from \"./firebase/firebase.js\";\nimport {Route, HashRouter} from \"react-router-dom\";\nimport {dispatch, store} from \"./reducer/reducer.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = store.getState();\n    this.update = this.update.bind(this);\n    this.stopLoading = this.stopLoading.bind(this);\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n    this.getUserAuthInfo = this.getUserAuthInfo.bind(this);\n  }\n  update() {\n    this.setState(store.getState());\n  }\n  componentDidUnMount() {\n    this.unSubscribe();\n  }\n  componentDidMount() {\n    this.unSubscribe = store.subscribe(this.update.bind(this));\n    this.stopLoading();\n  }\n  updateUserInfo(user, userInfo) {\n    dispatch(\"UPDATE_USER_INFO\", {\n      user: user,\n      uid: user.uid,\n      userInfo: userInfo\n    });\n  }\n  getUserAuthInfo() {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      app.auth.onAuthStateChanged(user => {\n        if (user) {\n          app.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n            let userInfo = snapshot.val();\n            resolve(userInfo);\n            _this.stopLoading();\n            dispatch(\"UPDATE_USER_INFO\", {\n              user: user,\n              uid: user.uid,\n              userInfo: snapshot.val()\n            });\n          });\n        } else {\n          reject(true);\n          _this.stopLoading();\n          return dispatch(\"UPDATE_USER_INFO\", {\n            uid: null,\n            userInfo: null,\n            user: null\n          });\n        }\n        dispatch(\"UPDATE_LOADING_STATE\", {isLoad: true});\n      });\n    });\n  }\n  stopLoading() {\n    dispatch(\"UPDATE_LOADING_STATE\", {isLoad: true});\n  }\n  render() {\n    if (!this.state.isLoad) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        <HashRouter>\n          <div>\n            <div>\n              <Route\n                path=\"/login\"\n                exact\n                render={props => (\n                  <Login\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    currentUser={this.state.user}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={props => (\n                  <SignUp\n                    updateUserInfo={this.updateUserInfo}\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    currentUser={this.state.user}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                path=\"/table/:id\"\n                render={props => (\n                  <Table\n                    currentTableId={\n                      this.state.currentTableId\n                    }\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    userInfo={this.state.userInfo}\n                    chatroom={this.state.chatroom}\n                    tables={this.state.tables}\n                    tableList={this.state.tableList}\n                    currentUser={this.state.user}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Lobby\n                    isLoad={this.state.isLoad}\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    tables={this.state.tables || null}\n                    currentUser={this.state.user}\n                    tableList={this.state.tableList}\n                  />\n                )}\n              />\n            </div>\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n","module.exports = __webpack_public_path__ + \"d78f81ef470d6731d6d27748d4890463.svg\";"],"sourceRoot":""}
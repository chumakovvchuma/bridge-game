{"version":3,"sources":["webpack:///./src/images/logo.svg","webpack:///./src/images/open.svg","webpack:///./src/images/play.svg","webpack:///./src/images/avatar/0.svg","webpack:///./src/images/avatar/1.svg","webpack:///./src/images/avatar/2.svg","webpack:///./src/images/avatar/3.svg","webpack:///./src/images/avatar/4.svg","webpack:///./src/images/avatar/5.svg","webpack:///./src/images/avatar/6.svg","webpack:///./src/images/avatar/7.svg","webpack:///./src/images/avatar/8.svg","webpack:///./src/images/avatar/9.svg","webpack:///./src/images/avatar/10.svg","webpack:///./src/images/avatar/11.svg","webpack:///./src/images/avatar/12.svg","webpack:///./src/images/avatar/13.svg","webpack:///./src/images/avatar/14.svg","webpack:///./src/images/avatar/15.svg","webpack:///./src/images/avatar/16.svg","webpack:///./src/images/avatar/17.svg","webpack:///./src/images/avatar/18.svg","webpack:///./src/images/avatar/19.svg","webpack:///./src/images/avatar/20.svg","webpack:///./src/images/avatar/robot.svg","webpack:///./src/images/avatar/avatar_slot.svg","webpack:///./src/images/avatar/21.svg","webpack:///./src/firebase/db.js","webpack:///./src/firebase/config.js","webpack:///./src/components/shape/shape.js","webpack:///./src/components/constant.js","webpack:///./src/reducer/reducer.js","webpack:///./src/components/thumbnail.js","webpack:///./src/components/userState.js","webpack:///./src/components/header.js","webpack:///./src/components/login.js","webpack:///./src/helper/helper.js","webpack:///./src/components/card.js","webpack:///./src/components/getCurrentMaxTrick.js","webpack:///./src/components/trick.js","webpack:///./src/components/socre.js","webpack:///./src/components/trickScore.js","webpack:///./src/components/scoreBoard.js","webpack:///./src/components/auctionList.js","webpack:///./src/components/auction.js","webpack:///./src/components/player.js","webpack:///./src/components/auctionResult.js","webpack:///./src/components/examineCards.js","webpack:///./src/components/getWinnerCard.js","webpack:///./src/components/playerReadyList.js","webpack:///./src/components/game.js","webpack:///./src/components/sidebar/recordItem.js","webpack:///./src/components/dotIndicator/dot.js","webpack:///./src/components/sidebar/gameRecord.js","webpack:///./src/components/sidebar/hand.js","webpack:///./src/components/sidebar/rewindAuction.js","webpack:///./src/components/sidebar/rewindResult.js","webpack:///./src/components/sidebar/gameRewind.js","webpack:///./src/components/chatroom.js","webpack:///./src/components/sidebar/sidebar.js","webpack:///./src/reducer/chatroomModel.js","webpack:///./src/reducer/tableModel.js","webpack:///./src/components/loading.js","webpack:///./src/components/table.js","webpack:///./src/components/openTables.js","webpack:///./src/components/playingTables.js","webpack:///./src/components/lobby.js","webpack:///./src/components/signUp.js","webpack:///./src/index.js","webpack:///./src/images/loading.svg"],"names":["module","exports","__webpack_require__","p","firebaseApp","a","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","DB","auth","onAuthChanged","callback","onAuthStateChanged","user","console","log","getNodeByPathOnce","path","action","database","ref","once","getNodeByPath","on","pushDataByPath","data","push","cancelListenDataChange","off","listenPathChildren","setNodeByPath","set","getDataByPathOnce","getNewChildKey","node","child","key","updateTableDataByID","id","updateTableGameDataByPath","game","setTableListData","getChatRoomById","Promise","resolve","reject","snapshot","val","getTableByLinkId","linkId","Error","catch","error","message","signInWithEmailAndPassword","info","email","password","getCurrentUser","uid","userInfo","shape_Heart","_ref","scale","_ref$fill","fill","undefined","react_default","createElement","shape_SvgContainer","ratio","d","shape_Spade","_ref2","_ref2$fill","shape_Diamond","_ref3","_ref3$fill","points","w","shape_Club","_ref4","_ref4$fill","_ref5","children","width","height","Math","floor","viewBox","transform","CARD_NUM","RESULT","SUIT_SHAPE","0","1","2","3","4","CARD_RANK","DEFAULT_GAME","deal","bid","isDb","isRdb","trick","trump","order","isGameOver","PLAYERS","GAME_STATE","DIRECTION","Emoji","dispatch","type","store","Object","assign","reducer_dispatchToDatabase","currentUser","timeStamp","Date","getTime","players","slice","newPlayerInfo","uidKey","displayName","tableKey","tableRef","newTable","createTime","gameState","playerInfo","C1-robot","C2-robot","C3-robot","-1","ready","table","tableData","record","newPlayers","map","player","includes","avatar","index","avaters","playerIndex","updateTable","every","state","cards","newGame","targetCardIndex","findIndex","card","value","winnerCard","winner","isWin","targetCardInex","currentCard","maxTrick","color","emptySeatIndex","updatePlayers","time","newMessage","isPlayer","some","content","tableList","userList","redux","isLoad","tables","chatroom","updatedTables","currentTableId","closeTables","es","then","Avatar","_0_default","_1_default","_2_default","_3_default","_4_default","5","_5_default","6","_6_default","7","_7_default","8","_8_default","9","_9_default","10","_10_default","11","_11_default","12","_12_default","13","_13_default","14","_14_default","15","_15_default","16","_16_default","17","_17_default","18","_18_default","19","_19_default","20","_20_default","avatarNum","keys","length","thumbnail_Thumbnail","_ref$name","name","_ref$size","size","_ref$disabled","disabled","_ref$offset","offset","_ref$border","border","_ref$styleName","isCurrentUser","styleName","_ref$robotMargin","robotMargin","_ref$robotOffset","robotOffset","shiftAvatar","split","str","charCodeAt","reduce","sum","num","source","robot_default","className","style","borderRadius","marginTop","src","thumbnail_ThumbnailWithTag","_ref2$name","_ref2$size","_ref2$disabled","_ref2$offset","_ref2$border","_ref2$isCurrentUser","_ref2$styleName","thumbnail_ThumbailGroup","teamOrder","members","filter","thumbnail_ThumbailGroupWithTag","styleObj","styleOb","thumbnail_WaitingThumbnail","_React$Component","WaitingThumbnail","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","posY","random","position","stop","isGoingUp","changeImg","bind","timer","setInterval","_inherits","Component","_createClass","mount","setState","dy","prevProps","clearInterval","img","avatar_slot_default","userState","UserState","userState_classCallCheck","userState_possibleConstructorReturn","isOpen","handleSignOut","closePanel","signOut","_this2","onClick","Link","to","components_header","Header","header_classCallCheck","header_possibleConstructorReturn","getUserAuthInfo","rightTopCorner","userProfile","registerBtns","roomNum","roomInfo","isTableColor","logo_default","login","Login","login_classCallCheck","login_possibleConstructorReturn","redirect","redirectToLobbyIfLogin","handleLogin","_this3","_state","_this4","Redirect","placeholder","onChange","e","currentTarget","getRandomKey","n","arguments","letter","Array","from","join","getRandomInt","min","max","card_TrickCard","card_Card","flipUp","_ref2$evt","evt","kind","wrapperName","getCurrentMaxTrick","apply","_toConsumableArray","components_trick","Trick","trick_classCallCheck","trick_possibleConstructorReturn","fadeOutCards","setTimeout","direction","_props","cardsByPlayer","isTrickFinish","currentTrick","hand","trickCards","sort","cardA","cardB","userHand","i","teamScore","teamA","teamB","winningScore","trickScore","TrickScore","trickScore_classCallCheck","trickScore_possibleConstructorReturn","windowWidth","windowHeight","score","playerList","innerStyle","resizeRatio","thumbnailSize","minWidth","scoreBoard","ScoreBoard","scoreBoard_classCallCheck","scoreBoard_possibleConstructorReturn","recordGame","_props$table","indexOf","playerTeamScore","winScore","resultWords","_game$bid","declarer","isCurrentUserAPlayer","isUserWin","resultAction","widnowHeight","auctionList_AuctionList","result","resultsNum","ceil","res","re","j","resultItem","opt","components_auction","Auction","auction_classCallCheck","auction_possibleConstructorReturn","visibility","current","updateBid","validateUserTurnAndsetTrump","newBid","isAllPass","hasValidTrump","_props2","trickOpt","trumpOpt","allTrickOpt","selectedTrump","DoubleBtn","ReDoubleBtn","playerThumbnails","isFinishAuction","player_Player","_ref$current","auctionResult_AuctionResult","AuctionResult","auctionResult_classCallCheck","auctionResult_possibleConstructorReturn","auctionResult_inherits","auctionResult_createClass","top","right","mapToFourHands","userIndex","examineCards_getRandomCards","randomIndex","validateShuffle","examineCards_fourHands","getWinnerCard_findMaxValueByTrump","arr","list","item","getWinnerCard_getWinnerCard","cardValue","cardsMatchCurrentTrick","noTrumpCards","first","getWinnerCard_toConsumableArray","_cardsMatchCurrentTri","firstHand","_slicedToArray","tmp","trumpRef","playerReadyList","PlayerReadyList","playerReadyList_classCallCheck","playerReadyList_possibleConstructorReturn","setReadyState","checkReadyState","startGame","_props3","isAnyEmptySeat","seat","isAllPlayerReady","playBtns","thumbnails","playerName","currentUserCanPlay","isTableOwner","zIndex","roomId","notesText","components_game","Game","game_classCallCheck","game_possibleConstructorReturn","endAuction","window","innerWidth","innerHeight","getNextMaxTrick","shuffle","suffleCardsWhenReady","handleResize","getAuctionStatus","addEventListener","removeEventListener","game_toConsumableArray","maxTrickNum","shuffleCards","isEndOfCurrentTrick","isDummyMode","hands","offsetIndex","examineCards_toConsumableArray","offsetPlayers","getOffsetDatabyCurrentUser","flipIndex","currentTurnPlayer","isCurrentUserPlayer","playerHand","playerHandIndex","b","display","mapResult","dislayList","flat","totalLen","mid","threeRow","mapFlipDownCards","firstCard","constant_PLAYER_NUM","examineCards_getFirstCard","hasFollowSameSuit","examineCards_hasSameSuitWithFirstCard","cardsInHand","each","declarerIndex","dummyPlayer","declarerPlayer","isValidCard","canBeClick","allowClickEvt","totalCardsInHand","suit","len","totalSuitType","sidebarWidth","horCardStyle","left","verTopPos","suitNum","getHandHeight","verEdgePos","isAllReady","bottom","sidebar_recordItem","RecordItem","recordItem_classCallCheck","recordItem_possibleConstructorReturn","changeRecord","dot_Dot","page","changePage","GameRecord","gameRecord_classCallCheck","gameRecord_possibleConstructorReturn","recordList","dots","dotsNum","concat","start","end","recordItem","currentRecord","dotItem","hand_Hand","displaySuit","rewindAuction_RewindAuction","rewindResult_RewindResult","GameRewind","gameRewind_classCallCheck","gameRewind_possibleConstructorReturn","_props$record","fourHands","components_chatroom","Chatroom","chatroom_classCallCheck","chatroom_possibleConstructorReturn","sendMessage","handleChange","handleKeyPress","addEmoji","msgEnd","emoji","scrollToBottom","scrollIntoView","behavior","block","messageList","emojiList","emj","viewers","symbol","backgroundColor","msg","el","float","clear","rows","col","onKeyPress","sidebar","Sidebar","sidebar_classCallCheck","sidebar_possibleConstructorReturn","tab","handleTab","marginLeft","chatroomModel","ChatroomModel","chatroomModel_classCallCheck","get","update","listenChanged","tableModel","TableModel","tableModel_classCallCheck","listenTableChange","components_loading","Loading","loading_classCallCheck","loading_possibleConstructorReturn","loading_default","components_table","Table","table_classCallCheck","table_possibleConstructorReturn","match","params","location","hash","canRedirect","isClosed","addPlayerToTable","randomColor_default","model","canBePlayer","canBeViewer","Boolean","targetTable","openTables","OpenTables","openTables_classCallCheck","openTables_possibleConstructorReturn","createTable","setCurrentTable","tableLinks","emptySeats","PLAYER_NUM","owner","openBtn","title","components_playingTables","playingTables_classCallCheck","playingTables_possibleConstructorReturn","_props$tableList$key","playerKey","components_lobby","Lobby","lobby_classCallCheck","lobby_possibleConstructorReturn","open_default","open","play_default","signUp","SignUp","signUp_classCallCheck","signUp_possibleConstructorReturn","confirm","agreement","handleSignUp","createUserWithEmailAndPassword","updateUserInfo","updateProfile","src_App","App","src_classCallCheck","src_possibleConstructorReturn","getState","stopLoading","unSubscribe","subscribe","HashRouter","Route","exact","render","_extends","react_dom_default","document","getElementById"],"mappings":"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","file":"main.5959.js","sourcesContent":["module.exports = __webpack_public_path__ + \"a9a323fd5ae656a5e7131b60e27fe204.svg\";","module.exports = __webpack_public_path__ + \"67ce7d5a833d9fc83f623c431a6760ce.svg\";","module.exports = __webpack_public_path__ + \"7df62acafa694b8c1a4a0528fb6546cc.svg\";","module.exports = __webpack_public_path__ + \"f576168014a0a063e9a9067746d52afe.svg\";","module.exports = __webpack_public_path__ + \"faf9092c22feba281cd0b857153cf2ac.svg\";","module.exports = __webpack_public_path__ + \"d192d5a8c77493a9b9a15e4bad4856b1.svg\";","module.exports = __webpack_public_path__ + \"abc73620aa65da15acbe08e163313e69.svg\";","module.exports = __webpack_public_path__ + \"7b537845db343dc95978342656f3dc31.svg\";","module.exports = __webpack_public_path__ + \"2d2ff47c522a67f3797a22229173805c.svg\";","module.exports = __webpack_public_path__ + \"d6a663b6ce16afbdddedd183bfc0b95a.svg\";","module.exports = __webpack_public_path__ + \"698ae12ca4406b41dd2c2b5f4188f232.svg\";","module.exports = __webpack_public_path__ + \"11177e33f8a5453cc4a2af006bf9f0cc.svg\";","module.exports = __webpack_public_path__ + \"7eeb4128a906d97fc444f2ec6f7f2a1e.svg\";","module.exports = __webpack_public_path__ + \"2b61df562f9ceba376a217086ea0a4b8.svg\";","module.exports = __webpack_public_path__ + \"7613d518f4a31149fa31d1ef8fa9c9c8.svg\";","module.exports = __webpack_public_path__ + \"ab790a27815c6aedaebbd55078126d7a.svg\";","module.exports = __webpack_public_path__ + \"8046cef8ebd3096cc0a092095a911f45.svg\";","module.exports = __webpack_public_path__ + \"374c11fb9598eacab7db87323f15d7d7.svg\";","module.exports = __webpack_public_path__ + \"eec13f2e2f2341c89b52487b6c6f5531.svg\";","module.exports = __webpack_public_path__ + \"9da5b3a25ce2afe1ff9a69a9a480b099.svg\";","module.exports = __webpack_public_path__ + \"7b799210bff006a8a7cdc13de038aa1c.svg\";","module.exports = __webpack_public_path__ + \"fa7e619e21d79bd64b2932efa099a21a.svg\";","module.exports = __webpack_public_path__ + \"29fd5a207752c8fb18bdeffe7c7f8c24.svg\";","module.exports = __webpack_public_path__ + \"addf317cff816fe4d291212403763c59.svg\";","module.exports = __webpack_public_path__ + \"85cd94bb43adfe2943685ae19c1ae96e.svg\";","module.exports = __webpack_public_path__ + \"86e690f3ad2e18fae51f04c2e64f688d.svg\";","module.exports = __webpack_public_path__ + \"8ca025b877e870030ea3af1681978e68.svg\";","import firebase from \"firebase\";\nimport {config} from \"./config.js\";\n\nexport const firebaseApp = firebase.initializeApp(config);\n\nexport const DB = {\n  auth: firebaseApp.auth(),\n  onAuthChanged: callback => {\n    firebaseApp.auth().onAuthStateChanged(user => {\n      if (user) {\n        callback(user);\n      } else {\n        console.log(\"no one login\");\n      }\n    });\n  },\n  getNodeByPathOnce: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .once(\"value\", action);\n  },\n  getNodeByPath: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .on(\"value\", action);\n  },\n  pushDataByPath: (path, data) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .push(data);\n  },\n  cancelListenDataChange: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .off(\"value\", action);\n  },\n  listenPathChildren: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .off(\"value\");\n  },\n  setNodeByPath: (path, data) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .set(data);\n  },\n  getDataByPathOnce: (path, action) => {\n    return firebaseApp\n      .database()\n      .ref(path)\n      .once(\"value\", action);\n  },\n  getNewChildKey: node => {\n    return firebaseApp\n      .database()\n      .ref()\n      .child(node)\n      .push().key;\n  },\n  updateTableDataByID: (id, data) => {\n    firebaseApp\n      .database()\n      .ref(`tables/${id}/`)\n      .set(data);\n  },\n  updateTableGameDataByPath: (path, game) => {\n    firebaseApp\n      .database()\n      .ref(\"tables/\" + path)\n      .set(game);\n  },\n  setTableListData: (id, data) => {\n    firebaseApp\n      .database()\n      .ref(`tableList/${id}/`)\n      .set(data);\n  },\n  getChatRoomById: id => {\n    return new Promise((resolve, reject) => {\n      DB.getNodeByPath(`chatroom/${id}/`, snapshot =>\n        resolve(snapshot.val())\n      );\n    });\n  },\n  getTableByLinkId: linkId => {\n    return new Promise((resolve, reject) => {\n      DB.getNodeByPath(`tableList/${linkId}`, snapshot => {\n        if (snapshot.val()) {\n          return DB.getNodeByPath(\n            `tables/${snapshot.val().id}/`,\n            snapshot => resolve(snapshot.val())\n          );\n        } else {\n          throw new Error(\"NO TABLE DATA IN DB\");\n        }\n      });\n    }).catch( error => console.log(error.message));\n  },\n  signInWithEmailAndPassword: info => {\n    let {email, password} = info;\n    return firebaseApp.auth().signInWithEmailAndPassword(email, password);\n  },\n  getCurrentUser: () => {\n    return new Promise((resolve, reject) => {\n      DB.auth.onAuthStateChanged(user => {\n        if (user) {\n          DB.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n            resolve({user: user, userInfo: snapshot.val()});\n          });\n        } else {\n          reject(null);\n        }\n      });\n    });\n  }\n};\n","export const config = {\n  apiKey: \"AIzaSyDsmWxFexrd890dUvpA313qvxvcjDRp1Ok\",\n  authDomain: \"wowbridge88.firebaseapp.com\",\n  databaseURL: \"https://wowbridge88.firebaseio.com\",\n  projectId: \"wowbridge88\",\n  storageBucket: \"wowbridge88.appspot.com\",\n  messagingSenderId: \"862342003288\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet redColor = \"#FF525D\";\nlet blackColor = \"#222222\";\n\nexport const Heart = ({scale, fill = \"#FF525D\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={0.89} fill={fill}>\n      <path d=\"M70.9643211,0 C59.2565148,0 53.056072,5.64335169 49.9709368,10.1546618 C46.889795,5.64335169 40.6986702,0 29.0152682,0 C15.0405332,0 0,9.29808951 0,29.7129874 C0,37.7588224 1.74734105,44.1438566 5.84192287,51.0638602 C9.82779506,57.7993304 18.2685439,66.1002296 30.9298889,75.7372219 C35.8715185,79.4984213 40.4235682,82.6625486 43.3724836,84.6547112 C49.0391399,88.4833363 49.2609963,88.5228158 49.9456452,88.5232594 C49.9802548,88.5241466 50.0135332,88.5245902 50.0468117,88.5245902 C50.6941887,88.5245902 51.1401201,88.3183208 56.5574098,84.6764471 C59.5081,82.6922691 64.0641431,79.5401188 69.0102098,75.7873476 C81.6870849,66.1698733 90.1513504,57.851674 94.1682825,51.0643038 C98.2557649,44.1571643 100,37.7712429 100,29.713431 C100,9.29808951 84.9488177,0 70.9643211,0 Z\" />\n    </SvgContainer>\n  );\n};\n\nexport const Spade = ({scale, fill = \"#222\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={1} fill={fill}>\n      <path\n        d=\"M88.5085925,35.4545714 C84.7618726,29.0791639 76.8279859,21.2225289 64.9275728,12.1017285 C60.2811897,8.54098888 56.0030971,5.54662558 53.2315338,3.66150342 C47.8489868,0 47.6921609,0 47.0310732,0 C46.3716539,0 46.2152451,0 40.8347835,3.64219036 C38.0615518,5.52017509 33.7788713,8.50362231 29.1295686,12.0555451 C17.2145573,21.1574523 9.25814768,29.0300415 5.48264861,35.4541516 C1.63958096,41.9928804 0,48.0361874 0,55.6623252 C0,74.9846174 14.1481113,83.785073 27.2935382,83.785073 C33.059808,83.785073 37.4025496,82.3177007 40.6500126,80.3074635 L37.0551136,94 L56.8014075,94 L53.1693874,80.1668141 C56.4343682,82.2488454 60.8367536,83.785073 66.7252308,83.785073 C79.8614817,83.785073 94,74.9846174 94,55.6623252 C94,48.0475233 92.3579165,42.0042164 88.5085925,35.4545714 Z\"\n        fill={fill}\n      />\n    </SvgContainer>\n  );\n};\n\nexport const Diamond = ({scale, fill = \"#FF525D\"}) => {\n  let w = 93,\n    h = 100;\n  return (\n    <SvgContainer scale={scale} ratio={1} fill={fill}>\n      <polygon\n        points={`${w / 2} 0 0 ${h / 2} ${w / 2} ${h} ${w} ${h / 2}`}\n      />\n    </SvgContainer>\n  );\n};\n\nexport const Club = ({scale, fill = \"#222\"}) => {\n  return (\n    <SvgContainer scale={scale} ratio={0.98} fill={fill}>\n      <path\n        d=\"M70.3555185,31.9345189 C71.174537,29.4903991 71.587963,26.9404062 71.587963,24.3163882 C71.587963,10.9083748 60.5577593,0 47,0 C33.4422407,0 22.412037,10.9083748 22.412037,24.3163882 C22.412037,26.9404062 22.825463,29.4903991 23.6444815,31.9345189 C10.5223426,32.426872 0,43.137703 0,56.2332616 C0,69.641275 11.0302037,80.5496498 24.587963,80.5496498 C30.872037,80.5496498 36.6116944,78.2040867 40.9631111,74.3539201 L35.6686481,92.1010101 L58.1820833,92.1010101 L52.8323519,74.1692877 C57.2077037,78.12834 63.0287407,80.5496498 69.412037,80.5496498 C82.9697963,80.5496498 94,69.641275 94,56.2332616 C94,43.137703 83.4776574,32.426872 70.3555185,31.9345189 Z\"\n        fill={fill}\n      />\n    </SvgContainer>\n  );\n};\n\nconst SvgContainer = ({children, ratio, scale, fill}) => {\n  let width = scale * 100,\n    height = Math.floor(width * ratio);\n  return (\n    <div>\n      <svg\n        width={`${width}px`}\n        height={`${height}px`}\n        viewBox={`0 0 ${width} ${height}`}>\n        <g fill={fill} transform={`scale(${scale})`}>\n          {children}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {Heart, Spade, Diamond, Club} from \"./shape/shape.js\";\nexport const CARD_NUM = {\n  TOTAL: 52,\n  SUITS: 4,\n  HAND: 13\n};\n\nexport const TIMER = {\n  join: 15000,\n\n}\nexport const ROBOT_NAME = \"-robot\" ;\n\nexport const RESULT = {\n  win: \"YOU WIN\",\n  lose: \"YOU LOSE\"\n};\n\nexport const PLAYER_NUM = 4;\nexport const EMPTY_SEAT = -1;\nexport const NO_TRUMP = 4;\nexport const BID_NUM = [1, 2, 3, 4, 5, 6, 7];\n\nexport const SUIT_SHAPE = {\n  0: (scale, fill) => <Club scale={scale} fill={fill} />,\n  1: (scale, fill) => <Diamond scale={scale} fill={fill} />,\n  2: (scale, fill) => <Heart scale={scale} fill={fill} />,\n  3: (scale, fill) => <Spade scale={scale} fill={fill} />,\n  4: scale => <div>NT</div>\n};\n\nexport const CARD_RANK = [2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"A\"];\n\nexport const DEFAULT_GAME = {\n  deal: 0,\n  bid: {\n    isDb: false,\n    isRdb: false,\n    trick: 0,\n    trump: -1\n  },\n  order: -1,\n  isGameOver: false\n};\n\nexport const PLAYERS = [EMPTY_SEAT, EMPTY_SEAT, EMPTY_SEAT, EMPTY_SEAT];\nexport const GAME_STATE = {\n  join: \"join\",\n  auction: \"auction\",\n  playing: \"playing\",\n  gameover: \"gameover\",\n  close: \"close\"\n};\n\nexport const TAB_OPTION = [\"Chat\", \"Result\"];\n\nexport const DIRECTION = [\"south\", \"west\", \"north\", \"east\"];\n\nexport const Emoji = [\n  \"🤔\",\n  \"🤣\",\n  \"🤩\",\n  \"😝\",\n  \"😍\",\n  \"😵\",\n  \"🙄\",\n  \"🤭\",\n  \"😱\",\n  \"🤷\",\n  \"👍\",\n  \"👎\",\n  \"👯\",\n  \"👀\",\n  \"🐷\",\n  \"🎉\",\n  \"🎃\",\n  \"🍺\",\n  \"🔥\",\n  \"🛁\"\n];\n","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {DB} from \"../firebase/db.js\";\nimport {\n  GAME_STATE,\n  DEFAULT_GAME,\n  PLAYERS,\n  EMPTY_SEAT\n} from \"../components/constant.js\";\n\nexport const dispatch = (type, action) =>\n  store.dispatch(Object.assign({}, {type: type}, action));\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_USER_INFO\": {\n      if (!action) return;\n      return Object.assign({}, state, {\n        user: action.user,\n        userInfo: action.userInfo\n      });\n    }\n    case \"UPDATE_USER_LIST\": {\n      return Object.assign({}, state, {\n        userList: action.userList\n      });\n    }\n    case \"UPDATE_LOADING_STATE\": {\n      return Object.assign({}, state, {isLoad: action.isLoad});\n    }\n    case \"FETCH_TABLE_DATA\": {\n      // tables is an array, query table by index\n      return Object.assign({}, state, {tables: action.tables});\n    }\n    case \"UPDATE_CHAT_ROOM\": {\n      return Object.assign({}, state, {chatroom: action.chatroom});\n    }\n    case \"UPDATE_TABLE_DATA\": {\n      let {table} = action;\n      let tables = state.tables;\n      let updatedTables = Object.assign({}, tables);\n      updatedTables[table.id] = table;\n      return Object.assign({}, state, {tables: updatedTables});\n    }\n    case \"UPDATE_CURRENT_TABLE_ID\": {\n      return Object.assign({}, state, {\n        currentTableId: action.currentTableId\n      });\n    }\n    case \"FETCH_TABLE_LIST\": {\n      // tables is an array, query table by index\n      return Object.assign({}, state, {tableList: action.tableList});\n    }\n    default:\n      return state;\n  }\n};\n\nexport const dispatchToDatabase = (type, action) => {\n  switch (type) {\n    case \"CREATE_USER\": {\n      DB.setNodeByPath(`/users/${action.uid}`, action.userInfo);\n      break;\n    }\n\n    case \"CREATE_TABLE\": {\n      let {currentUser} = action;\n      if (!action.currentUser.uid) {\n        console.log(\"user is not login\");\n        return;\n      }\n      let timeStamp = new Date().getTime();\n      let players = PLAYERS.slice(0);\n      let newPlayerInfo = {};\n      let uidKey = `${currentUser.uid}`;\n      newPlayerInfo[uidKey] = {displayName: currentUser.displayName};\n      players[0] = action.currentUser.uid;\n      let tableKey = DB.getNewChildKey(\"tables\");\n      let linkId = action.tableRef || timeStamp;\n      let newTable = {\n        timeStamp: linkId,\n        createTime: linkId,\n        gameState: GAME_STATE.join,\n        id: tableKey,\n        linkId: linkId,\n        game: DEFAULT_GAME,\n        playerInfo: Object.assign(\n          {},\n          {\n            \"C1-robot\": {displayName: \"C1-robot\"},\n            \"C2-robot\": {displayName: \"C2-robot\"},\n            \"C3-robot\": {displayName: \"C3-robot\"},\n            \"-1\": {displayName: \"\"}\n          },\n          newPlayerInfo\n        ),\n        players: players,\n        ready: [true, false, false, false]\n      };\n      DB.setNodeByPath(`tables/${tableKey}`, newTable);\n      DB.setTableListData(linkId, {\n        id: tableKey,\n        players: players,\n        playerInfo: Object.assign(\n          {},\n          {\n            \"C1-robot\": {displayName: \"C1-robot\"},\n            \"C2-robot\": {displayName: \"C2-robot\"},\n            \"C3-robot\": {displayName: \"C3-robot\"},\n            \"-1\": {displayName: \"\"}\n          },\n          newPlayerInfo\n        )\n      });\n      break;\n    }\n\n    case \"CREATE_NEW_GAME\": {\n      let {table} = action;\n      let {players} = table;\n      let tableData = Object.assign({}, table);\n      let {record, game} = tableData;\n      if (record) {\n        record.push(game);\n      } else {\n        record = [game];\n      }\n\n      let robotName = \"-robot\";\n      let newPlayers = players.map(\n        player => (player.includes(robotName) ? EMPTY_SEAT : player)\n      );\n      // reset table\n      let timeStamp = new Date().getTime();\n      tableData.record = record;\n      tableData.createTime = timeStamp;\n      tableData.game = Object.assign({}, DEFAULT_GAME);\n      // tableData.players = players.filter( )\n      tableData.ready = [true, false, false, false];\n      tableData.timeStamp = timeStamp;\n      tableData.gameState = GAME_STATE.join;\n      tableData.players = newPlayers;\n      DB.setNodeByPath(`tables/${tableData.id}`, tableData);\n      break;\n    }\n    case \"START_GAME\": {\n      let {table} = action;\n      let tableData = Object.assign({}, table);\n      let {players} = tableData;\n      let avatar = [1, 2, 3];\n      let index = 0;\n      let avaters = players.map(player => {\n        return player === EMPTY_SEAT\n          ? `C${avatar[index++]}-robot`\n          : player;\n      });\n      let newTable = Object.assign(\n        {},\n        tableData,\n        {ready: [true, true, true, true]},\n        {players: avaters},\n        {gameState: GAME_STATE.auction},\n        {timeStamp: new Date().getTime()}\n      );\n      DB.setNodeByPath(`tables/${newTable.id}`, newTable);\n      DB.setNodeByPath(`tableList/${table.linkId}`, {\n        id: table.id,\n        players: avaters,\n        playerInfo: table.playerInfo\n      });\n      break;\n    }\n    case \"READY_A_PLAYER\": {\n      let {table, playerIndex} = action;\n      let updateTable = Object.assign({}, table);\n      updateTable.ready[playerIndex] = true;\n\n      // batch update table, for client side usage\n      if (updateTable.ready.every(state => state === true)) {\n        updateTable.gameState = GAME_STATE.auction;\n      }\n\n      DB.setNodeByPath(`tables/${table.id}`, updateTable);\n      break;\n    }\n    case \"UPDATE_TABLE_TIMESTAMP\": {\n      DB.setNodeByPath(\n        `tables/${action.id}/timeStamp/`,\n        new Date().getTime()\n      );\n      break;\n    }\n    case \"ADD_NEW_DECK_TO_TABLE\": {\n      // todo, use high order function to wrap this\n      // create a game\n      let {cards, table} = action;\n      let newGame = Object.assign({}, table.game, {\n        cards: cards\n      });\n      DB.updateTableDataByID(`${table.id}/game/`, newGame);\n      break;\n    }\n    case \"UPDATE_WINNER_CARD\": {\n      // todo, use high order function to wrap this\n      let {table} = action;\n      let game = Object.assign({}, table.game);\n\n      let cards = game.cards;\n      game.order = action.order;\n\n      // update which player will draw first\n      let targetCardIndex = cards.findIndex(\n        card => card.value === action.winnerCard.value\n      );\n      let winner = action.winnerCard;\n      winner.isWin = true;\n      game.deal = winner.player;\n      cards[targetCardIndex] = winner;\n      // 51 means the index in the card array , the n-52 cards is given\n      if (action.order === 51) {\n        game.isGameOver = true;\n      }\n      DB.updateTableDataByID(`${table.id}/game/`, game);\n      break;\n    }\n    case \"UPDATE_CURRENT_TRICK\": {\n      // update this is how many trick players have been draw\n\n      let {table, order, deal} = action;\n      let {game} = table;\n      DB.updateTableGameDataByPath(`${table.id}/game/order/`, order);\n\n      let cards = game.cards;\n\n      let targetCardInex = cards.findIndex(\n        card => card.value === action.value\n      );\n\n      let currentCard = cards[targetCardInex];\n      currentCard.order = order;\n\n      // update deal order, who can draw card next\n      DB.updateTableGameDataByPath(`${table.id}/game/deal/`, deal);\n      DB.updateTableGameDataByPath(\n        `${table.id}/timeStamp/`,\n        new Date().getTime()\n      );\n\n      // this card has been draw in nth trick\n      // set current trick number to this card\n      if (currentCard.trick === 0) {\n        // update trick to current nth trick, e.g. players have play 4 tricks\n        // so far, the maxTrick will be 5\n        currentCard.trick = action.maxTrick;\n        // record who has this card\n        currentCard.player = (deal + 4 - 1) % 4;\n\n        DB.updateTableGameDataByPath(\n          `${table.id}/game/cards/${targetCardInex}`,\n          currentCard\n        );\n      }\n      break;\n    }\n    case \"ADD_VIEWER_TO_TABLE\": {\n      let {currentUser, table, color} = action;\n      let {linkId, id} = table;\n      DB.setNodeByPath(`tables/${id}/viewers/${currentUser.uid}`, color);\n      DB.updateTableGameDataByPath(\n        `${id}/timeStamp/`,\n        new Date().getTime()\n      );\n      // if anyone join this table, update data to table list\n      break;\n    }\n    case \"ADD_PLAYER_TO_TABLE\": {\n      let {currentUser, table, emptySeatIndex, color} = action;\n\n      let {linkId, id, players} = table;\n\n      DB.setNodeByPath(\n        `tables/${id}/players/${emptySeatIndex}`,\n        currentUser.uid\n      );\n      DB.setNodeByPath(`tables/${id}/playerInfo/${currentUser.uid}`, {\n        displayName: currentUser.displayName\n      });\n\n      DB.setNodeByPath(`tables/${id}/viewers/${currentUser.uid}`, color);\n      // if anyone join this table, update data to table list\n      let updatePlayers = players.slice(0);\n      updatePlayers[emptySeatIndex] = currentUser.uid;\n      DB.setNodeByPath(`tableList/${linkId}/players`, updatePlayers);\n      DB.setNodeByPath(\n        `tableList/${linkId}/playerInfo/${currentUser.uid}`,\n        {displayName: currentUser.displayName}\n      );\n      DB.updateTableGameDataByPath(\n        `${id}/timeStamp/`,\n        new Date().getTime()\n      );\n\n      break;\n    }\n    case \"UPDATE_AUCTION\": {\n      // in order to detect if some user isn't online anymore\n      // record current to database when a current user is deal\n      DB.updateTableGameDataByPath(\n        `${action.table.id}/game/`,\n        action.game\n      );\n      DB.updateTableGameDataByPath(\n        `${action.table.id}/timeStamp/`,\n        new Date().getTime()\n      );\n      break;\n    }\n    case \"SEND_MESSAGE_TO_CHATROOM\": {\n      let {message, currentUser, table} = action;\n      let time = new Date().getTime();\n      let newMessage = {};\n      newMessage.isPlayer = table.players.some(\n        player => player === currentUser.uid\n      );\n      newMessage.content = action.message;\n      newMessage.uid = currentUser.uid;\n      newMessage.displayName = currentUser.displayName;\n      DB.setNodeByPath(\n        `chatroom/${table.id}/message/${time}/`,\n        newMessage\n      );\n    }\n    default:\n      return null;\n  }\n};\n\nDB.getNodeByPath(\"tableList\", value => {\n  return dispatch(\"FETCH_TABLE_LIST\", {tableList: value.val()});\n});\n\nDB.getNodeByPath(\"users\", value => {\n  return dispatch(\"UPDATE_USER_LIST\", {userList: value.val()});\n});\n\nexport const store = createStore(\n  appReducer,\n  {\n    currentUser: null,\n    isLoad: false,\n    tables: {},\n    currentTableId: null,\n    closeTables: {}\n  },\n  applyMiddleware(thunk)\n);\n\nDB.getCurrentUser().then(user => {\n  dispatch(\"UPDATE_LOADING_STATE\", {isLoad: true});\n  dispatch(\"UPDATE_USER_INFO\", user);\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../style/thumbnail.scss\";\nimport {ROBOT_NAME} from \"./constant.js\";\n// import ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport avatar0 from \"../images/avatar/0.svg\";\nimport avatar1 from \"../images/avatar/1.svg\";\nimport avatar2 from \"../images/avatar/2.svg\";\nimport avatar3 from \"../images/avatar/3.svg\";\nimport avatar4 from \"../images/avatar/4.svg\";\nimport avatar5 from \"../images/avatar/5.svg\";\nimport avatar6 from \"../images/avatar/6.svg\";\nimport avatar7 from \"../images/avatar/7.svg\";\nimport avatar8 from \"../images/avatar/8.svg\";\nimport avatar9 from \"../images/avatar/9.svg\";\nimport avatar10 from \"../images/avatar/10.svg\";\nimport avatar11 from \"../images/avatar/11.svg\";\nimport avatar12 from \"../images/avatar/12.svg\";\nimport avatar13 from \"../images/avatar/13.svg\";\nimport avatar14 from \"../images/avatar/14.svg\";\nimport avatar15 from \"../images/avatar/15.svg\";\nimport avatar16 from \"../images/avatar/16.svg\";\nimport avatar17 from \"../images/avatar/17.svg\";\nimport avatar18 from \"../images/avatar/18.svg\";\nimport avatar19 from \"../images/avatar/19.svg\";\nimport avatar20 from \"../images/avatar/20.svg\";\nimport avatar21 from \"../images/avatar/21.svg\";\nimport robot from \"../images/avatar/robot.svg\";\nimport avatarSlot from \"../images/avatar/avatar_slot.svg\";\n\nconst Avatar = {\n  0: avatar0,\n  1: avatar1,\n  2: avatar2,\n  3: avatar3,\n  4: avatar4,\n  5: avatar5,\n  6: avatar6,\n  7: avatar7,\n  8: avatar8,\n  9: avatar9,\n  10: avatar10,\n  11: avatar11,\n  12: avatar12,\n  13: avatar13,\n  14: avatar14,\n  15: avatar15,\n  16: avatar16,\n  17: avatar17,\n  18: avatar18,\n  19: avatar19,\n  20: avatar20\n};\n\nconst avatarNum = Object.keys(Avatar).length;\nexport const Thumbnail = ({\n  name = \"\",\n  size = 40,\n  disabled = false,\n  offset = 16,\n  border = false,\n  isCurrentUser = false,\n  styleName = null,\n  robotMargin = 0,\n  robotOffset = -5\n}) => {\n  let shiftAvatar = avatarNum;\n  if (name.length) {\n    shiftAvatar =\n            name\n              .split(\"\")\n              .map(str => str.charCodeAt(str) || +str)\n              .reduce((sum, num) => sum + num, 0) % avatarNum;\n  }\n  let source = Avatar[shiftAvatar];\n  if (name.includes(ROBOT_NAME)) {\n    source = robot;\n  }\n  return (\n    <div\n      className={`thumbnail disabled ${styleName}`}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: size\n      }}>\n      <div\n        className={\n          border\n            ? \"thumbnail-inner thumbnail-outline\"\n            : \"thumbnail-inner\"\n        }>\n        <div className=\"border-style\">\n          <img\n            className={disabled ? \"disabled\" : \"\"}\n            style={{marginTop: robotMargin}}\n            width={\n              border\n                ? size - offset + 5 + robotOffset\n                : size - offset + robotOffset\n            }\n            src={source}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const ThumbnailWithTag = ({\n  name = \"\",\n  size = 40,\n  disabled = false,\n  offset = 16,\n  border = false,\n  isCurrentUser = false,\n  styleName = null\n}) => {\n  return (\n    <div className=\"thumbnail-with-tag\">\n      <div className=\"tag\" />\n      <Thumbnail\n        name={name}\n        size={size}\n        disabled={disabled}\n        offset={offset}\n        border={border}\n        isCurrentUser={isCurrentUser}\n        styleName={styleName}\n      />\n    </div>\n  );\n};\n\nexport const ThumbailGroup = ({players, size, teamOrder}) => {\n  let team = players.filter((player, index) => index % 2 === teamOrder);\n  let members = team.map((player, index) => (\n    <Thumbnail key={`member-${index}`} name={player} size={size} />\n  ));\n  return <div className=\"thumbnail-group\">{members}</div>;\n};\n\nexport const ThumbailGroupWithTag = ({\n  players,\n  currentUser,\n  size,\n  styleObj,\n  teamOrder,\n  styleOb,\n  offset\n}) => {\n  let team = players.filter((player, index) => index % 2 === teamOrder);\n  let members = team.map((player, index) => {\n    if (player === currentUser.displayName) {\n      return (\n        <ThumbnailWithTag\n          key={`member-${index}`}\n          offset={offset}\n          name={player}\n          size={size}\n        />\n      );\n    } else {\n      return (\n        <Thumbnail\n          offset={offset}\n          key={`member-${index}`}\n          name={player}\n          size={size}\n        />\n      );\n    }\n  });\n  return (\n    <div className=\"thumbnail-group\" style={styleObj}>\n      {members}\n    </div>\n  );\n};\n\nexport class WaitingThumbnail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posY: Math.floor(Math.random() * 40),\n      position: 0,\n      stop: false,\n      isGoingUp: true,\n      name: \"enter\"\n    };\n    this.changeImg = this.changeImg.bind(this);\n    this.timer = setInterval(this.changeImg, 20);\n  }\n  componentDidMount() {\n    this.mount = true;\n  }\n  componentWillUnmount() {\n    this.mount = false;\n  }\n  changeImg() {\n    if (!this.mount) return;\n    let {posY} = this.state;\n    if (this.state.posY > 50) {\n      this.setState({isGoingUp: false});\n    } else if (this.state.posY < -50) {\n      this.setState({isGoingUp: true});\n    }\n    let dy;\n    if (this.state.isGoingUp) {\n      dy = Math.floor(Math.random() * 2);\n    } else if (this.state.isGoingUp === false) {\n      dy = Math.floor(Math.random() * -3);\n    }\n\n    this.setState({posY: posY + dy});\n  }\n  componentDidUpdate(prevProps) {\n    if (!this.mount) return;\n    if (this.props.stop !== prevProps.stop && this.props.stop === true) {\n      this.setState({stop: true, posY: 40});\n      clearInterval(this.timer);\n    }\n  }\n  render() {\n    let size = this.props.size || 30;\n    let disabled = this.props.disabled || false;\n    let pos = this.state.position;\n    let styleName = disabled ? `disabled ${this.state.name}` : this.state.name;\n    let img = (\n      <img\n        className={styleName}\n        style={{\n          transform: `translateY(${this.state.posY}%) scale(1.07)`\n        }}\n        width={size - 16}\n        src={avatarSlot}\n      />\n    );\n    return (\n      <div\n        className=\"waiting-thumbnail disabled\"\n        style={{\n          width: size,\n          height: size,\n          borderRadius: size\n        }}>\n        {img}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ThumbnailWithTag} from \"./thumbnail.js\";\nimport {DB} from \"../firebase/db.js\";\nimport {Link} from \"react-router-dom\";\nimport \"../style/user-state.scss\";\n\nexport default class UserState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.closePanel = this.closePanel.bind(this);\n  }\n  handleSignOut() {\n    this.closePanel();\n    DB.auth.signOut();\n  }\n  closePanel() {\n    this.setState({isOpen: false});\n  }\n  render() {\n    let {currentUser} = this.props;\n    return (\n      <div className=\"user-state-panel\">\n        <div\n          className={\n            this.state.isOpen\n              ? \"Login-state-btn open-btn\"\n              : \"Login-state-btn\"\n          }\n          onClick={() => this.setState({isOpen: !this.state.isOpen})}>\n          <ThumbnailWithTag\n            isCurrentUser={true}\n            size={40}\n            offset={5}\n            name={(currentUser && currentUser.displayName) || \"\"}\n          />\n          <div>\n            <h6>{currentUser.displayName}</h6>\n            <span>線上</span>\n          </div>\n        </div>\n        <div className={this.state.isOpen ? \"options open\" : \"options\"}>\n          <Link onClick={this.handleSignOut} to=\"/\">\n                登出\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport \"../style/header.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport logoImg from \"../images/logo.svg\";\nimport {dispatch} from \"../reducer/reducer.js\";\nimport UserState from \"./userState.js\";\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!this.props.currentUser) {\n      this.props.getUserAuthInfo().then(user => {\n        console.log(\"user login\");\n      });\n    }\n  }\n  render() {\n    let userProfile = <UserState currentUser={this.props.currentUser} />;\n    let rightTopCorner;\n    let registerBtns = (\n      <div className=\"register-btn-groups\">\n        <Link to=\"/signup\">註冊</Link>\n        <Link to=\"/login\">登入</Link>\n      </div>\n    );\n    rightTopCorner =\n            this.props.currentUser && this.props.currentUser.uid\n              ? userProfile\n              : registerBtns;\n    let {roomNum} = this.props;\n    let roomInfo = null;\n    if (roomNum) {\n      roomNum = `${roomNum}`;\n      roomInfo =\n                \"桌號 \" + roomNum.slice(roomNum.length - 3, roomNum.length);\n    }\n    return (\n      <header className={this.props.isTableColor ? \"table-header\" : \"\"}>\n        <div>\n          <Link to=\"/\">\n            <img src={logoImg} />\n            <h1>Wow Bridge</h1>\n          </Link>\n        </div>\n        <div>\n          <h3>{roomInfo}</h3>\n        </div>\n        <div>\n          <div>{rightTopCorner}</div>\n        </div>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Redirect} from \"react-router-dom\";\nimport {DB} from \"../firebase/db.js\";\nimport \"../style/signup.scss\";\nimport \"../style/btn.scss\";\nimport \"../style/checkbox.scss\";\nimport Header from \"./header.js\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      redirect: false\n    };\n    this.redirectToLobbyIfLogin();\n    this.redirectToLobbyIfLogin = this.redirectToLobbyIfLogin.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n  redirectToLobbyIfLogin() {\n    DB.getCurrentUser()\n      .then(user => {\n        if (user) {\n          this.setState({redirect: true});\n          return user;\n        } else {\n          throw new Error(\"NO CURRENT USER\");\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  handleLogin() {\n    let {email, password} = this.state;\n    if (!email || !password) return;\n    DB.signInWithEmailAndPassword(this.state)\n      .then(user => {\n        this.setState({redirect: true});\n      })\n      .catch(error => {\n        this.setState({error: error && error.message});\n      });\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"singup-wrapper\">\n          <div className=\"signup login\">\n            <h2>登入</h2>\n            <div>\n              <h3>電子信箱</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Email address\"\n                onChange={e => {\n                  this.setState({\n                    email: e.currentTarget.value\n                  });\n                }}\n                value={this.state.email}\n              />\n            </div>\n            <div>\n              <h3>密碼</h3>\n              <input\n                placeholder=\"Enter password\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    password: e.currentTarget.value\n                  });\n                }}\n                value={this.state.password}\n              />\n            </div>\n            <div className=\"error-text\">\n              {this.state.error || \"\"}\n            </div>\n            <div>\n              <div className=\"btn-group\">\n                <button\n                  onClick={this.handleLogin}\n                  className=\"btn-style-round\">\n                                    登入\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export const getKeywordFromURL = () => {\n  let urlLocation = window.location.search,\n    index = urlLocation.search(/=/g);\n  if (!urlLocation) return \"\";\n  return urlLocation.slice(index + 1, urlLocation.length);\n};\n\nexport const getKeywordObjFromURL = () => {\n  let keyword = getKeywordFromURL();\n  let urlLocation = window.location.search,\n    index = urlLocation.search(/=/g);\n  return {\n    key: urlLocation.slice(1, index),\n    value: getKeywordFromURL()\n  };\n};\n\nexport const getRandomKey = (n = 8) => {\n  let letter = \"abcdefghijklmnopqrstuvxyzABCDEFGHIJKLMNOPQRSTUVXYZ\";\n  return Array.from({length: n})\n    .fill(0)\n    .map(w => letter[Math.floor(Math.random() * (letter.length - 1))])\n    .join(\"\");\n};\n\nexport const getObj = (key, value) => {\n  let newObj = {};\n  newObj[key] = value;\n  return Object.assign({}, newObj);\n};\n\nexport const getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getObjSortKey = obj => {\n  if (!obj) {\n    return null;\n  }\n  return Object.keys(obj).sort((a, b) => a < b);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"./constant.js\";\nimport \"../style/reset.scss\";\nimport \"../style/card.scss\";\n\nexport const TrickCard = ({value}) => {\n  return (\n    <div className=\"abbbbbbbbbbbbb\">\n      <Card flipUp={true} value={value} />\n    </div>\n  );\n};\n\nexport const Card = ({value, evt = null, flipUp, name = null}) => {\n  let kind = Math.floor(value / CARD_NUM.HAND);\n  let wrapperName = name ? `card-wrapper ${name}` : \"card-wrapper\";\n  if (flipUp) {\n    return (\n      <div\n        className={wrapperName}\n        onClick={() => {\n          if (evt) {\n            evt(value);\n          }\n        }}>\n        <div className=\"card flip-up\">\n          <div className=\"card-inner\">\n            <div\n              className={\n                kind === 1 || kind === 2\n                  ? \"red value\"\n                  : \"black value\"\n              }>\n              {CARD_RANK[value % CARD_NUM.HAND]}\n            </div>\n            {SUIT_SHAPE[kind](0.235)}\n            <div className=\"large-shape\">\n              {SUIT_SHAPE[kind](0.5)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={wrapperName}>\n        <div className=\"card flip-down\">\n          <div className=\"card-inner\" />\n        </div>\n      </div>\n    );\n  }\n};\n","export const getCurrentMaxTrick = cards => {\n  if (!cards) return null;\n  return Math.max(...cards.map(card => card.trick));\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Card, TrickCard} from \"./card.js\";\nimport {getCurrentMaxTrick} from \"./getCurrentMaxTrick.js\";\nimport \"../style/game.scss\";\n\nexport default class Trick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fadeOutCards: false\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.order !== prevProps.order) {\n      if (this.props.order % 4 === 3) {\n        setTimeout(() => this.setState({fadeOutCards: true}), 2000);\n      } else {\n        this.setState({fadeOutCards: false});\n      }\n    }\n  }\n  render() {\n    let direction = [\"south-card\", \"west-card\", \"north-card\", \"east-card\"];\n    let {order, cards, cardsByPlayer, isTrickFinish} = this.props;\n    if (!cards) {\n      return null;\n    }\n\n    let currentTrick = null,\n      maxTrick = getCurrentMaxTrick(cards);\n\n    // cause maxTrick will increase if there are already four cards\n    if (maxTrick === 0) {\n      maxTrick = 1;\n    }\n\n    // show cards sequence by player order\n    if (cardsByPlayer && !this.state.fadeOutCards) {\n      // sorting tricks by player index, and filter cards by max trick\n      currentTrick = cardsByPlayer.map((hand, index) => {\n        hand = hand.sort((cardA, cardB) => cardA.value - cardB.value);\n        let trickCards = hand.map((userHand, i) => {\n          if (userHand.trick === maxTrick) {\n            return (\n              <TrickCard\n                key={`trick-card-x-index-${index}-${i}-${\n                  userHand.trick\n                }`}\n                value={userHand.value}\n              />\n            );\n          }\n        });\n\n        let hasTrickCards =\n                    trickCards.filter(\n                      card => card !== null && card !== undefined\n                    ).length > 0;\n        if (hasTrickCards) {\n          return (\n            <div\n              className={`trick-card-wrapper ${direction[index]}`}\n              key={`trick-card-${index}`}>\n              {trickCards}\n            </div>\n          );\n        } else {\n          return null;\n        }\n      });\n    }\n\n    if (currentTrick) {\n      currentTrick = currentTrick.filter(\n        card => card !== null && card !== undefined\n      );\n    }\n\n    return (\n      <div className={\"trick-area\"}>\n        <div className=\"trick-area-inner\">{currentTrick}</div>\n      </div>\n    );\n  }\n}\n","export const teamScore = cards => {\n  let teamA = 0,\n    teamB = 0;\n  cards.map((card, index) => {\n    let winningScore = card.isWin ? 1 : 0;\n    if ((index % 4) % 2 === 0) {\n      teamA += winningScore;\n    } else {\n      teamB += winningScore;\n    }\n  });\n  return {teamA: teamA, teamB: teamB};\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/trick-score.scss\";\nimport {teamScore} from \"./socre.js\";\nimport {ThumbailGroupWithTag} from \"./thumbnail.js\";\n\nexport default class TrickScore extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {table, windowWidth, windowHeight, currentUser} = this.props;\n    let {game, players} = table;\n    if (!table || !table.game.cards) {\n      return null;\n    }\n    let {playerInfo} = table;\n    let score = teamScore(game.cards);\n    let playerList = players.map(key => playerInfo[key].displayName);\n    let innerStyle = this.props.innerStyle;\n    let resizeRatio = this.props.ratio || 0.15;\n    let thumbnailStyle = {\n      width: this.props.thumbnailSize,\n      height: this.props.thumbnailSize\n    };\n    let offset = 3;\n    let thumbnailSize = this.props.thumbnailSize * 1.2;\n    return (\n      <div\n        className={\n          this.props.name\n            ? `trick-score ${this.props.name}`\n            : \"trick-score\"\n        }\n        style={innerStyle}>\n        <div\n          className=\"trick-score-inner\"\n          style={{\n            width: windowWidth * resizeRatio\n          }}>\n          <div className=\"group-wrapper\">\n            <div className=\"group\">\n              <ThumbailGroupWithTag\n                styleObj={{\n                  minWidth: thumbnailSize * 2\n                }}\n                teamOrder={0}\n                players={playerList}\n                size={thumbnailSize}\n                offset={offset}\n                currentUser={currentUser}\n              />\n              <div className=\"score\">{score.teamA}</div>\n            </div>\n            <div className=\"group\">\n              <ThumbailGroupWithTag\n                styleObj={{\n                  minWidth: thumbnailSize * 2\n                }}\n                teamOrder={1}\n                players={playerList}\n                size={thumbnailSize}\n                offset={offset}\n                currentUser={currentUser}\n              />\n              <div className=\"score\">{score.teamB}</div>\n            </div>\n          </div>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TrickScore from \"./trickScore.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {RESULT} from \"./constant.js\";\nimport \"../style/btn.scss\";\n\nexport default class ScoreBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recordGame = this.recordGame.bind(this);\n  }\n  recordGame() {\n    let {table} = this.props;\n    let {game} = table;\n    if (!table || game.order !== 51) {\n      return;\n    }\n    dispatchToDatabase(\"CREATE_NEW_GAME\", {\n      table: table\n    });\n  }\n  render() {\n    let {windowWidth, table, windowHeight, currentUser} = this.props;\n    let {game, players} = this.props.table;\n    if (!game || !game.cards) {\n      return null;\n    }\n    let playerIndex = players.indexOf(currentUser.uid);\n    let playerTeamScore = 0,\n      opponentScore = 0;\n    game.cards.map((card, index) => {\n      let winScore = card.isWin ? 1 : 0;\n      if (card.player % 2 === playerIndex % 2) {\n        playerTeamScore += winScore;\n      } else {\n        opponentScore += winScore;\n      }\n    });\n\n    let resultWords = null;\n    let {declarer, trick} = game.bid;\n\n    // trick start from 0, 0 means one trick... \n    let targetTrick = 6 + (trick + 1);\n    let isPlayerInDeclarerTeam = playerIndex % 2 === declarer % 2;\n    let isCurrentUserAPlayer = playerIndex >= 0;\n    let isUserWin = false;\n\n    if (isPlayerInDeclarerTeam && playerTeamScore >= targetTrick) {\n      resultWords = RESULT.win;\n      isUserWin = true;\n    } else if (isCurrentUserAPlayer) {\n      resultWords = RESULT.lose;\n    } else {\n      resultWords = \"\";\n    }\n\n    let resultAction = isCurrentUserAPlayer ? (\n      <button onClick={this.recordGame} className=\"btn\">\n                再來一局\n      </button>\n    ) : (\n      \"比賽結束\"\n    );\n\n    return (\n      <div\n        className={\n          isUserWin ? \"game-over-board win\" : \"game-over-board lose\"\n        }>\n        <TrickScore\n          currentUser={this.props.currentUser}\n          ratio={0.5}\n          thumbnailSize={46}\n          windowWidth={this.props.windowWidth}\n          widnowHeight={this.props.windowHeight}\n          table={this.props.table}>\n          <div className=\"game-over-board-inner\">\n            <div className=\"result\">\n              <div className=\"words\">{resultWords}</div>\n            </div>\n            <div className=\"btn-wrapper\">{resultAction}</div>\n          </div>\n        </TrickScore>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\n\nexport const AuctionList = ({result, scale}) => {\n  if (!result) {\n    return null;\n  }\n  let resultsNum = result.length;\n\n  return (\n    <div className=\"record\">\n      {Array.from({length: Math.ceil(resultsNum / 4)})\n        .fill(0)\n        .map((res, index) => (\n          <div key={getRandomKey()} className=\"row\">\n            {Array.from({length: 4})\n              .fill(0)\n              .map((re, j) => {\n                let resultItem = result[index * 4 + j];\n                if (resultItem && resultItem.opt) {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      {resultItem.opt}\n                    </div>\n                  );\n                } else if (\n                  resultItem &&\n                                    resultItem.trick >= 0\n                ) {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      <div>{resultItem.trick + 1}</div>\n                      {SUIT_SHAPE[resultItem.trump](\n                        scale,\n                      )}\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div\n                      key={getRandomKey()}\n                      className=\"bid-result\">\n                      {null}\n                    </div>\n                  );\n                }\n              })}\n          </div>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE, BID_NUM} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {AuctionList} from \"./auctionList.js\";\nimport {Thumbnail} from \"./thumbnail.js\";\nimport \"../style/auction.scss\";\n\nexport default class Auction extends React.Component {\n  constructor(props) {\n    super(props);\n    let {game} = this.props;\n    this.state = {\n      currentTrick: game.bid.trick,\n      visibility: false,\n      current: null\n    };\n    this.updateBid = this.updateBid.bind(this);\n    this.validateUserTurnAndsetTrump = this.validateUserTurnAndsetTrump.bind(\n      this\n    );\n  }\n  validateUserTurnAndsetTrump(index) {\n    // check if already current user's turn to give his bid\n    let {game, currentUser, players} = this.props;\n    if (!currentUser || !game) return;\n    if (players && currentUser) {\n      // if currentUser's Index is same as game deal, let him give bid\n\n      let currentUserIndex = players.findIndex(\n        player => player === this.props.currentUser.uid\n      );\n      if (currentUserIndex === game.deal) {\n        this.setState({\n          currentTrick: index,\n          current: index,\n          visibility: true\n        });\n      }\n    }\n  }\n  updateBid(trump, opt = null) {\n    let newBid,\n      isFinishAuction = false,\n      declarer = this.props.game.bid.declarer;\n\n    let result = this.props.game.bid.result || [];\n    if (trump > -1 && trump !== null) {\n      let bid = {\n        trick: this.state.currentTrick,\n        trump: trump\n      };\n      // udpate result\n      result.push(Object.assign({}, bid));\n\n      // update bid taker, when give a trump bid,\n      // record who is the last bid giver;\n      declarer = this.props.game.deal;\n\n      newBid = Object.assign(\n        {},\n        this.props.game.bid,\n        bid,\n        {declarer: declarer},\n        {result: result}\n      );\n    } else {\n      result.push({opt: opt});\n      // is game start\n      if (result.length >= 4) {\n        let isAllPass = result\n          .slice(result.length - 4, result.length)\n          .every(res => res.opt === \"Pass\");\n\n        //\n        let hasValidTrump = result.some(bid => bid.trump >= 0);\n        isFinishAuction = isAllPass && hasValidTrump;\n      }\n\n      // update bid\n      newBid = Object.assign({}, this.props.game.bid, {\n        result: result\n      });\n    }\n\n    let deal = this.props.game.deal;\n\n    // if (isFinishAuction) {\n    //   deal = (declarer + 1) % 4;\n    // } else {\n    //   deal = (deal + 1) % 4;\n    // }\n\n    let newGame = Object.assign(\n      {},\n      this.props.game,\n      {bid: newBid},\n      {deal: (deal + 1) % 4}\n    );\n\n    dispatchToDatabase(\"UPDATE_AUCTION\", {\n      table: this.props.table,\n      game: newGame\n    });\n    this.setState({visibility: false, current: null});\n  }\n  render() {\n    let {game, players, currentUser} = this.props;\n    let {playerInfo} = this.props.table;\n    let isCurrentUser =\n            players && players[game.deal] === this.props.currentUser.uid;\n\n    let value = game.bid.trick * 5 + game.bid.trump;\n\n    // todo: refactor\n    let trickOpt, trumpOpt;\n    if (value < 0) {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index);\n    } else if (value === 34) {\n      trickOpt = [];\n      trumpOpt = [];\n    } else if (value % 5 === 4 && value !== 0) {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt > game.bid.trick);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index);\n    } else {\n      trickOpt = Array.from({length: 7})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt >= game.bid.trick);\n      trumpOpt = Array.from({length: 5})\n        .fill(0)\n        .map((opt, index) => index)\n        .filter(opt => opt > game.bid.trump);\n    }\n\n    let allTrickOpt = trickOpt.map((opt, index) => (\n      <button\n        className={opt === this.state.current ? \"current\" : null}\n        onClick={() => {\n          this.validateUserTurnAndsetTrump(opt);\n        }}\n        key={getRandomKey()}>\n        {opt + 1}\n      </button>\n    ));\n\n    let selectedTrump =\n            this.state.currentTrick === trickOpt[0]\n              ? trumpOpt\n              : [0, 1, 2, 3, 4];\n\n    if (value === 34) {\n      selectedTrump = [];\n    }\n    selectedTrump = selectedTrump.map(opt => (\n      <div onClick={() => this.updateBid(opt, null)} key={getRandomKey()}>\n        {SUIT_SHAPE[opt](0.25)}\n      </div>\n    ));\n\n    let result = game.bid.result;\n\n    let DoubleBtn = result &&\n            !result[result.length - 1].opt && (\n      <button\n        className=\"d-btn\"\n        onClick={() => this.updateBid(-1, \"Double\")}>\n                    Dboule\n      </button>\n    );\n\n    let ReDoubleBtn = result &&\n            result[result.length - 1].opt === \"Double\" && (\n      <button\n        className=\"d-btn\"\n        onClick={() => this.updateBid(-1, \"ReDouble\")}>\n                    ReDouble\n      </button>\n    );\n\n    let playerThumbnails = players.map((player, index) => (\n      <div\n        key={`auction-thumbnail-${index}`}\n        className={\n          index === this.props.game.deal\n            ? \"default-thumbnail current\"\n            : \"default-thumbnail\"\n        }>\n        <div className=\"default-thumbnail-inner\">\n          <div className=\"default-thumbnail-inner-outline-wrapper\">\n            <div className=\"default-thumbnail-inner-outline\">\n              <Thumbnail\n                size={53}\n                current={index === this.props.game.deal}\n                name={playerInfo[player].displayName}\n              />\n            </div>\n          </div>\n          <span>{playerInfo[player].displayName}</span>\n        </div>\n      </div>\n    ));\n    if (this.props.isFinishAuction) {\n      return null;\n    }\n\n    let currentUserAPlayer = players.includes(currentUser.uid);\n    return (\n      <div className=\"auction-inner\">\n        <div className=\"thumbnail-group\">{playerThumbnails}</div>\n        {!game.bid.result && (\n          <div className=\"notes\"> Start Auction </div>\n        )}\n        <AuctionList scale={0.2} result={game.bid.result} />\n        <div className=\"option-wrapper\">\n          {isCurrentUser  && (\n            <div className=\"other-btns\">\n              <button\n                className=\"pass\"\n                onClick={() => this.updateBid(null, \"Pass\")}>\n                                Pass\n              </button>\n              {DoubleBtn}\n              {ReDoubleBtn}\n            </div>\n          )}\n          <div className=\"tricks\">{ allTrickOpt}</div>\n          {this.state.visibility && (\n            <div className=\"trumps\">{selectedTrump}</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport \"../style/thumbnail.scss\";\nimport \"../style/player.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"./thumbnail.js\";\n\nexport const Player = ({name, current = null}) => {\n  return (\n    <div className={current ? \"player current\" : \"player\"}>\n      <div className=\"player-inner\">\n        <Thumbnail\n          robotOffset={-7}\n          styleName=\"border-thumbnail\"\n          size={current ? 40 : 50}\n          offset={5}\n          name={name}\n          border={current}\n        />\n      </div>\n      <div className=\"name\">{name}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {Thumbnail, ThumbnailWithTag} from \"./thumbnail.js\";\nimport {AuctionList} from \"./auctionList.js\";\nimport \"../style/auction.scss\";\n\nexport class AuctionResult extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n\n    let {table, windowWidth, currentUser, windowHeight} = this.props;\n\n    let {game, playerInfo, players} = table;\n    if (!game || !game.bid.result) {\n      return null;\n    }\n    let playerThumbnails = players.map((player, index) => {\n      if (currentUser.uid === player) {\n        return (\n          <ThumbnailWithTag\n            key={`resultThumbnail-${index}`}\n            name={playerInfo[player].displayName}\n            size={30}\n            isCurrentUser={true}\n            offset={5}\n          />\n        );\n      } else {\n        return (\n          <Thumbnail\n            key={`resultThumbnail-${index}`}\n            name={playerInfo[player].displayName}\n            size={30}\n            offset={5}\n          />\n        );\n      }\n    });\n    return (\n      <div\n        className=\"auction-result\"\n        style={{\n          top: Math.ceil(windowWidth / 500) * 5,\n          right: Math.ceil(windowWidth / 500) * 5\n        }}>\n        <div className=\"auction-result-inner\">\n          <div className=\"thumbnail-group\">{playerThumbnails}</div>\n          <AuctionList scale={0.15} result={game.bid.result} />\n        </div>\n      </div>\n    );\n  }\n}\n","import {\n  PLAYER_NUM,\n  CARD_NUM,\n  EMPTY_SEAT,\n  NO_TRUMP,\n  DEFAULT_GAME\n} from \"./constant.js\";\nimport {getRandomInt} from \"../helper/helper.js\";\n\nexport const hasSameSuitWithFirstCard = (firstCard, cards) => {\n  if (!cards) {\n    return false;\n  }\n  return (\n    firstCard &&\n        cards.filter(card => {\n          return (\n            Math.floor(card.value / CARD_NUM.HAND) ===\n                Math.floor(firstCard.value / CARD_NUM.HAND)\n          );\n        }).length > 0\n  );\n};\n\n// get porker card detail information offset by current login user\nexport const getOffsetDatabyCurrentUser = (players, game, currentUser) => {\n  if (!game || !game.cards) return;\n\n  let {cards} = game;\n\n  // default don't offset\n  let cardsByPlayer = players\n    .map((userIndex, index) => {\n      return cards.filter((card, i) => i % players.length === index);\n    })\n    .slice(0);\n\n  let offsetIndex = players.findIndex(user => user === currentUser);\n\n  let isCurrentUserAPlayer = offsetIndex !== -1;\n\n  // user is curretn user\n  if (isCurrentUserAPlayer) {\n    return {\n      cardsByPlayer: [\n        ...cardsByPlayer.slice(offsetIndex),\n        ...cardsByPlayer.slice(0, offsetIndex)\n      ],\n      offsetPlayers: [\n        ...players.slice(offsetIndex),\n        ...players.slice(0, offsetIndex)\n      ],\n      offsetIndex: offsetIndex\n    };\n  }\n\n  return {\n    cardsByPlayer: cardsByPlayer,\n    offsetPlayers: players.slice(0),\n    offsetIndex: offsetIndex\n  };\n};\n\nexport const mapFlipDownCards = dislayList => {\n  if (!dislayList) return;\n  let flat = dislayList.flat();\n  let cardsNumberOnHand = 5;\n  let totalLen = flat.length;\n  // if cards number is under n, split flipdown card into two row;\n  if (totalLen <= cardsNumberOnHand) {\n    let mid = Math.floor(totalLen / 2);\n    return [flat.slice(0, mid), flat.slice(mid, totalLen)];\n  } else {\n    let threeRow = [[], [], []];\n    flat.map((card, index) => threeRow[index % 3].push(card));\n    return threeRow;\n  }\n};\n\nexport const getFirstCard = game => {\n  if (!game) {\n    return null;\n  }\n  // what is the first card of current trick\n  // in order to let players only can draw card as the same suit\n  if (\n    game.cards &&\n        game.cards.length >= PLAYER_NUM &&\n        game.order % PLAYER_NUM !== PLAYER_NUM - 1\n  ) {\n    return game.cards\n      .filter(card => card.order % PLAYER_NUM === 0)\n      .sort((cardA, cardB) => cardB.order - cardA.order)[0];\n  }\n  return null;\n};\n\nexport const shuffleCards = () => {\n  let cards = getRandomCards();\n  while (!validateShuffle(cards)) {\n    cards = getRandomCards();\n  }\n  return cards;\n};\n\nexport const mapToFourHands = cards => {\n  if (!cards) return;\n  return [0, 0, 0, 0]\n    .map((userIndex, index) => {\n      return cards.filter((card, i) => i % 4 === index);\n    })\n    .slice(0);\n};\n\nexport const fourHands = cards => {\n  return mapToFourHands(cards).map(hand =>\n    hand.map(value => (value % 13 > 8 ? (value % 13) - 8 : 0))\n  );\n};\n\nconst getRandomCards = () => {\n  let cards = Array.from({length: CARD_NUM.TOTAL})\n    .fill(0)\n    .map((card, i) => i);\n\n  // shuffle array algorithm\n  for (let i = cards.length - 1; i > 0; i--) {\n    let randomIndex = getRandomInt(0, CARD_NUM.TOTAL - 1);\n    [cards[i], cards[randomIndex]] = [cards[randomIndex], cards[i]];\n  }\n\n  return cards;\n};\n\nconst validateShuffle = cards => {\n  return fourHands(cards).every(\n    hand => hand.reduce((sum, value) => value + sum, 0) >= 7\n  );\n};\n\nexport const getMaxCardNumPerSuit = cardsForPlayerHand => {\n  console.log(\"max card num\");\n  return Math.max(...cardsForPlayerHand.map(suit => suit.length));\n};\n\nexport const getHandPosByCardNum = (cardsForPlayerHand, cardSize, offset) => {\n  let maxCardNum = getMaxCardNumPerSuit(cardsForPlayerHand);\n  if (maxCardNum === 0) {\n    return 0;\n  }\n  console.log(\"maxCardNum\", maxCardNum);\n  return (maxCardNum - 1) * offset + cardSize;\n};\n","import {CARD_NUM, NO_TRUMP} from \"./constant.js\";\nimport {getCurrentMaxTrick} from \"./getCurrentMaxTrick.js\";\n\n// which card has max value by the bid trump\nconst findMaxValueByTrump = (arr, trump) => {\n  if (!arr || trump === null || trump === undefined) {\n    return;\n  }\n  let list = arr\n    .filter(item => Math.floor(item.value / CARD_NUM.HAND) === trump)\n    .sort((cardA, cardB) => cardB.value - cardA.value);\n  return list.length ? list[0] : null;\n};\n\n// handle winner card logic\n// if there are any cards with same rank as trump, compare their face value\n// else follow first card's rank to compare value;\nexport const getWinnerCard = (game, cardValue) => {\n  if (!game) return;\n  let cards = game.cards,\n    maxTrick = getCurrentMaxTrick(cards);\n\n  let {trump} = game.bid;\n  let cardsMatchCurrentTrick = cards\n    .map((card, index) => Object.assign({}, card, {index: index}))\n    .filter(\n      card =>\n        (card.trick === maxTrick && card.trick > 0) ||\n                card.value === cardValue,\n    );\n  let winnerCard,\n    noTrumpCards = false;\n\n  if (cardsMatchCurrentTrick.length === 4) {\n    // which card is first been played\n    let first = Math.min(...cardsMatchCurrentTrick.map(card => card.order));\n    let [firstHand] = cardsMatchCurrentTrick.filter(\n      card => card.order === first,\n    );\n    // trump matters most, else, decide by what first hand has draw\n    if (trump !== NO_TRUMP) {\n      // filter trump cards, and compare their face value\n      let tmp = findMaxValueByTrump(cardsMatchCurrentTrick, trump);\n\n      if (tmp !== null) {\n        winnerCard = tmp;\n      } else {\n        noTrumpCards = true;\n      }\n    }\n\n    if (trump === NO_TRUMP || noTrumpCards) {\n      // if their quotient are the same, compare their value, else, let first win\n      let trumpRef = Math.floor(firstHand.value / CARD_NUM.HAND);\n      winnerCard = findMaxValueByTrump(cardsMatchCurrentTrick, trumpRef);\n    } // end of no trump\n  }\n\n  return winnerCard || null;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {EMPTY_SEAT, TIMER} from \"./constant.js\";\nimport {getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport \"../style/ready-list.scss\";\nimport {ThumbnailWithTag, WaitingThumbnail} from \"./thumbnail.js\";\nimport {Progress} from \"./progress.js\";\nexport default class PlayerReadyList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setReadyState = this.setReadyState.bind(this);\n    this.checkReadyState = this.checkReadyState.bind(this);\n    this.startGame = this.startGame.bind(this);\n  }\n  startGame() {\n    if (!this.props.table) return;\n    dispatchToDatabase(\"START_GAME\", {\n      currentUser: this.props.currentUser,\n      table: this.props.table\n    });\n  }\n  checkReadyState() {\n    let {table, currentUser} = this.props;\n    let {game, ready, players, playerInfo} = table;\n    return ready.every(player => player === false);\n  }\n  setReadyState(playerIndex) {\n    let {currentUser, table} = this.props;\n    if (!table) return;\n    let {game, gameState} = table;\n    let players = table.players.slice(0);\n    dispatchToDatabase(\"READY_A_PLAYER\", {\n      playerIndex: playerIndex,\n      table: table\n    });\n  }\n  render() {\n    let {table, currentUser} = this.props;\n    let {game, ready, players, playerInfo} = table;\n\n    if (!game) {\n      return <div> No game data </div>;\n    }\n\n    let {isGameOver, order} = game;\n    let isAnyEmptySeat = players.some(seat => seat === EMPTY_SEAT);\n    let isAllPlayerReady = ready.every(player => player === true);\n\n    // if need to sho playerReadylist\n    let showPlayerReadyList =\n            (isAnyEmptySeat && order < 0) || !isAllPlayerReady;\n\n    if (!showPlayerReadyList) {\n      return null;\n    }\n\n    let playBtns = null;\n\n    let thumbnails = players.map((player, index) => {\n      let playerName;\n      let size = 70;\n      let offset = 0;\n\n      if (playerInfo[player]) {\n        playerName = playerInfo[player].displayName;\n      }\n\n      if (!playerName) {\n        return (\n          <div\n            key={`join-plyaer-${index}`}\n            className=\"player-ready-wrapper\">\n            <WaitingThumbnail size={size} />\n            <span>等候中</span>\n          </div>\n        );\n      }\n\n      return (\n        <div\n          key={`join-player-${index}`}\n          className=\"player-ready-wrapper\">\n          <ThumbnailWithTag\n            isCurrentUser={players[index] === currentUser.uid}\n            size={size}\n            offset={offset}\n            disabled={!ready[index]}\n            name={playerName}\n          />\n          <span>{playerName}</span>\n        </div>\n      );\n    });\n\n    let currentUserCanPlay;\n    let isTableOwner = currentUser.uid === players[0];\n\n    if (players.includes(currentUser.uid)) {\n      currentUserCanPlay = players.some(\n        (player, i) => player === currentUser.uid && !ready[i]\n      );\n\n      playBtns = players.map((player, index) => {\n        if (player === currentUser.uid && !ready[index]) {\n          return (\n            <div key={`playBtn-${index}`}>\n              <br />\n              <button\n                style={{zIndex: 5}}\n                onClick={() => this.setReadyState(index)}\n                className=\"btn\">\n                                加入牌局\n              </button>\n            </div>\n          );\n        } else {\n          return <div key={`playBtn-${index}`} />;\n        }\n      });\n    }\n\n    let startGame = (\n      <button onClick={this.startGame} className=\"btn\">\n                開始牌局\n      </button>\n    );\n\n    let roomId = `${table.linkId}`;\n    let roomNum = \"桌號 \" + roomId.slice(roomId.length - 3, roomId.length);\n    let notesText = isTableOwner\n      ? \"按下方按鈕立即開始牌局\"\n      : \"等候其他玩家中...\";\n\n    return (\n      <div className=\"player-ready-list\">\n        <div className=\"player-ready-list-inner\">\n          <h3>\n            <span>{roomNum}</span>\n          </h3>\n          <div className=\"row\"> {thumbnails}</div>\n          {!currentUserCanPlay && (\n            <div className=\"waiting-info\">{notesText}</div>\n          )}\n          <div className=\"btn-wrapper\">\n            {currentUserCanPlay && playBtns}\n            {isTableOwner && startGame}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"../style/reset.scss\";\nimport \"../style/game.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getRandomInt, getRandomKey} from \"../helper/helper.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {Card} from \"./card.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {GAME_STATE} from \"./constant.js\";\nimport Trick from \"./trick.js\";\nimport {\n  CARD_NUM,\n  DIRECTION,\n  EMPTY_SEAT,\n  NO_TRUMP,\n  DEFAULT_GAME\n} from \"./constant.js\";\nimport TrickScore from \"./trickScore.js\";\nimport ScoreBoard from \"./scoreBoard.js\";\nimport Auction from \"./auction.js\";\nimport {Player} from \"./player.js\";\nimport {AuctionResult} from \"./auctionResult.js\";\nimport {\n  hasSameSuitWithFirstCard,\n  getOffsetDatabyCurrentUser,\n  mapFlipDownCards,\n  getFirstCard,\n  shuffleCards,\n  getHandPosByCardNum\n} from \"./examineCards.js\";\nimport {getWinnerCard} from \"./getWinnerCard.js\";\nimport PlayerReadyList from \"./playerReadyList.js\";\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let {game} = this.props.table;\n    this.state = {\n      endAuction: game && game.order >= 0,\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    };\n    this.deal = this.deal.bind(this);\n    this.getNextMaxTrick = this.getNextMaxTrick.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.suffleCardsWhenReady = this.suffleCardsWhenReady.bind(this);\n    this.endAuction = this.endAuction.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.getAuctionStatus = this.getAuctionStatus.bind(this);\n  }\n  handleResize() {\n    this.setState({\n      windowWidth: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n  componentDidUpdate(prevProps) {\n    let newTable = this.props.table;\n    let oldTable = prevProps.table;\n\n    // todo, using a promise to do this task\n    this.suffleCardsWhenReady();\n  }\n\n  suffleCardsWhenReady() {\n    // when seats is full and has no cards on databse\n    let {players, game, gameState} = this.props.table;\n    if (players) {\n      let isAnyEmptySeat = players.some(seat => seat === EMPTY_SEAT);\n      if (\n        !isAnyEmptySeat &&\n                !game.cards &&\n                gameState === GAME_STATE.auction\n      ) {\n        this.shuffle();\n      }\n    }\n  }\n  // so far, how many tricks have been played ?\n  getNextMaxTrick() {\n    // if (!this.props.table || this.props.table.game) return;\n    let {game} = this.props.table;\n    if (!game) {\n      return;\n    }\n    let cards = game.cards,\n      maxTrick = Math.max(...cards.map(card => card.trick)),\n      maxTrickNum = cards.filter(card => card.trick === maxTrick).length;\n    if (maxTrick === 0 || maxTrickNum >= 4) {\n      return maxTrick + 1;\n    }\n    return maxTrick;\n  }\n  endAuction() {\n    this.setState({endAuction: true});\n  }\n  deal(value) {\n    let {table} = this.props;\n    let {game} = this.props.table;\n    if (!game) {\n      return;\n    }\n    let currentPlayer = game.deal;\n    let order = game.order + 1;\n\n    dispatchToDatabase(\n      \"UPDATE_CURRENT_TRICK\",\n      Object.assign(\n        {},\n        {\n          table: table,\n          value: value,\n          time: new Date().getTime(),\n          maxTrick: this.getNextMaxTrick(),\n          order: order,\n          deal: (game.deal + 1) % 4\n        }\n      )\n    );\n\n    let winnerCard = getWinnerCard(game, value);\n\n    // make sure winnerCard exists, and write winner to database\n    if (winnerCard) {\n      // remove index data while dispatch to database\n      let card = Object.assign({}, winnerCard);\n      delete card.index;\n\n      dispatchToDatabase(\n        \"UPDATE_WINNER_CARD\",\n        Object.assign({}, this.props, {\n          table: table,\n          winnerCard: card,\n          order: order,\n          deal: card.player\n        })\n      );\n    }\n  }\n  shuffle() {\n    let cards = shuffleCards();\n    // get new cards\n    cards = cards.map(card => ({\n      value: card,\n      trick: 0\n    }));\n    // todo bid\n    dispatchToDatabase(\"ADD_NEW_DECK_TO_TABLE\", {\n      table: this.props.table,\n      cards: cards\n    });\n  }\n  getAuctionStatus(game) {\n    // check if fishish auction\n    let result = game.bid.result;\n\n    if (!game || !result) {\n      return false;\n    }\n\n    return (\n      result.length >= 4 &&\n            game.bid.trump >= 0 &&\n            result\n              .slice(result.length - 4, result.length)\n              .every(res => res.opt === \"Pass\")\n    );\n  }\n  render() {\n    let {table, currentUser} = this.props;\n\n    let {game, players, ready} = table;\n\n    let {cards, isGameOver} = game;\n\n    let isEndOfCurrentTrick = game.order % 4 === 3;\n    let isFinishAuction = this.getAuctionStatus(game);\n    // set true to give dummy's card to declarer\n    let isDummyMode = isFinishAuction && true;\n\n    // class name for each hand\n    let hands;\n    let {cardsByPlayer, offsetPlayers, offsetIndex} =\n            getOffsetDatabyCurrentUser(players, game, currentUser.uid) || {};\n\n    // turn cards to 4 hands\n    if (cards && cards.length === CARD_NUM.TOTAL) {\n      let currentUserIndex = players.findIndex(\n        user => user === currentUser.uid\n      );\n\n      // if dummy mode, let it be dummy's index, esle let it be something larger\n      let flipIndex = isDummyMode ? (game.bid.declarer + 2) % 4 : 6;\n      let isValidFlipIndex = flipIndex < 4;\n\n      if (isValidFlipIndex) {\n        // udpate dummy hand's index in offset player list\n        flipIndex = offsetPlayers.findIndex(\n          player => player === players[flipIndex]\n        );\n      }\n\n      let currentTurnPlayer = players[game.deal];\n      let isCurrentUserPlayer = players.includes(currentUser.uid);\n\n      // cardsByPlayer already offset by current login user's index\n      hands = cardsByPlayer.map((hand, index) => {\n        let playerHand = offsetPlayers[index];\n        let playerHandIndex = index; // zero will alwasy be current login user\n\n        // makesure dummy hand can view declarer's card\n        if (flipIndex === 0) {\n          flipIndex = 2;\n        }\n\n        // only show cards didn't played\n        hand = hand\n          .sort((a, b) => a.value - b.value)\n          .filter(card => card.trick === 0);\n\n        if (playerHandIndex === 1 && flipIndex !== 1) {\n          hand = hand.sort((a, b) => b.value - a.value);\n        }\n\n        let currentUserIndex = 0;\n\n        // handle display issue for both weat/east players\n        let handCopy = hand.map(userHand =>\n          Object.assign({}, userHand)\n        );\n\n        let display = [[], [], [], []];\n        handCopy.map(card =>\n          display[Math.floor(card.value / CARD_NUM.HAND)].push(card)\n        );\n\n        // handle flip down card, group them into n rows base on\n        // how many cards left\n        display = display.filter(item => item.length !== 0);\n\n        // decide to flip down which players card\n        // use playerHandIndex to decide , playerHandIndex 0 means current user\n        // if current user is not a player, show sorted cards and don't flip them\n        if (\n          playerHandIndex !== currentUserIndex &&\n                    playerHandIndex !== flipIndex &&\n                    isCurrentUserPlayer\n        ) {\n          let mapResult = mapFlipDownCards(display);\n          if (mapResult) {\n            display = mapResult;\n          }\n        }\n\n        // handle sort isssue of west player, should sort\n        // from big to small\n        let firstCard = getFirstCard(game);\n\n        let hasFollowSameSuit = hasSameSuitWithFirstCard(\n          firstCard,\n          display.flat()\n        );\n\n        let cardsInHand = display.map((each, index) => {\n          // use playerHandIndex to decide flip up whose cards\n          // playerHandIndex === 0 means current user\n          let declarerIndex = game.bid.declarer;\n\n          let dummyPlayerIndex = (declarerIndex + 2) % 4;\n          let dummyPlayer = players[dummyPlayerIndex];\n\n          let declarerPlayer = players[declarerIndex];\n\n          // if player is nither declarer nor dummy plaer\n          let isValidCard = isFinishAuction && isCurrentUserPlayer;\n          let canBeClick =\n                        isValidCard &&\n                        // current player is equal to south;\n                        currentTurnPlayer === playerHand &&\n                        playerHandIndex === currentUserIndex;\n\n          // current turn is dummay hand, and current login user is declare,\n          // let current user can control dummy hand's card\n          if (\n            isDummyMode &&\n                        isValidCard &&\n                        dummyPlayer === currentTurnPlayer\n          ) {\n            if (\n              currentUser.uid === declarerPlayer &&\n                            playerHandIndex === 2\n            ) {\n              canBeClick = true;\n            }\n            if (\n              currentUser.uid === dummyPlayer &&\n                            playerHandIndex === currentUserIndex\n            ) {\n              canBeClick = false;\n            }\n          }\n\n          let flipUp =\n                        !isCurrentUserPlayer ||\n                        playerHandIndex === currentUserIndex ||\n                        playerHandIndex === flipIndex;\n\n          // if those card has same suit with first player,\n          // users need only to draw those cards\n          // if not, they can draw any cards\n          let allowClickEvt = card => {\n            return (\n              firstCard === null ||\n                            !hasFollowSameSuit ||\n                            Math.floor(card.value / CARD_NUM.HAND) ===\n                                Math.floor(firstCard.value / CARD_NUM.HAND)\n            );\n          };\n\n          return each.map((card, i) => (\n            <Card\n              name={\n                canBeClick && allowClickEvt(card)\n                  ? `click-able l${index} item-${i}`\n                  : `l${index} item-${i}`\n              }\n              flipUp={flipUp}\n              evt={\n                canBeClick && allowClickEvt(card)\n                  ? this.deal\n                  : null\n              }\n              key={`card-random-${i}`}\n              value={card.value}\n            />\n          ));\n        });\n\n        // calculate hand style and card postion\n        let totalCardsInHand = cardsInHand\n          .map(suit => suit.length)\n          .reduce((sum, len) => sum + len, 0);\n        let totalSuitType = cardsInHand.filter(\n          suit => suit.length !== 0\n        ).length;\n\n        // handle resize\n        let sidebarWidth = this.state.windowWidth >= 1200 ? 380 : 300;\n        let horCardOffset = 40;\n        let cardSize = 100;\n\n        let horCardStyle =\n                    DIRECTION[index] === \"north\" || DIRECTION[index] === \"south\"\n                      ? {\n                        left:\n                                  (this.state.windowWidth -\n                                      sidebarWidth -\n                                      (horCardOffset * totalCardsInHand +\n                                          horCardOffset)) /\n                                  2\n                      }\n                      : null;\n\n        const getHandHeight = suitNum => {\n          let cardh = 125,\n            shift = 70;\n          return (\n            suitNum * cardh - (cardh - shift) * (suitNum - 1) + 10\n          );\n        };\n\n        let verTopPos =\n                    DIRECTION[index] === \"west\" || DIRECTION[index] === \"east\"\n                      ? (this.state.windowHeight -\n                              getHandHeight(totalSuitType)) /\n                          2\n                      : null;\n\n        let verEdgePos;\n\n        if (verTopPos && DIRECTION[index] === \"west\") {\n          verEdgePos = {top: verTopPos};\n        }\n        if (verTopPos && DIRECTION[index] === \"east\") {\n          verEdgePos = {top: verTopPos};\n        }\n\n        return (\n          <div\n            className={DIRECTION[index]}\n            style={horCardStyle || verEdgePos}\n            key={`player-hand-index-${index}`}>\n            <div className=\"hand-inner\">\n              <div className=\"user-hand\">{cardsInHand}</div>\n              <Player\n                current={\n                  currentTurnPlayer === playerHand &&\n                                    isFinishAuction\n                }\n                name={\n                  (table.playerInfo[playerHand] &&\n                                        table.playerInfo[playerHand]\n                                          .displayName) ||\n                                    \"Anonymous\"\n                }\n              />\n            </div>\n          </div>\n        );\n      });\n    } // end of cards\n\n    let isAllReady = table.ready.every(player => player === true);\n\n    // dom elements\n    if (isGameOver) {\n      return (\n        <div className=\"game\">\n          <div>\n            <ScoreBoard\n              startGame={this.suffleCardsWhenReady}\n              currentUser={currentUser}\n              windowWidth={this.state.windowWidth}\n              widnowHeight={this.state.windowHeight}\n              table={this.props.table}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"game\">\n        {!isAllReady && (\n          <PlayerReadyList\n            suffleCardsWhenReady={this.suffleCardsWhenReady}\n            currentUser={currentUser}\n            table={this.props.table}\n          />\n        )}\n        {isFinishAuction && (\n          <AuctionResult\n            currentUser={currentUser}\n            windowWidth={this.state.windowWidth}\n            windowHeight={this.state.windowHeight}\n            table={table}\n          />\n        )}\n        <div className=\"auction\">\n          {game.bid &&\n                        game.cards && (\n            <Auction\n              isFinishAuction={isFinishAuction}\n              endAuction={this.endAuction}\n              game={game}\n              table={table}\n              currentUser={currentUser}\n              players={players}\n            />\n          )}\n        </div>\n        <div className=\"arena\">\n          <div className=\"hands\">{hands}</div>\n          <Trick\n            cards={cards}\n            cardsByPlayer={cardsByPlayer}\n            order={game.order}\n            isTrickFinish={isEndOfCurrentTrick}\n          />\n          <TrickScore\n            currentUser={currentUser}\n            resizeRatio={0.15}\n            innerStyle={{\n              bottom: Math.ceil(this.state.windowWidth / 500) * 5,\n              right: Math.ceil(this.state.windowWidth / 500) * 5\n            }}\n            thumbnailSize={30}\n            name=\"right-bottom-pos\"\n            windowWidth={this.state.windowWidth}\n            widnowHeight={this.state.windowHeight}\n            table={this.props.table}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SUIT_SHAPE} from \"../constant.js\";\nimport {teamScore} from \"../socre.js\";\n\nexport default class RecordItem extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {index, record, current} = this.props;\n    if (!record) {\n      return (\n        <div className=\"record-item\">\n          <div className=\"empty\" />\n        </div>\n      );\n    }\n    let score = teamScore(record.cards);\n    return (\n      <div\n        onClick={() => this.props.changeRecord(index)}\n        className={\n          current\n            ? \"record-item active current\"\n            : \"record-item active\"\n        }>\n        <div>{index + 1}</div>\n        <div className=\"bid\">\n          <span>{record.bid.trick + 1}</span>\n          {SUIT_SHAPE[record.bid.trump](0.15)}\n        </div>\n        <div>{score.teamA}</div>\n        <div>{score.teamB}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Dot = ({current, page, changePage}) => {\n  return (\n    <div\n      onClick={() => changePage(page)}\n      className={current ? \"dot current\" : \"dot\"}\n    />\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport RecordItem from \"./recordItem.js\";\nimport {ThumbailGroup} from \"../thumbnail.js\";\nimport {Dot} from \"../dotIndicator/dot.js\";\n\nexport default class GameRecord extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0\n    };\n    this.changePage = this.changePage.bind(this);\n  }\n  changePage(page) {\n    this.setState({page: page});\n  }\n  render() {\n    let resultNum = 3;\n    let {record} = this.props;\n    if (!record) {\n      return (\n        <div className=\"record-empty\">No available game records</div>\n      );\n    }\n    let recordList, dots, dotsNum;\n    if (record) {\n      if (record.length <= resultNum) {\n        record = record.concat([null, null, null]).slice(0, resultNum);\n      } else {\n        let start = this.state.page * resultNum;\n        let end =\n                    start + resultNum >= record.length\n                      ? record.length\n                      : start + resultNum;\n        record =\n                    end === start + resultNum\n                      ? record.slice(start, end)\n                      : record.slice(start, end);\n      }\n      recordList = record.map((recordItem, index) => (\n        <RecordItem\n          key={`record-item-${index}`}\n          index={index}\n          changeRecord={this.props.changeRecord}\n          current={this.props.currentRecord === index}\n          record={recordItem}\n        />\n      ));\n\n      dotsNum = Math.ceil(record.length / resultNum);\n      dots =\n                dotsNum <= 1\n                  ? null\n                  : (dots = Array.from({length: dotsNum})\n                    .fill(0)\n                    .map((dotItem, index) => (\n                      <Dot\n                        key={`dot-${index}`}\n                        changePage={this.changePage}\n                        page={index}\n                        current={index === this.state.page}\n                      />\n                    )));\n    }\n\n    return (\n      <div className=\"record-list\">\n        {this.props.record && (\n          <div className=\"record-header\">\n            <div />\n            <div />\n            <ThumbailGroup\n              teamOrder={0}\n              players={this.props.players}\n              size={32}\n            />\n            <ThumbailGroup\n              teamOrder={1}\n              players={this.props.players}\n              size={32}\n            />\n          </div>\n        )}\n        {recordList}\n        <div className=\"dots-holder\">\n          <div className=\"dots-holder-inner\">{dots}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"../thumbnail.js\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"../constant.js\";\n\nexport const Hand = ({player, cards, direction}) => {\n  let display = [[], [], [], []];\n  cards.map(card => display[Math.floor(card.value / 13)].push(card));\n  let displaySuit = display.map((suit, index) => (\n    <div className=\"hand\" key={`suit-${index}`}>\n      <div>{SUIT_SHAPE[index](0.15)}</div>\n      <div className=\"card-value\">\n        {suit.map((card, index) => (\n          <div key={`suit-${index}`}>\n            {CARD_RANK[card.value % CARD_NUM.HAND]}\n          </div>\n        ))}\n      </div>\n    </div>\n  ));\n  return (\n    <div className={`rewind-player ${direction}`}>\n      <div>\n        <Thumbnail name={player} size={26} />\n      </div>\n      <div className=\"hand-wrapper\">{displaySuit}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {Thumbnail} from \"../thumbnail.js\";\nimport {CARD_NUM, CARD_RANK, SUIT_SHAPE} from \"../constant.js\";\n\nexport const RewindAuction = ({players, bid}) => {\n  let {declarer, trump, trick} = bid;\n  return (\n    <div className=\"rewind-auction\">\n      <h3>Auction</h3>\n      <div>\n        <Thumbnail name={players[declarer]} size={26} />\n      </div>\n      <div>\n        {trick + 1} {SUIT_SHAPE[trump](0.15)}\n      </div>\n    </div>\n  );\n};\n\n\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ThumbailGroup} from \"../thumbnail.js\";\nimport {teamScore} from \"../socre.js\";\n\nexport const RewindResult = ({players, cards}) => {\n  let score = teamScore(cards);\n  return (\n    <div className=\"rewind-result\">\n      <h3>Result</h3>\n      <div>\n        <ThumbailGroup teamOrder={0} players={players} size={20} />\n        <div>{score.teamA}</div>\n      </div>\n      <div>\n        <ThumbailGroup teamOrder={1} players={players} size={20} />\n        <div>{score.teamB}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Hand} from \"./hand.js\";\nimport {mapToFourHands} from \"../examineCards.js\";\nimport {DIRECTION} from \"../constant.js\";\nimport {RewindAuction} from \"./rewindAuction.js\";\nimport {RewindResult} from \"./rewindResult.js\";\n\nexport default class GameRewind extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if (!this.props.record) {\n      return null;\n    }\n    let {cards, bid} = this.props.record;\n    let fourHandCards = mapToFourHands(cards);\n    let fourHands = fourHandCards.map((cards, index) => (\n      <Hand\n        direction={DIRECTION[index]}\n        key={`hand-${index}`}\n        cards={cards}\n        player={this.props.players[index]}\n      />\n    ));\n    return (\n      <div className=\"rewind\">\n        {fourHands}\n        <RewindAuction players={this.props.players} bid={bid} />\n        <RewindResult players={this.props.players} cards={cards} />\n        <div />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {DB} from \"../firebase/db.js\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport randomColor from \"randomcolor\";\nimport {SUIT_SHAPE, Emoji} from \"./constant.js\";\n\nexport default class Chatroom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\"\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.addEmoji = this.addEmoji.bind(this);\n    this.msgEnd;\n    this.emoji = Emoji;\n  }\n  handleKeyPress(e) {\n    // && this.state.message.length\n    if (e.key === \"Enter\") {\n      this.sendMessage();\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n  addEmoji(emoji) {\n    this.setState({message: this.state.message + emoji});\n  }\n  sendMessage(e) {\n    dispatchToDatabase(\"SEND_MESSAGE_TO_CHATROOM\", {\n      message: this.state.message,\n      currentUser: this.props.currentUser,\n      table: this.props.table\n    });\n    this.setState({\n      message: \"\"\n    });\n  }\n  handleChange(e) {\n    this.setState({message: e.currentTarget.value});\n  }\n  scrollToBottom() {\n    // in order to fix message will scroll to bottom\n    setTimeout(() => {\n      this.msgEnd.scrollIntoView({behavior: \"smooth\", block: \"end\"});\n    }, 10);\n  }\n  render() {\n    let {currentUser, table, chatroom} = this.props;\n    if (!table || !currentUser) {\n      return null;\n    }\n    let {players} = table;\n    let messageList;\n    let emojiList = this.emoji.map((emj, i) => (\n      <a\n        key={`emj-${i}`}\n        className=\"emjbtn\"\n        onClick={() => this.addEmoji(emj)}>\n        {emj}\n      </a>\n    ));\n\n    if (chatroom && chatroom.message && table && table.viewers) {\n      let end = Object.keys(chatroom.message).length;\n      let chatStart = 0; //end - chatLen >= 0 ? end - chatLen : 0;\n      let isCurrentUserAPlayer = players.some(\n        player => player === currentUser.uid\n      );\n      let msgMapList;\n      if (isCurrentUserAPlayer) {\n        msgMapList = Object.keys(chatroom.message)\n          .sort((a, b) => +a - +b)\n          .filter(key => chatroom.message[key].isPlayer);\n      } else {\n        msgMapList = Object.keys(chatroom.message).sort(\n          (a, b) => +a - +b\n        );\n      }\n\n      messageList = msgMapList.map((id, index) => {\n        let color = table.viewers[chatroom.message[id].uid];\n        let symbol = null;\n        let playerIndex = players.findIndex(\n          player => player === chatroom.message[id].uid\n        );\n\n        if (playerIndex > -1) {\n          symbol = (\n            <div\n              style={{backgroundColor: color}}\n              className=\"symbol\">\n              {SUIT_SHAPE[playerIndex](0.1, \"#ffffff\")}\n            </div>\n          );\n        }\n        let msg = chatroom.message[id].content;\n\n        return (\n          <div className=\"msg\" key={`message-${index}`}>\n            <a>\n              {symbol}\n              <b style={{color: color}}>\n                {chatroom.message[id].displayName}{\" \"}\n                <b className=\"comma\">:</b>\n              </b>\n              {msg}\n            </a>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"chatroom\">\n        <div className=\"msg-wrapper\">\n          {messageList}\n\n          <div\n            ref={el => {\n              this.msgEnd = el;\n            }}\n            style={{float: \"left\", clear: \"both\"}}>\n            <i />\n          </div>\n        </div>\n        <div className=\"typing-area\">\n          <textarea\n            placeholder=\"type something...\"\n            rows=\"10\"\n            col=\"50\"\n            value={this.state.message}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n          />\n          <div className=\"emoji\">{emojiList}</div>\n          <button onClick={this.sendMessage}>送出</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport GameRecord from \"./gameRecord.js\";\nimport GameRewind from \"./gameRewind.js\";\nimport {TAB_OPTION} from \"../constant.js\";\nimport Chatroom from \"../chatroom.js\";\n\nexport default class Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    let {record} = this.props.table;\n    this.state = {\n      tab: 0,\n      currentRecord: record ? record.length - 1 : null\n    };\n    this.changeRecord = this.changeRecord.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n  }\n  changeRecord(index) {\n    this.setState({currentRecord: index});\n  }\n  handleTab(index) {\n    this.setState({tab: index});\n  }\n  render() {\n    if (!this.props.table) return null;\n    // let options = TAB_OPTION.map((opt, i) => (\n    //   <div\n    //     onClick={() => this.handleTab(i)}\n    //     className={this.state.tab === i ? `current ${opt}` : `${opt}`}\n    //     key={`opt-${i}`}>\n    //     <span />\n    //     <b>{opt}</b>\n    //   </div>\n    // ));\n    // let currentRecord = null;\n    // if (this.props.table.record) {\n    //   currentRecord =\n    //             this.state.currentRecord >= 0 &&\n    //             this.props.table.record[this.state.currentRecord];\n    // }\n\n    // let domRecord = (\n    //   <div>\n    //     <GameRecord\n    //       players={this.props.table.players}\n    //       record={this.props.table.record || null}\n    //       changeRecord={this.changeRecord}\n    //       currentRecord={this.state.currentRecord}\n    //     />\n    //     <GameRewind\n    //       players={this.props.table.players}\n    //       record={currentRecord}\n    //     />\n    //   </div>\n    // );\n    // let domChatroom = (\n    //   <Chatroom\n    //     currentUser={this.props.currentUser}\n    //     chatroom={this.props.chatroom}\n    //     table={this.props.table}\n    //   />\n    // );\n\n    // let currentTabContent = this.state.tab === 0 ? domChatroom : domRecord;\n\n    return (\n      <div className=\"sidebar\">\n        <div className=\"tabs\" style={{marginLeft: 30}}>\n          <div className={\"current chatroom\"}>\n            <span />\n            <b>chatroom</b>\n          </div>\n        </div>\n        <div className=\"tab-wrapper\" />\n        <div>\n          <Chatroom\n            currentUser={this.props.currentUser}\n            chatroom={this.props.chatroom}\n            table={this.props.table}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// <div>{currentTabContent}</div>\n","import {DB} from \"../firebase/db.js\";\nimport {dispatch} from \"../reducer/reducer.js\";\nexport default class ChatroomModel {\n  constructor(linkId, id) {\n    this.linkId = linkId;\n    this.id = id;\n    this.get();\n  }\n  get() {\n    DB.getChatRoomById(this.id).then(chatroom => {\n      this.update(chatroom);\n      this.listenChanged();\n    });\n  }\n  update(chatroom) {\n    dispatch(\"UPDATE_CHAT_ROOM\", {\n      chatroom: chatroom\n    });\n  }\n  listenChanged() {\n    DB.getNodeByPath(`chatroom/${this.id}/`, snapshot =>\n      this.update(snapshot.val())\n    );\n  }\n}\n","import {DB} from \"../firebase/db.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport ChatroomModel from \"../reducer/chatroomModel.js\";\nexport default class TableModel {\n  constructor(linkId) {\n    this.linkId = linkId;\n    this.get();\n  }\n  get() {\n    return DB.getTableByLinkId(this.linkId).then(table => {\n      this.chatroom = new ChatroomModel(this.linkId, table.id);\n      this.update(table);\n      this.listenTableChange(table);\n      return table;\n    });\n  }\n  update(table) {\n    dispatch(\"UPDATE_TABLE_DATA\", {\n      table: table\n    });\n  }\n  listenTableChange(table) {\n    DB.getNodeByPath(`tables/${table.id}/`, snapshot =>\n      this.update(snapshot.val())\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport loadingImg from \"../images/loading.svg\";\n\nimport \"../style/loading.scss\";\n\nexport default class Loading extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"main-loading\">\n        <div className=\"loading-anim\">\n          <img src={loadingImg} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./game.js\";\nimport {Redirect} from \"react-router-dom\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport Sidebar from \"./sidebar/sidebar.js\";\nimport {GAME_STATE} from \"./constant.js\";\nimport {DB} from \"../firebase/db.js\";\nimport randomColor from \"randomcolor\";\nimport {EMPTY_SEAT} from \"./constant.js\";\nimport TableModel from \"../reducer/tableModel.js\";\nimport Header from \"./header.js\";\nimport Loading from \"./loading.js\";\nimport \"../style/table.scss\";\nimport \"../style/sidebar.scss\";\nimport \"../style/record-item.scss\";\nimport \"../style/record.scss\";\nimport \"../style/dot.scss\";\nimport \"../style/rewind.scss\";\n\nexport default class Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.linkId =\n            this.props.match.params.id || window.location.hash.slice(8);\n\n    this.state = {\n      isLoad: false,\n      canRedirect: false,\n      isClosed: false\n    };\n\n    this.addPlayerToTable = this.addPlayerToTable.bind(this);\n    this.color = randomColor(\"dark\");\n  }\n\n  componentDidMount() {\n\n    // register database event and fetch table data\n    this.model = new TableModel(this.linkId);\n    let currentUser = this.props.currentUser;\n    this.model.get().then(table => {\n      this.id = table.id;\n      this.setState({isLoad: true});\n      if (!table.players.includes(currentUser.uid)) {\n        this.addPlayerToTable(table);\n      }\n    });\n\n    if (!this.props.currentUser) {\n      DB.getCurrentUser();\n    }\n  }\n\n  addPlayerToTable(table) {\n    let {players, viewers} = table;\n    let {currentUser} = this.props;\n\n    let emptySeatIndex = players.findIndex(seat => seat === EMPTY_SEAT),\n      canBePlayer =\n                players.some(seat => seat === EMPTY_SEAT) &&\n                players.every(seat => seat !== currentUser.uid),\n      canBeViewer = Boolean(!viewers || !viewers[currentUser.uid]);\n\n    if (canBePlayer) {\n      dispatchToDatabase(\"ADD_PLAYER_TO_TABLE\", {\n        currentUser: currentUser,\n        table: table,\n        emptySeatIndex: emptySeatIndex,\n        color: this.color\n      });\n    } else if (canBeViewer) {\n      dispatchToDatabase(\"ADD_VIEWER_TO_TABLE\", {\n        currentUser: currentUser,\n        table: table,\n        color: this.color\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    let {tableList, tables, currentTableId} = this.props;\n    if (!tableList) return;\n\n    if (currentTableId !== prevProps.currentTableId) {\n      this.setState({isLoad: false});\n      this.model.get().then(data => this.setState({isLoad: true}));\n    }\n\n    let {id, linkId} = this;\n\n    if (tableList[linkId] && tableList[linkId].id) {\n      if (tables[id] !== prevProps.tables[id]) {\n        this.addPlayerToTable(tables[id]);\n      }\n    }\n  }\n  render() {\n    let {canRedirect, isLoad} = this.state;\n\n    if (canRedirect) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    if (!isLoad) {\n      return <Loading />;\n    }\n\n    let {tables, currentUser, chatroom} = this.props;\n    let {id} = this;\n\n    if (!tables || !id) {\n      return null;\n    }\n\n    let targetTable = tables[id];\n\n    if (\n      targetTable.gameState &&\n            targetTable.gameState === GAME_STATE.close\n    ) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Header\n          roomNum={this.linkId || null}\n          isTableColor={true}\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={currentUser}\n        />\n        <div className=\"table\">\n          <Game\n            currentUser={currentUser}\n            currentTableId={this.props.currentTableId}\n            table={targetTable}\n          />\n          <Sidebar\n            currentUser={currentUser}\n            chatroom={chatroom}\n            table={targetTable}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport {TIMER} from \"./constant.js\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {EMPTY_SEAT} from \"../components/constant.js\";\n\nimport \"../style/table-list.scss\";\n\nexport default class OpenTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createTable = this.createTable.bind(this);\n    this.setCurrentTable = this.setCurrentTable.bind(this);\n  }\n  createTable(tableRef) {\n    if (!this.props.currentUser) {\n      console.log(\" no user login\");\n      return;\n    }\n    dispatchToDatabase(\"CREATE_TABLE\", {\n      tableRef: tableRef,\n      currentUser: this.props.currentUser\n    });\n    this.setCurrentTable(tableRef);\n  }\n  setCurrentTable(id) {\n    if (this.props.currentUser) {\n      dispatch(\"UPDATE_CURRENT_TABLE_ID\", {currentTableId: id});\n    }\n  }\n  render() {\n    let tableList = this.props.tableList;\n\n    let tableLinks;\n\n    if (tableList) {\n      let tableListKey = Object.keys(tableList);\n\n      let openTableList = tableListKey.filter(key => {\n        let tableCreateTime = +key;\n\n        if (\n          tableList[key].players\n        //&& new Date().getTime() - tableCreateTime <= TIMER.join\n        ) {\n          return tableList[key].players.some(\n            seat => seat === EMPTY_SEAT\n          );\n        } else {\n          return !tableList[key].players;\n        }\n      });\n\n      let PLAYER_NUM = 4;\n      let ROOM_NUM_LEN = 3;\n\n      tableLinks = openTableList.map((key, index) => {\n        let roomNum = key.slice(key.length - ROOM_NUM_LEN, key.length);\n        let players = this.props.tableList[key].players;\n        let playerInfo = this.props.tableList[key].playerInfo;\n        let emptySeats = players\n          ? players.filter(player => player === EMPTY_SEAT).length\n          : PLAYER_NUM - 1;\n\n        let owner = playerInfo[players[0]].displayName;\n        return (\n          <div\n            className=\"table-list-item\"\n            key={`tablelist-item-${index}}`}>\n            <div className=\"room-number\">\n              <span>{roomNum}</span>\n            </div>\n            <div>{owner}</div>\n            <div className=\"empty-seats\">{emptySeats} </div>\n            <div>\n              <Link\n                className=\"btn-style-border\"\n                onClick={() => this.setCurrentTable(key)}\n                key={key}\n                to={\n                  this.props.currentUser\n                    ? `/table/${key}`\n                    : \"/login\"\n                }>\n                                加入\n              </Link>\n            </div>\n          </div>\n        );\n      });\n    }\n\n    let tableRef = new Date().getTime();\n    let openBtn = this.props.currentUser &&\n            this.props.openBtn && (\n      <Link\n        className=\"btn-style-border\"\n        onClick={() => this.createTable(tableRef)}\n        to={\n          this.props.currentUser ? `/table/${tableRef}` : \"/login\"\n        }>\n                    我要開桌\n      </Link>\n    );\n\n    return (\n      <div className=\"table-list\">\n        {this.props.title && <h4>{this.props.title}</h4>}\n        <div className=\"table-list-header\">\n          <div>房號</div>\n          <div>桌長</div>\n          <div>空位</div>\n          <div className=\"open-table-section\">{openBtn}</div>\n        </div>\n        <div className=\"table-list-item-group\">{tableLinks}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport {dispatch, dispatchToDatabase} from \"../reducer/reducer.js\";\nimport {EMPTY_SEAT} from \"../components/constant.js\";\nimport \"../style/table-list.scss\";\n\nexport default class OpenTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createTable = this.createTable.bind(this);\n    this.setCurrentTable = this.setCurrentTable.bind(this);\n  }\n  createTable(tableRef) {\n    dispatchToDatabase(\"CREATE_TABLE\", {\n      tableRef: tableRef,\n      currentUser: this.props.currentUser\n    });\n  }\n  setCurrentTable(id) {\n    if (this.props.currentUser) {\n      dispatch(\"UPDATE_CURRENT_TABLE_ID\", {currentTableId: id});\n    }\n  }\n  render() {\n    let {tableList} = this.props;\n    let tableLinks;\n    if (tableList) {\n      let tableListKey = Object.keys(tableList);\n      let playingTables = tableListKey.filter(\n        key =>\n          tableList[key].players &&\n                    !tableList[key].players.some(\n                      player => player === EMPTY_SEAT\n                    )\n      );\n      tableLinks = playingTables.map((key, index) => {\n        let {players, playerInfo} = this.props.tableList[key];\n        let playerList = players.map((playerKey, index) => (\n          <div key={`playerSeat-${index}`}>\n            {playerInfo[playerKey]\n              ? playerInfo[playerKey].displayName\n              : \"Anonymous\"}\n          </div>\n        ));\n        return (\n          <div\n            className=\"playing-table\"\n            key={`playing-table-item-${index}}`}>\n            <div className=\"room-number\"><span>{key.slice(key.length-3, key.length)}</span></div>\n            {playerList}\n            <div>\n              <Link\n                onClick={() => this.setCurrentTable(key)}\n                className=\"btn-style-border\"\n                to={\n                  this.props.currentUser\n                    ? `/table/${key}`\n                    : \"/login\"\n                }>\n                 觀賞 \n              </Link>\n            </div>\n          </div>\n        );\n      });\n    }\n    return (\n      <div className=\"table-list\">\n        <h4>{this.props.title}</h4>\n        <div className=\"table-list-header playing-table-header\">\n          <div>房號</div>\n          <div>南</div>\n          <div>西</div>\n          <div>北</div>\n          <div>東</div>\n          <div />\n        </div>\n        <div className=\"table-list-item-group\">{tableLinks}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  IndexRoute,\n  BrowserRouter,\n  Router,\n  Route,\n  Switch,\n  Link\n} from \"react-router-dom\";\nimport {EMPTY_SEAT} from \"./constant.js\";\nimport OpenTables from \"./openTables.js\";\nimport PlayingTables from \"./playingTables.js\";\nimport \"../style/lobby.scss\";\nimport openImg from \"../images/open.svg\";\nimport playImg from \"../images/play.svg\";\nimport Header from \"./header.js\";\nimport Loading from \"./loading.js\";\n\nexport default class Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let open = 0,\n      playing = 0;\n    if (!this.props.isLoad) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"lobby\">\n          <div className=\"lobby-title\">\n            <h2> 鍛鍊腦力的最佳活動 <br /> <span>支援多人連線，單機版電腦對戰模式</span>\n            </h2>\n          </div>\n          <div className=\"table-lists\">\n            <div className=\"table-list-wrapper\">\n              <div className=\"table-num\" />\n              <div className=\"table-list-inner\">\n                <img src={openImg} />\n                <OpenTables\n                  title={\"揪咖打牌\"}\n                  openBtn={true}\n                  tables={this.props.tables}\n                  currentUser={this.props.currentUser}\n                  open={true}\n                  tableList={this.props.tableList}\n                />\n              </div>\n            </div>\n            <div className=\"table-list-wrapper\">\n              <div className=\"table-num\" />\n              <div className=\"table-list-inner\">\n                <img src={playImg} />\n                <PlayingTables\n                  tables={this.props.tables}\n                  title={\"熱門牌桌\"}\n                  openBtn={true}\n                  open={false}\n                  currentUser={this.props.currentUser}\n                  tableList={this.props.tableList}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {DB} from \"../firebase/db.js\";\nimport \"../style/signup.scss\";\nimport \"../style/btn.scss\";\nimport \"../style/checkbox.scss\";\nimport {Redirect} from \"react-router-dom\";\nimport {dispatchToDatabase} from \"../reducer/reducer.js\";\nimport Header from \"./header.js\";\n\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm: \"\",\n      agreement: false,\n      message: \"\",\n      redirect: false\n    };\n    this.handleSignUp = this.handleSignUp.bind(this);\n  }\n  handleSignUp() {\n    let auth = DB.auth;\n    let {email, password, name} = this.state;\n    if (!email || !password || !confirm) return;\n    let promise = auth.createUserWithEmailAndPassword(email, password);\n    promise\n      .then(user => {\n        let randomIcon = Math.floor(Math.random() * 20);\n        this.props.updateUserInfo(user, {\n          name: name,\n          email: email\n        });\n        return auth.onAuthStateChanged(user => {\n          if (user) {\n            let userInfo = {\n              displayName: name,\n              email: email\n            };\n            user.updateProfile(userInfo);\n            DB.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n              if (!snapshot.val()) {\n                dispatchToDatabase(\"CREATE_USER\", {\n                  uid: user.uid,\n                  userInfo: userInfo\n                });\n              }\n            });\n          } else {\n            console.log(\"no user uid\");\n          }\n        });\n      })\n      .then(user => this.setState({redirect: true}))\n      .catch(error => this.setState({message: error.message}));\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Header\n          getUserAuthInfo={this.props.getUserAuthInfo}\n          currentUser={this.props.currentUser}\n        />\n        <div className=\"singup-wrapper\">\n          <div className=\"signup\">\n            <h2>註冊</h2>\n            <div>\n              <h3>玩家名稱</h3>\n              <input\n                placeholder=\"請輸入玩家名稱\"\n                type=\"text\"\n                onChange={e => {\n                  this.setState({\n                    name: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.name}\n              />\n            </div>\n            <div>\n              <h3>密碼</h3>\n              <input\n                placeholder=\"請輸入至少 6 位數\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    password: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.password}\n              />\n            </div>\n            <div>\n              <h3>確認密碼</h3>\n              <input\n                placeholder=\"請輸入至少 6 位數\"\n                type=\"password\"\n                onChange={e => {\n                  this.setState({\n                    confirm: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.confirm}\n              />\n            </div>\n            <div>\n              <h3>電子信箱</h3>\n              <input\n                type=\"email\"\n                placeholder=\"john@bridge.com\"\n                onChange={e => {\n                  this.setState({\n                    email: e.currentTarget.value,\n                    message: \"\"\n                  });\n                }}\n                value={this.state.email}\n              />\n            </div>\n            <div>\n              <div className=\"error-text error-text-panel\">\n                {this.state.message}\n              </div>\n              <div className=\"btn-group\">\n                <button\n                  onClick={this.handleSignUp}\n                  className=\"btn-style-round\">\n                                    註冊\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// <label className=\"checkbox-lable\">\n//   <input id=\"agreement\" type=\"checkbox\" />\n//   <div\n//     className={\n//       this.state.agreement ? \"checked\" : \"\"\n//     }\n//     onClick={() =>\n//       this.setState({\n//         agreement: !this.state.agreement\n//       })\n//     }\n//   />\n// </label>\n\n// <span\n//   onClick={() =>\n//     this.setState({\n//       agreement: !this.state.agreement\n//     })\n//   }>\n//                   I allow the use of collected data about my study\n//                   behavior for research purposes. The data\n//                   contains information from game playing and\n//                   chatting messages. No individuals can be\n//                   identified from publications.\n// </span>\n","import \"./style/main.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Login from \"./components/login.js\";\nimport Table from \"./components/table.js\";\nimport Lobby from \"./components/lobby.js\";\nimport Loading from \"./components/loading.js\";\nimport SignUp from \"./components/signUp.js\";\nimport {DB} from \"./firebase/db.js\";\nimport {Route, HashRouter} from \"react-router-dom\";\nimport {dispatch, store} from \"./reducer/reducer.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = store.getState();\n    this.update = this.update.bind(this);\n    this.stopLoading = this.stopLoading.bind(this);\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n    this.getUserAuthInfo = this.getUserAuthInfo.bind(this);\n  }\n  update() {\n    this.setState(store.getState());\n  }\n  componentDidMount() {\n    this.unSubscribe = store.subscribe(this.update.bind(this));\n    this.stopLoading();\n  }\n  componentDidUnMount() {\n    this.unSubscribe();\n  }\n  updateUserInfo(user, userInfo) {\n    dispatch(\"UPDATE_USER_INFO\", {\n      user: user,\n      userInfo: userInfo\n    });\n  }\n  getUserAuthInfo() {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      DB.auth.onAuthStateChanged(user => {\n        if (user) {\n          DB.getDataByPathOnce(`users/${user.uid}`, snapshot => {\n            let userInfo = snapshot.val();\n            resolve(userInfo);\n            _this.stopLoading();\n            dispatch(\"UPDATE_USER_INFO\", {\n              user: user,\n              userInfo: snapshot.val()\n            });\n          });\n        } else {\n          reject(true);\n          _this.stopLoading();\n          return dispatch(\"UPDATE_USER_INFO\", {\n            userInfo: null,\n            user: null\n          });\n        }\n        dispatch(\"UPDATE_LOADING_STATE\", {isLoad: true});\n      });\n    });\n  }\n  stopLoading() {\n    dispatch(\"UPDATE_LOADING_STATE\", {isLoad: true});\n  }\n  render() {\n    if (!this.state.isLoad) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        <HashRouter>\n          <div>\n            <div>\n              <Route\n                path=\"/login\"\n                exact\n                render={props => (\n                  <Login\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    currentUser={this.state.user}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={props => (\n                  <SignUp\n                    updateUserInfo={this.updateUserInfo}\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    currentUser={this.state.user}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                path=\"/table/:id\"\n                render={props => (\n                  <Table\n                    currentTableId={\n                      this.state.currentTableId\n                    }\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    chatroom={this.state.chatroom}\n                    tables={this.state.tables}\n                    tableList={this.state.tableList}\n                    currentUser={this.state.user}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Lobby\n                    isLoad={this.state.isLoad}\n                    getUserAuthInfo={this.getUserAuthInfo}\n                    tables={this.state.tables || null}\n                    currentUser={this.state.user}\n                    tableList={this.state.tableList}\n                  />\n                )}\n              />\n            </div>\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n","module.exports = __webpack_public_path__ + \"d78f81ef470d6731d6d27748d4890463.svg\";"],"sourceRoot":""}